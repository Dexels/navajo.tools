
/*
* generated by Xtext
*/
lexer grammar InternalNavajoExpressionLexer;


@header {
package com.dexels.navajo.dsl.expression.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}




KEYWORD_1 : ';';



RULE_XML_GT : '&gt;';

RULE_XML_LT : '&lt;';

RULE_XML_GTEQ : '&gt;=';

RULE_XML_LTEQ : '&lt;=';

RULE_DOT : '.';

RULE_NUMBER : ('0'..'9')+ (RULE_DOT ('0'..'9')+)?;

RULE_BADNUMBER : ('0'..'9')+ RULE_DOT;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_TRUE : ('true'|'TRUE');

RULE_FALSE : ('false'|'FALSE');

RULE_NULL : ('null'|'NULL');

RULE_TODAY : ('today'|'TODAY');

RULE_FORALL : 'FORALL';

RULE_PARENT : '..';

RULE_AT : '@';

RULE_COLON : ':';

RULE_NOT : '!';

RULE_XMLESCAPED : '&' RULE_ID ';';

RULE_LITERALSTRING : ('\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\''|'<![CDATA[' ( options {greedy=false;} : . )*']]>');

RULE_SQBRACKET_OPEN : '[';

RULE_SQBRACKET_CLOSE : ']';

RULE_TML_SEPARATOR : '/';

RULE_TML_EXISTS : '?';

RULE_DOLLAR : '$';

RULE_BRACKET_OPEN : '(';

RULE_BRACKET_CLOSE : ')';

RULE_COMMA : ',';

RULE_AND : 'AND';

RULE_OR : 'OR';

RULE_HASH : '#';

RULE_CURLYOPEN : '{';

RULE_CURLYCLOSE : '}';

RULE_EQUALSEQUALS : '==';

RULE_NEQUALS : '!=';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_MULTIPLY : '*';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;



