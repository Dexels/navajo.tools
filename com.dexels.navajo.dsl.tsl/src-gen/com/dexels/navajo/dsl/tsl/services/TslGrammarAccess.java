/*
* generated by Xtext
*/
package com.dexels.navajo.dsl.tsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import com.dexels.navajo.dsl.expression.services.NavajoExpressionGrammarAccess;

@Singleton
public class TslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class TmlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Tml");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTmlAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cXMLHEADTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cTSLTAGTerminalRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final RuleCall cNAVASCRIPTTAGTerminalRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final RuleCall cNOTESTerminalRuleCall_4_0_0 = (RuleCall)cGroup_4_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_0_2 = (RuleCall)cGroup_4_0.eContents().get(2);
		private final RuleCall cGarbageParserRuleCall_4_0_3 = (RuleCall)cGroup_4_0.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_0_4 = (RuleCall)cGroup_4_0.eContents().get(4);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final RuleCall cREPOSITORYTerminalRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final RuleCall cGarbageParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final RuleCall cIDTAGTerminalRuleCall_4_2_0 = (RuleCall)cGroup_4_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_2_1 = (RuleCall)cGroup_4_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_2_2 = (RuleCall)cGroup_4_2.eContents().get(2);
		private final RuleCall cGarbageParserRuleCall_4_2_3 = (RuleCall)cGroup_4_2.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_2_4 = (RuleCall)cGroup_4_2.eContents().get(4);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final RuleCall cAUTHORTerminalRuleCall_4_3_0 = (RuleCall)cGroup_4_3.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_3_1 = (RuleCall)cGroup_4_3.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_3_2 = (RuleCall)cGroup_4_3.eContents().get(2);
		private final RuleCall cGarbageParserRuleCall_4_3_3 = (RuleCall)cGroup_4_3.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_3_4 = (RuleCall)cGroup_4_3.eContents().get(4);
		private final Group cGroup_4_4 = (Group)cUnorderedGroup_4.eContents().get(4);
		private final RuleCall cXMLNSTerminalRuleCall_4_4_0 = (RuleCall)cGroup_4_4.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_4_1 = (RuleCall)cGroup_4_4.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_4_2 = (RuleCall)cGroup_4_4.eContents().get(2);
		private final RuleCall cGarbageParserRuleCall_4_4_3 = (RuleCall)cGroup_4_4.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_4_4 = (RuleCall)cGroup_4_4.eContents().get(4);
		private final Group cGroup_4_5 = (Group)cUnorderedGroup_4.eContents().get(5);
		private final RuleCall cXMLNSTerminalRuleCall_4_5_0 = (RuleCall)cGroup_4_5.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_4_5_1 = (RuleCall)cGroup_4_5.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_4_5_2 = (RuleCall)cGroup_4_5.eContents().get(2);
		private final RuleCall cEQUALSTerminalRuleCall_4_5_3 = (RuleCall)cGroup_4_5.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_5_4 = (RuleCall)cGroup_4_5.eContents().get(4);
		private final RuleCall cGarbageParserRuleCall_4_5_5 = (RuleCall)cGroup_4_5.eContents().get(5);
		private final RuleCall cQUOTETerminalRuleCall_4_5_6 = (RuleCall)cGroup_4_5.eContents().get(6);
		private final Group cGroup_4_6 = (Group)cUnorderedGroup_4.eContents().get(6);
		private final RuleCall cIDTerminalRuleCall_4_6_0 = (RuleCall)cGroup_4_6.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_4_6_1 = (RuleCall)cGroup_4_6.eContents().get(1);
		private final RuleCall cSCHEMALOCATIONTerminalRuleCall_4_6_2 = (RuleCall)cGroup_4_6.eContents().get(2);
		private final RuleCall cEQUALSTerminalRuleCall_4_6_3 = (RuleCall)cGroup_4_6.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_6_4 = (RuleCall)cGroup_4_6.eContents().get(4);
		private final RuleCall cGarbageParserRuleCall_4_6_5 = (RuleCall)cGroup_4_6.eContents().get(5);
		private final RuleCall cQUOTETerminalRuleCall_4_6_6 = (RuleCall)cGroup_4_6.eContents().get(6);
		private final Group cGroup_4_7 = (Group)cUnorderedGroup_4.eContents().get(7);
		private final RuleCall cIDTerminalRuleCall_4_7_0 = (RuleCall)cGroup_4_7.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_4_7_1 = (RuleCall)cGroup_4_7.eContents().get(1);
		private final RuleCall cNONAMESPACESCHEMALOCATIONTerminalRuleCall_4_7_2 = (RuleCall)cGroup_4_7.eContents().get(2);
		private final RuleCall cEQUALSTerminalRuleCall_4_7_3 = (RuleCall)cGroup_4_7.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_7_4 = (RuleCall)cGroup_4_7.eContents().get(4);
		private final RuleCall cGarbageParserRuleCall_4_7_5 = (RuleCall)cGroup_4_7.eContents().get(5);
		private final RuleCall cQUOTETerminalRuleCall_4_7_6 = (RuleCall)cGroup_4_7.eContents().get(6);
		private final Group cGroup_4_8 = (Group)cUnorderedGroup_4.eContents().get(8);
		private final RuleCall cXMLNSTerminalRuleCall_4_8_0 = (RuleCall)cGroup_4_8.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_8_1 = (RuleCall)cGroup_4_8.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_8_2 = (RuleCall)cGroup_4_8.eContents().get(2);
		private final RuleCall cGarbageParserRuleCall_4_8_3 = (RuleCall)cGroup_4_8.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_4_8_4 = (RuleCall)cGroup_4_8.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_5_0_0 = (RuleCall)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Assignment cChildrenAssignment_5_0_1_0 = (Assignment)cAlternatives_5_0_1.eContents().get(0);
		private final RuleCall cChildrenMessageParserRuleCall_5_0_1_0_0 = (RuleCall)cChildrenAssignment_5_0_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cChildrenMapParserRuleCall_5_0_1_1_0 = (RuleCall)cChildrenAssignment_5_0_1_1.eContents().get(0);
		private final Assignment cChildrenAssignment_5_0_1_2 = (Assignment)cAlternatives_5_0_1.eContents().get(2);
		private final RuleCall cChildrenParamParserRuleCall_5_0_1_2_0 = (RuleCall)cChildrenAssignment_5_0_1_2.eContents().get(0);
		private final Assignment cMethodsAssignment_5_0_1_3 = (Assignment)cAlternatives_5_0_1.eContents().get(3);
		private final RuleCall cMethodsMethodsParserRuleCall_5_0_1_3_0 = (RuleCall)cMethodsAssignment_5_0_1_3.eContents().get(0);
		private final Assignment cChildrenAssignment_5_0_1_4 = (Assignment)cAlternatives_5_0_1.eContents().get(4);
		private final RuleCall cChildrenDebugTagParserRuleCall_5_0_1_4_0 = (RuleCall)cChildrenAssignment_5_0_1_4.eContents().get(0);
		private final Assignment cChildrenAssignment_5_0_1_5 = (Assignment)cAlternatives_5_0_1.eContents().get(5);
		private final RuleCall cChildrenIncludeParserRuleCall_5_0_1_5_0 = (RuleCall)cChildrenAssignment_5_0_1_5.eContents().get(0);
		private final Assignment cChildrenAssignment_5_0_1_6 = (Assignment)cAlternatives_5_0_1.eContents().get(6);
		private final RuleCall cChildrenValidationsParserRuleCall_5_0_1_6_0 = (RuleCall)cChildrenAssignment_5_0_1_6.eContents().get(0);
		private final Assignment cChildrenAssignment_5_0_1_7 = (Assignment)cAlternatives_5_0_1.eContents().get(7);
		private final RuleCall cChildrenCommentClauseParserRuleCall_5_0_1_7_0 = (RuleCall)cChildrenAssignment_5_0_1_7.eContents().get(0);
		private final RuleCall cNAVASCRIPT_ENDTerminalRuleCall_5_0_2 = (RuleCall)cGroup_5_0.eContents().get(2);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_5_1 = (RuleCall)cAlternatives_5.eContents().get(1);
		
		////xsi:noNamespaceSchemaLocation
		//Tml:
		//	{Tml} XMLHEAD? LT (TSLTAG | NAVASCRIPTTAG) ((NOTES EQUALS QUOTE Garbage QUOTE)? & (REPOSITORY EQUALS QUOTE Garbage
		//	QUOTE)? & (IDTAG EQUALS QUOTE Garbage QUOTE)? & (AUTHOR EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage
		//	QUOTE)? & (XMLNS COLON ID EQUALS QUOTE Garbage QUOTE)? & (ID COLON SCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (ID
		//	COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage QUOTE)?) (GT
		//	(children+=Message | children+=Map | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
		//	children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//{Tml} XMLHEAD? LT (TSLTAG | NAVASCRIPTTAG) ((NOTES EQUALS QUOTE Garbage QUOTE)? & (REPOSITORY EQUALS QUOTE Garbage
		//QUOTE)? & (IDTAG EQUALS QUOTE Garbage QUOTE)? & (AUTHOR EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage
		//QUOTE)? & (XMLNS COLON ID EQUALS QUOTE Garbage QUOTE)? & (ID COLON SCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (ID
		//COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage QUOTE)?) (GT
		//(children+=Message | children+=Map | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
		//children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//{Tml}
		public Action getTmlAction_0() { return cTmlAction_0; }

		//XMLHEAD?
		public RuleCall getXMLHEADTerminalRuleCall_1() { return cXMLHEADTerminalRuleCall_1; }

		//LT
		public RuleCall getLTTerminalRuleCall_2() { return cLTTerminalRuleCall_2; }

		//TSLTAG | NAVASCRIPTTAG
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//TSLTAG
		public RuleCall getTSLTAGTerminalRuleCall_3_0() { return cTSLTAGTerminalRuleCall_3_0; }

		//NAVASCRIPTTAG
		public RuleCall getNAVASCRIPTTAGTerminalRuleCall_3_1() { return cNAVASCRIPTTAGTerminalRuleCall_3_1; }

		//(NOTES EQUALS QUOTE Garbage QUOTE)? & (REPOSITORY EQUALS QUOTE Garbage QUOTE)? & (IDTAG EQUALS QUOTE Garbage QUOTE)? &
		//(AUTHOR EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage QUOTE)? & (XMLNS COLON ID EQUALS QUOTE Garbage
		//QUOTE)? & (ID COLON SCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (ID COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE
		//Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage QUOTE)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//(NOTES EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//NOTES
		public RuleCall getNOTESTerminalRuleCall_4_0_0() { return cNOTESTerminalRuleCall_4_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_0_1() { return cEQUALSTerminalRuleCall_4_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_0_2() { return cQUOTETerminalRuleCall_4_0_2; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_0_3() { return cGarbageParserRuleCall_4_0_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_0_4() { return cQUOTETerminalRuleCall_4_0_4; }

		//(REPOSITORY EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//REPOSITORY
		public RuleCall getREPOSITORYTerminalRuleCall_4_1_0() { return cREPOSITORYTerminalRuleCall_4_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_1_1() { return cEQUALSTerminalRuleCall_4_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_1_2() { return cQUOTETerminalRuleCall_4_1_2; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_1_3() { return cGarbageParserRuleCall_4_1_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_1_4() { return cQUOTETerminalRuleCall_4_1_4; }

		//(IDTAG EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//IDTAG
		public RuleCall getIDTAGTerminalRuleCall_4_2_0() { return cIDTAGTerminalRuleCall_4_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_2_1() { return cEQUALSTerminalRuleCall_4_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_2_2() { return cQUOTETerminalRuleCall_4_2_2; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_2_3() { return cGarbageParserRuleCall_4_2_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_2_4() { return cQUOTETerminalRuleCall_4_2_4; }

		//(AUTHOR EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_3() { return cGroup_4_3; }

		//AUTHOR
		public RuleCall getAUTHORTerminalRuleCall_4_3_0() { return cAUTHORTerminalRuleCall_4_3_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_3_1() { return cEQUALSTerminalRuleCall_4_3_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_3_2() { return cQUOTETerminalRuleCall_4_3_2; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_3_3() { return cGarbageParserRuleCall_4_3_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_3_4() { return cQUOTETerminalRuleCall_4_3_4; }

		//(XMLNS EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_4() { return cGroup_4_4; }

		//XMLNS
		public RuleCall getXMLNSTerminalRuleCall_4_4_0() { return cXMLNSTerminalRuleCall_4_4_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_4_1() { return cEQUALSTerminalRuleCall_4_4_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_4_2() { return cQUOTETerminalRuleCall_4_4_2; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_4_3() { return cGarbageParserRuleCall_4_4_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_4_4() { return cQUOTETerminalRuleCall_4_4_4; }

		//(XMLNS COLON ID EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_5() { return cGroup_4_5; }

		//XMLNS
		public RuleCall getXMLNSTerminalRuleCall_4_5_0() { return cXMLNSTerminalRuleCall_4_5_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_4_5_1() { return cCOLONTerminalRuleCall_4_5_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_4_5_2() { return cIDTerminalRuleCall_4_5_2; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_5_3() { return cEQUALSTerminalRuleCall_4_5_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_5_4() { return cQUOTETerminalRuleCall_4_5_4; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_5_5() { return cGarbageParserRuleCall_4_5_5; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_5_6() { return cQUOTETerminalRuleCall_4_5_6; }

		//(ID COLON SCHEMALOCATION EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_6() { return cGroup_4_6; }

		//ID
		public RuleCall getIDTerminalRuleCall_4_6_0() { return cIDTerminalRuleCall_4_6_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_4_6_1() { return cCOLONTerminalRuleCall_4_6_1; }

		//SCHEMALOCATION
		public RuleCall getSCHEMALOCATIONTerminalRuleCall_4_6_2() { return cSCHEMALOCATIONTerminalRuleCall_4_6_2; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_6_3() { return cEQUALSTerminalRuleCall_4_6_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_6_4() { return cQUOTETerminalRuleCall_4_6_4; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_6_5() { return cGarbageParserRuleCall_4_6_5; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_6_6() { return cQUOTETerminalRuleCall_4_6_6; }

		//(ID COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_7() { return cGroup_4_7; }

		//ID
		public RuleCall getIDTerminalRuleCall_4_7_0() { return cIDTerminalRuleCall_4_7_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_4_7_1() { return cCOLONTerminalRuleCall_4_7_1; }

		//NONAMESPACESCHEMALOCATION
		public RuleCall getNONAMESPACESCHEMALOCATIONTerminalRuleCall_4_7_2() { return cNONAMESPACESCHEMALOCATIONTerminalRuleCall_4_7_2; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_7_3() { return cEQUALSTerminalRuleCall_4_7_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_7_4() { return cQUOTETerminalRuleCall_4_7_4; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_7_5() { return cGarbageParserRuleCall_4_7_5; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_7_6() { return cQUOTETerminalRuleCall_4_7_6; }

		//(XMLNS EQUALS QUOTE Garbage QUOTE)?
		public Group getGroup_4_8() { return cGroup_4_8; }

		//XMLNS
		public RuleCall getXMLNSTerminalRuleCall_4_8_0() { return cXMLNSTerminalRuleCall_4_8_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_8_1() { return cEQUALSTerminalRuleCall_4_8_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_8_2() { return cQUOTETerminalRuleCall_4_8_2; }

		//Garbage
		public RuleCall getGarbageParserRuleCall_4_8_3() { return cGarbageParserRuleCall_4_8_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_8_4() { return cQUOTETerminalRuleCall_4_8_4; }

		//GT (children+=Message | children+=Map | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
		//children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//GT (children+=Message | children+=Map | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
		//children+=Validations | children+=CommentClause)* NAVASCRIPT_END
		public Group getGroup_5_0() { return cGroup_5_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_5_0_0() { return cGTTerminalRuleCall_5_0_0; }

		//(children+=Message | children+=Map | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
		//children+=Validations | children+=CommentClause)*
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//children+=Message
		public Assignment getChildrenAssignment_5_0_1_0() { return cChildrenAssignment_5_0_1_0; }

		//Message
		public RuleCall getChildrenMessageParserRuleCall_5_0_1_0_0() { return cChildrenMessageParserRuleCall_5_0_1_0_0; }

		//children+=Map
		public Assignment getChildrenAssignment_5_0_1_1() { return cChildrenAssignment_5_0_1_1; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_5_0_1_1_0() { return cChildrenMapParserRuleCall_5_0_1_1_0; }

		//children+=Param
		public Assignment getChildrenAssignment_5_0_1_2() { return cChildrenAssignment_5_0_1_2; }

		//Param
		public RuleCall getChildrenParamParserRuleCall_5_0_1_2_0() { return cChildrenParamParserRuleCall_5_0_1_2_0; }

		//methods+=Methods
		public Assignment getMethodsAssignment_5_0_1_3() { return cMethodsAssignment_5_0_1_3; }

		//Methods
		public RuleCall getMethodsMethodsParserRuleCall_5_0_1_3_0() { return cMethodsMethodsParserRuleCall_5_0_1_3_0; }

		//children+=DebugTag
		public Assignment getChildrenAssignment_5_0_1_4() { return cChildrenAssignment_5_0_1_4; }

		//DebugTag
		public RuleCall getChildrenDebugTagParserRuleCall_5_0_1_4_0() { return cChildrenDebugTagParserRuleCall_5_0_1_4_0; }

		//children+=Include
		public Assignment getChildrenAssignment_5_0_1_5() { return cChildrenAssignment_5_0_1_5; }

		//Include
		public RuleCall getChildrenIncludeParserRuleCall_5_0_1_5_0() { return cChildrenIncludeParserRuleCall_5_0_1_5_0; }

		//children+=Validations
		public Assignment getChildrenAssignment_5_0_1_6() { return cChildrenAssignment_5_0_1_6; }

		//Validations
		public RuleCall getChildrenValidationsParserRuleCall_5_0_1_6_0() { return cChildrenValidationsParserRuleCall_5_0_1_6_0; }

		//children+=CommentClause
		public Assignment getChildrenAssignment_5_0_1_7() { return cChildrenAssignment_5_0_1_7; }

		//CommentClause
		public RuleCall getChildrenCommentClauseParserRuleCall_5_0_1_7_0() { return cChildrenCommentClauseParserRuleCall_5_0_1_7_0; }

		//NAVASCRIPT_END
		public RuleCall getNAVASCRIPT_ENDTerminalRuleCall_5_0_2() { return cNAVASCRIPT_ENDTerminalRuleCall_5_0_2; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_5_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_5_1; }
	}

	public class GarbageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Garbage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDOTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPARENTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDOLLARTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTML_SEPARATORTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cNUMBERTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCOMMATerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSQBRACKET_OPENTerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cSQBRACKET_CLOSETerminalRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cATTerminalRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cCOLONTerminalRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cBRACKET_OPENTerminalRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cBRACKET_CLOSETerminalRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cTML_EXISTSTerminalRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cEQUALSTerminalRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cNEQUALSTerminalRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cPLUSTerminalRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cMINUSTerminalRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cMULTIPLYTerminalRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cSEMICOLONTerminalRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cTSLTAGTerminalRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cNAVASCRIPTTAGTerminalRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		
		//Garbage returns ecore::EString:
		//	(ID | DOT | PARENT | DOLLAR | TML_SEPARATOR | NUMBER | COMMA | SQBRACKET_OPEN | SQBRACKET_CLOSE | AT | COLON |
		//	BRACKET_OPEN | BRACKET_CLOSE | TML_EXISTS | EQUALS | NEQUALS | PLUS | MINUS | MULTIPLY | SEMICOLON | TSLTAG |
		//	NAVASCRIPTTAG)*;
		public ParserRule getRule() { return rule; }

		//(ID | DOT | PARENT | DOLLAR | TML_SEPARATOR | NUMBER | COMMA | SQBRACKET_OPEN | SQBRACKET_CLOSE | AT | COLON |
		//BRACKET_OPEN | BRACKET_CLOSE | TML_EXISTS | EQUALS | NEQUALS | PLUS | MINUS | MULTIPLY | SEMICOLON | TSLTAG |
		//NAVASCRIPTTAG)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_1() { return cDOTTerminalRuleCall_1; }

		//PARENT
		public RuleCall getPARENTTerminalRuleCall_2() { return cPARENTTerminalRuleCall_2; }

		//DOLLAR
		public RuleCall getDOLLARTerminalRuleCall_3() { return cDOLLARTerminalRuleCall_3; }

		//TML_SEPARATOR
		public RuleCall getTML_SEPARATORTerminalRuleCall_4() { return cTML_SEPARATORTerminalRuleCall_4; }

		//NUMBER
		public RuleCall getNUMBERTerminalRuleCall_5() { return cNUMBERTerminalRuleCall_5; }

		//COMMA
		public RuleCall getCOMMATerminalRuleCall_6() { return cCOMMATerminalRuleCall_6; }

		//SQBRACKET_OPEN
		public RuleCall getSQBRACKET_OPENTerminalRuleCall_7() { return cSQBRACKET_OPENTerminalRuleCall_7; }

		//SQBRACKET_CLOSE
		public RuleCall getSQBRACKET_CLOSETerminalRuleCall_8() { return cSQBRACKET_CLOSETerminalRuleCall_8; }

		//AT
		public RuleCall getATTerminalRuleCall_9() { return cATTerminalRuleCall_9; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_10() { return cCOLONTerminalRuleCall_10; }

		//BRACKET_OPEN
		public RuleCall getBRACKET_OPENTerminalRuleCall_11() { return cBRACKET_OPENTerminalRuleCall_11; }

		//BRACKET_CLOSE
		public RuleCall getBRACKET_CLOSETerminalRuleCall_12() { return cBRACKET_CLOSETerminalRuleCall_12; }

		//TML_EXISTS
		public RuleCall getTML_EXISTSTerminalRuleCall_13() { return cTML_EXISTSTerminalRuleCall_13; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_14() { return cEQUALSTerminalRuleCall_14; }

		//NEQUALS
		public RuleCall getNEQUALSTerminalRuleCall_15() { return cNEQUALSTerminalRuleCall_15; }

		//PLUS
		public RuleCall getPLUSTerminalRuleCall_16() { return cPLUSTerminalRuleCall_16; }

		//MINUS
		public RuleCall getMINUSTerminalRuleCall_17() { return cMINUSTerminalRuleCall_17; }

		//MULTIPLY
		public RuleCall getMULTIPLYTerminalRuleCall_18() { return cMULTIPLYTerminalRuleCall_18; }

		//SEMICOLON
		public RuleCall getSEMICOLONTerminalRuleCall_19() { return cSEMICOLONTerminalRuleCall_19; }

		//TSLTAG
		public RuleCall getTSLTAGTerminalRuleCall_20() { return cTSLTAGTerminalRuleCall_20; }

		//NAVASCRIPTTAG
		public RuleCall getNAVASCRIPTTAGTerminalRuleCall_21() { return cNAVASCRIPTTAGTerminalRuleCall_21; }
	}

	public class AttributeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeName");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// might need to add a lot more kywords here 'message' | 'comment' 
		//AttributeName:
		//	ID;
		public ParserRule getRule() { return rule; }

		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}

	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cExpressionValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionValueTopLevelParserRuleCall_3_0 = (RuleCall)cExpressionValueAssignment_3.eContents().get(0);
		private final Assignment cEndTokenAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cEndTokenQUOTETerminalRuleCall_4_0 = (RuleCall)cEndTokenAssignment_4.eContents().get(0);
		
		//Expression returns PossibleExpression:
		//	key=ID EQUALS QUOTE expressionValue=TopLevel endToken=QUOTE;
		public ParserRule getRule() { return rule; }

		//key=ID EQUALS QUOTE expressionValue=TopLevel endToken=QUOTE
		public Group getGroup() { return cGroup; }

		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_1() { return cEQUALSTerminalRuleCall_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_2() { return cQUOTETerminalRuleCall_2; }

		//expressionValue=TopLevel
		public Assignment getExpressionValueAssignment_3() { return cExpressionValueAssignment_3; }

		//TopLevel
		public RuleCall getExpressionValueTopLevelParserRuleCall_3_0() { return cExpressionValueTopLevelParserRuleCall_3_0; }

		//endToken=QUOTE
		public Assignment getEndTokenAssignment_4() { return cEndTokenAssignment_4; }

		//QUOTE
		public RuleCall getEndTokenQUOTETerminalRuleCall_4_0() { return cEndTokenQUOTETerminalRuleCall_4_0; }
	}

	public class NonExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NonExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNamespaceAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNamespaceIDTerminalRuleCall_0_0_0 = (RuleCall)cNamespaceAssignment_0_0.eContents().get(0);
		private final RuleCall cCOLONTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyAttributeNameParserRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueGarbageParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		
		//NonExpression returns PossibleExpression:
		//	(namespace=ID COLON)? key=AttributeName EQUALS (QUOTE value=Garbage QUOTE);
		public ParserRule getRule() { return rule; }

		//(namespace=ID COLON)? key=AttributeName EQUALS (QUOTE value=Garbage QUOTE)
		public Group getGroup() { return cGroup; }

		//(namespace=ID COLON)?
		public Group getGroup_0() { return cGroup_0; }

		//namespace=ID
		public Assignment getNamespaceAssignment_0_0() { return cNamespaceAssignment_0_0; }

		//ID
		public RuleCall getNamespaceIDTerminalRuleCall_0_0_0() { return cNamespaceIDTerminalRuleCall_0_0_0; }

		//COLON
		public RuleCall getCOLONTerminalRuleCall_0_1() { return cCOLONTerminalRuleCall_0_1; }

		//key=AttributeName
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//AttributeName
		public RuleCall getKeyAttributeNameParserRuleCall_1_0() { return cKeyAttributeNameParserRuleCall_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_2() { return cEQUALSTerminalRuleCall_2; }

		//QUOTE value=Garbage QUOTE
		public Group getGroup_3() { return cGroup_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0() { return cQUOTETerminalRuleCall_3_0; }

		//value=Garbage
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }

		//Garbage
		public RuleCall getValueGarbageParserRuleCall_3_1_0() { return cValueGarbageParserRuleCall_3_1_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2() { return cQUOTETerminalRuleCall_3_2; }
	}

	public class MethodsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Methods");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cMETHODSTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cMethodsAction_2 = (Action)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cSplitTagAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_3_0_0_0 = (RuleCall)cSplitTagAssignment_3_0_0.eContents().get(0);
		private final Assignment cMethodAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cMethodMethodParserRuleCall_3_0_1_0 = (RuleCall)cMethodAssignment_3_0_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_3_0_2_0 = (RuleCall)cClosedTagAssignment_3_0_2.eContents().get(0);
		private final RuleCall cMETHODSTAGTerminalRuleCall_3_0_3 = (RuleCall)cGroup_3_0.eContents().get(3);
		private final RuleCall cGTTerminalRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		
		//Methods:
		//	LT METHODSTAG {Methods} (splitTag?=GT method+=Method* closedTag?=XML_START_ENDTAG METHODSTAG GT | XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT METHODSTAG {Methods} (splitTag?=GT method+=Method* closedTag?=XML_START_ENDTAG METHODSTAG GT | XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//METHODSTAG
		public RuleCall getMETHODSTAGTerminalRuleCall_1() { return cMETHODSTAGTerminalRuleCall_1; }

		//{Methods}
		public Action getMethodsAction_2() { return cMethodsAction_2; }

		//splitTag?=GT method+=Method* closedTag?=XML_START_ENDTAG METHODSTAG GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//splitTag?=GT method+=Method* closedTag?=XML_START_ENDTAG METHODSTAG GT
		public Group getGroup_3_0() { return cGroup_3_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_3_0_0() { return cSplitTagAssignment_3_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_3_0_0_0() { return cSplitTagGTTerminalRuleCall_3_0_0_0; }

		//method+=Method*
		public Assignment getMethodAssignment_3_0_1() { return cMethodAssignment_3_0_1; }

		//Method
		public RuleCall getMethodMethodParserRuleCall_3_0_1_0() { return cMethodMethodParserRuleCall_3_0_1_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_3_0_2() { return cClosedTagAssignment_3_0_2; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_3_0_2_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_3_0_2_0; }

		//METHODSTAG
		public RuleCall getMETHODSTAGTerminalRuleCall_3_0_3() { return cMETHODSTAGTerminalRuleCall_3_0_3; }

		//GT
		public RuleCall getGTTerminalRuleCall_3_0_4() { return cGTTerminalRuleCall_3_0_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_3_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_3_1; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cMETHODTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cMethodAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesNonExpressionParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_0_0_0 = (RuleCall)cSplitTagAssignment_4_0_0.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cChildrenRequiredParserRuleCall_4_0_1_0 = (RuleCall)cChildrenAssignment_4_0_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_2_0 = (RuleCall)cClosedTagAssignment_4_0_2.eContents().get(0);
		private final RuleCall cMETHODTAGTerminalRuleCall_4_0_3 = (RuleCall)cGroup_4_0.eContents().get(3);
		private final RuleCall cGTTerminalRuleCall_4_0_4 = (RuleCall)cGroup_4_0.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//Method:
		//	LT METHODTAG {Method} attributes+=NonExpression* (splitTag?=GT children+=Required* closedTag?=XML_START_ENDTAG
		//	METHODTAG GT | XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT METHODTAG {Method} attributes+=NonExpression* (splitTag?=GT children+=Required* closedTag?=XML_START_ENDTAG METHODTAG
		//GT | XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//METHODTAG
		public RuleCall getMETHODTAGTerminalRuleCall_1() { return cMETHODTAGTerminalRuleCall_1; }

		//{Method}
		public Action getMethodAction_2() { return cMethodAction_2; }

		//attributes+=NonExpression*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//NonExpression
		public RuleCall getAttributesNonExpressionParserRuleCall_3_0() { return cAttributesNonExpressionParserRuleCall_3_0; }

		//splitTag?=GT children+=Required* closedTag?=XML_START_ENDTAG METHODTAG GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//splitTag?=GT children+=Required* closedTag?=XML_START_ENDTAG METHODTAG GT
		public Group getGroup_4_0() { return cGroup_4_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_0_0() { return cSplitTagAssignment_4_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_0_0_0() { return cSplitTagGTTerminalRuleCall_4_0_0_0; }

		//children+=Required*
		public Assignment getChildrenAssignment_4_0_1() { return cChildrenAssignment_4_0_1; }

		//Required
		public RuleCall getChildrenRequiredParserRuleCall_4_0_1_0() { return cChildrenRequiredParserRuleCall_4_0_1_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_4_0_2() { return cClosedTagAssignment_4_0_2; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_2_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_2_0; }

		//METHODTAG
		public RuleCall getMETHODTAGTerminalRuleCall_4_0_3() { return cMETHODTAGTerminalRuleCall_4_0_3; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_0_4() { return cGTTerminalRuleCall_4_0_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_1; }
	}

	public class ValidationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Validations");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cVALIDATIONSTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cValidationsAction_2 = (Action)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cSplitTagAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_3_0_0_0 = (RuleCall)cSplitTagAssignment_3_0_0.eContents().get(0);
		private final Assignment cChildrenAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cChildrenCheckParserRuleCall_3_0_1_0 = (RuleCall)cChildrenAssignment_3_0_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_3_0_2_0 = (RuleCall)cClosedTagAssignment_3_0_2.eContents().get(0);
		private final RuleCall cVALIDATIONSTAGTerminalRuleCall_3_0_3 = (RuleCall)cGroup_3_0.eContents().get(3);
		private final RuleCall cGTTerminalRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_3_1 = (RuleCall)cAlternatives_3.eContents().get(1);
		
		//Validations:
		//	LT VALIDATIONSTAG {Validations} (splitTag?=GT children+=Check* closedTag?=XML_START_ENDTAG VALIDATIONSTAG GT |
		//	XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT VALIDATIONSTAG {Validations} (splitTag?=GT children+=Check* closedTag?=XML_START_ENDTAG VALIDATIONSTAG GT |
		//XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//VALIDATIONSTAG
		public RuleCall getVALIDATIONSTAGTerminalRuleCall_1() { return cVALIDATIONSTAGTerminalRuleCall_1; }

		//{Validations}
		public Action getValidationsAction_2() { return cValidationsAction_2; }

		//splitTag?=GT children+=Check* closedTag?=XML_START_ENDTAG VALIDATIONSTAG GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//splitTag?=GT children+=Check* closedTag?=XML_START_ENDTAG VALIDATIONSTAG GT
		public Group getGroup_3_0() { return cGroup_3_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_3_0_0() { return cSplitTagAssignment_3_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_3_0_0_0() { return cSplitTagGTTerminalRuleCall_3_0_0_0; }

		//children+=Check*
		public Assignment getChildrenAssignment_3_0_1() { return cChildrenAssignment_3_0_1; }

		//Check
		public RuleCall getChildrenCheckParserRuleCall_3_0_1_0() { return cChildrenCheckParserRuleCall_3_0_1_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_3_0_2() { return cClosedTagAssignment_3_0_2; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_3_0_2_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_3_0_2_0; }

		//VALIDATIONSTAG
		public RuleCall getVALIDATIONSTAGTerminalRuleCall_3_0_3() { return cVALIDATIONSTAGTerminalRuleCall_3_0_3; }

		//GT
		public RuleCall getGTTerminalRuleCall_3_0_4() { return cGTTerminalRuleCall_3_0_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_3_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_3_1; }
	}

	public class CheckElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Check");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCHECKTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cCheckAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesNonExpressionParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_0_0_0 = (RuleCall)cSplitTagAssignment_4_0_0.eContents().get(0);
		private final Assignment cExpressionAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cExpressionTopLevelParserRuleCall_4_0_1_0 = (RuleCall)cExpressionAssignment_4_0_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_2_0 = (RuleCall)cClosedTagAssignment_4_0_2.eContents().get(0);
		private final RuleCall cCHECKTAGTerminalRuleCall_4_0_3 = (RuleCall)cGroup_4_0.eContents().get(3);
		private final RuleCall cGTTerminalRuleCall_4_0_4 = (RuleCall)cGroup_4_0.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//Check:
		//	LT CHECKTAG {Check} attributes+=NonExpression* (splitTag?=GT expression=TopLevel closedTag?=XML_START_ENDTAG CHECKTAG
		//	GT | XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT CHECKTAG {Check} attributes+=NonExpression* (splitTag?=GT expression=TopLevel closedTag?=XML_START_ENDTAG CHECKTAG GT
		//| XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//CHECKTAG
		public RuleCall getCHECKTAGTerminalRuleCall_1() { return cCHECKTAGTerminalRuleCall_1; }

		//{Check}
		public Action getCheckAction_2() { return cCheckAction_2; }

		//attributes+=NonExpression*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//NonExpression
		public RuleCall getAttributesNonExpressionParserRuleCall_3_0() { return cAttributesNonExpressionParserRuleCall_3_0; }

		//splitTag?=GT expression=TopLevel closedTag?=XML_START_ENDTAG CHECKTAG GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//splitTag?=GT expression=TopLevel closedTag?=XML_START_ENDTAG CHECKTAG GT
		public Group getGroup_4_0() { return cGroup_4_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_0_0() { return cSplitTagAssignment_4_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_0_0_0() { return cSplitTagGTTerminalRuleCall_4_0_0_0; }

		//expression=TopLevel
		public Assignment getExpressionAssignment_4_0_1() { return cExpressionAssignment_4_0_1; }

		//TopLevel
		public RuleCall getExpressionTopLevelParserRuleCall_4_0_1_0() { return cExpressionTopLevelParserRuleCall_4_0_1_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_4_0_2() { return cClosedTagAssignment_4_0_2; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_2_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_2_0; }

		//CHECKTAG
		public RuleCall getCHECKTAGTerminalRuleCall_4_0_3() { return cCHECKTAGTerminalRuleCall_4_0_3; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_0_4() { return cGTTerminalRuleCall_4_0_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_1; }
	}

	public class CommentClauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommentClause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cCOMMENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cCommentAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesExpressionParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_0_0_0 = (RuleCall)cSplitTagAssignment_4_0_0.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_1_0 = (RuleCall)cClosedTagAssignment_4_0_1.eContents().get(0);
		private final RuleCall cCOMMENTTerminalRuleCall_4_0_2 = (RuleCall)cGroup_4_0.eContents().get(2);
		private final RuleCall cGTTerminalRuleCall_4_0_3 = (RuleCall)cGroup_4_0.eContents().get(3);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//CommentClause returns Comment:
		//	LT COMMENT {Comment} attributes+=Expression* (splitTag?=GT closedTag?=XML_START_ENDTAG COMMENT GT |
		//	XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT COMMENT {Comment} attributes+=Expression* (splitTag?=GT closedTag?=XML_START_ENDTAG COMMENT GT | XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//COMMENT
		public RuleCall getCOMMENTTerminalRuleCall_1() { return cCOMMENTTerminalRuleCall_1; }

		//{Comment}
		public Action getCommentAction_2() { return cCommentAction_2; }

		//attributes+=Expression*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//Expression
		public RuleCall getAttributesExpressionParserRuleCall_3_0() { return cAttributesExpressionParserRuleCall_3_0; }

		//splitTag?=GT closedTag?=XML_START_ENDTAG COMMENT GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//splitTag?=GT closedTag?=XML_START_ENDTAG COMMENT GT
		public Group getGroup_4_0() { return cGroup_4_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_0_0() { return cSplitTagAssignment_4_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_0_0_0() { return cSplitTagGTTerminalRuleCall_4_0_0_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_4_0_1() { return cClosedTagAssignment_4_0_1; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_1_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_4_0_1_0; }

		//COMMENT
		public RuleCall getCOMMENTTerminalRuleCall_4_0_2() { return cCOMMENTTerminalRuleCall_4_0_2; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_0_3() { return cGTTerminalRuleCall_4_0_3; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_1; }
	}

	public class BreakElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Break");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cBREAKTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cBreakAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesExpressionParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_0_0_0 = (RuleCall)cSplitTagAssignment_4_0_0.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cClosedTagBREAKTAGTerminalRuleCall_4_0_1_0 = (RuleCall)cClosedTagAssignment_4_0_1.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_4_0_2 = (RuleCall)cGroup_4_0.eContents().get(2);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//Break:
		//	LT BREAKTAG {Break} attributes+=Expression* (splitTag?=GT //		expression=TopLevel
		//	closedTag?=BREAKTAG GT | XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT BREAKTAG {Break} attributes+=Expression* (splitTag?=GT //		expression=TopLevel
		//closedTag?=BREAKTAG GT | XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//BREAKTAG
		public RuleCall getBREAKTAGTerminalRuleCall_1() { return cBREAKTAGTerminalRuleCall_1; }

		//{Break}
		public Action getBreakAction_2() { return cBreakAction_2; }

		//attributes+=Expression*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//Expression
		public RuleCall getAttributesExpressionParserRuleCall_3_0() { return cAttributesExpressionParserRuleCall_3_0; }

		//splitTag?=GT //		expression=TopLevel
		//closedTag?=BREAKTAG GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//splitTag?=GT //		expression=TopLevel
		//closedTag?=BREAKTAG GT
		public Group getGroup_4_0() { return cGroup_4_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_0_0() { return cSplitTagAssignment_4_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_0_0_0() { return cSplitTagGTTerminalRuleCall_4_0_0_0; }

		////		expression=TopLevel
		//closedTag?=BREAKTAG
		public Assignment getClosedTagAssignment_4_0_1() { return cClosedTagAssignment_4_0_1; }

		//BREAKTAG
		public RuleCall getClosedTagBREAKTAGTerminalRuleCall_4_0_1_0() { return cClosedTagBREAKTAGTerminalRuleCall_4_0_1_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_0_2() { return cGTTerminalRuleCall_4_0_2; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_1; }
	}

	public class FilePathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilePath");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTML_SEPARATORTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPARENTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDOTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//FilePath returns ecore::EString:
		//	(TML_SEPARATOR | PARENT | DOT | ID)+;
		public ParserRule getRule() { return rule; }

		//(TML_SEPARATOR | PARENT | DOT | ID)+
		public Alternatives getAlternatives() { return cAlternatives; }

		//TML_SEPARATOR
		public RuleCall getTML_SEPARATORTerminalRuleCall_0() { return cTML_SEPARATORTerminalRuleCall_0; }

		//PARENT
		public RuleCall getPARENTTerminalRuleCall_1() { return cPARENTTerminalRuleCall_1; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_2() { return cDOTTerminalRuleCall_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }
	}

	public class IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cINCLUDETAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cMethodAction_2 = (Action)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cSCRIPTTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Assignment cPathAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cPathPathElementParserRuleCall_3_3_0 = (RuleCall)cPathAssignment_3_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_4 = (RuleCall)cGroup_3.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_0_0_0 = (RuleCall)cSplitTagAssignment_4_0_0.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final RuleCall cClosedTagINCLUDETAGTerminalRuleCall_4_0_1_0 = (RuleCall)cClosedTagAssignment_4_0_1.eContents().get(0);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//// create Include entity in Model
		//Include returns Method:
		//	LT INCLUDETAG {Method} (SCRIPT EQUALS QUOTE path+=PathElement+ QUOTE)? (splitTag?=GT closedTag?=INCLUDETAG |
		//	XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT INCLUDETAG {Method} (SCRIPT EQUALS QUOTE path+=PathElement+ QUOTE)? (splitTag?=GT closedTag?=INCLUDETAG |
		//XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//INCLUDETAG
		public RuleCall getINCLUDETAGTerminalRuleCall_1() { return cINCLUDETAGTerminalRuleCall_1; }

		//{Method}
		public Action getMethodAction_2() { return cMethodAction_2; }

		//(SCRIPT EQUALS QUOTE path+=PathElement+ QUOTE)?
		public Group getGroup_3() { return cGroup_3; }

		//SCRIPT
		public RuleCall getSCRIPTTerminalRuleCall_3_0() { return cSCRIPTTerminalRuleCall_3_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_1() { return cEQUALSTerminalRuleCall_3_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2() { return cQUOTETerminalRuleCall_3_2; }

		//path+=PathElement+
		public Assignment getPathAssignment_3_3() { return cPathAssignment_3_3; }

		//PathElement
		public RuleCall getPathPathElementParserRuleCall_3_3_0() { return cPathPathElementParserRuleCall_3_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4() { return cQUOTETerminalRuleCall_3_4; }

		//splitTag?=GT closedTag?=INCLUDETAG | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//splitTag?=GT closedTag?=INCLUDETAG
		public Group getGroup_4_0() { return cGroup_4_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_0_0() { return cSplitTagAssignment_4_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_0_0_0() { return cSplitTagGTTerminalRuleCall_4_0_0_0; }

		//closedTag?=INCLUDETAG
		public Assignment getClosedTagAssignment_4_0_1() { return cClosedTagAssignment_4_0_1; }

		//INCLUDETAG
		public RuleCall getClosedTagINCLUDETAGTerminalRuleCall_4_0_1_0() { return cClosedTagINCLUDETAGTerminalRuleCall_4_0_1_0; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_1; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cMESSAGETAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cMessageAction_2 = (Action)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cCOUNTTerminalRuleCall_3_0_0 = (RuleCall)cGroup_3_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_0_2 = (RuleCall)cGroup_3_0.eContents().get(2);
		private final Assignment cCountAssignment_3_0_3 = (Assignment)cGroup_3_0.eContents().get(3);
		private final RuleCall cCountNUMBERTerminalRuleCall_3_0_3_0 = (RuleCall)cCountAssignment_3_0_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cMODETerminalRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final Assignment cModeAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cModeIDTerminalRuleCall_3_1_3_0 = (RuleCall)cModeAssignment_3_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_1_4 = (RuleCall)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final RuleCall cNAMETerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_2_1 = (RuleCall)cGroup_3_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_2_2 = (RuleCall)cGroup_3_2.eContents().get(2);
		private final Assignment cNameAttributeAssignment_3_2_3 = (Assignment)cGroup_3_2.eContents().get(3);
		private final RuleCall cNameAttributeIDTerminalRuleCall_3_2_3_0 = (RuleCall)cNameAttributeAssignment_3_2_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_2_4 = (RuleCall)cGroup_3_2.eContents().get(4);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final RuleCall cTYPETerminalRuleCall_3_3_0 = (RuleCall)cGroup_3_3.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_3_1 = (RuleCall)cGroup_3_3.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_3_2 = (RuleCall)cGroup_3_3.eContents().get(2);
		private final Assignment cTypeAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cTypeIDTerminalRuleCall_3_3_3_0 = (RuleCall)cTypeAssignment_3_3_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_3_4 = (RuleCall)cGroup_3_3.eContents().get(4);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final RuleCall cCONDITIONTerminalRuleCall_3_4_0 = (RuleCall)cGroup_3_4.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_4_1 = (RuleCall)cGroup_3_4.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_4_2 = (RuleCall)cGroup_3_4.eContents().get(2);
		private final Assignment cConditionAssignment_3_4_3 = (Assignment)cGroup_3_4.eContents().get(3);
		private final RuleCall cConditionTopLevelParserRuleCall_3_4_3_0 = (RuleCall)cConditionAssignment_3_4_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_4_4 = (RuleCall)cGroup_3_4.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cAlternatives_4.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_0_0_0 = (RuleCall)cSplitTagAssignment_4_0_0.eContents().get(0);
		private final Alternatives cAlternatives_4_0_1 = (Alternatives)cGroup_4_0.eContents().get(1);
		private final Assignment cChildrenAssignment_4_0_1_0 = (Assignment)cAlternatives_4_0_1.eContents().get(0);
		private final RuleCall cChildrenMessageParserRuleCall_4_0_1_0_0 = (RuleCall)cChildrenAssignment_4_0_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_1 = (Assignment)cAlternatives_4_0_1.eContents().get(1);
		private final RuleCall cChildrenPropertyParserRuleCall_4_0_1_1_0 = (RuleCall)cChildrenAssignment_4_0_1_1.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_2 = (Assignment)cAlternatives_4_0_1.eContents().get(2);
		private final RuleCall cChildrenParamParserRuleCall_4_0_1_2_0 = (RuleCall)cChildrenAssignment_4_0_1_2.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_3 = (Assignment)cAlternatives_4_0_1.eContents().get(3);
		private final RuleCall cChildrenMapParserRuleCall_4_0_1_3_0 = (RuleCall)cChildrenAssignment_4_0_1_3.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_4 = (Assignment)cAlternatives_4_0_1.eContents().get(4);
		private final RuleCall cChildrenMapMethodParserRuleCall_4_0_1_4_0 = (RuleCall)cChildrenAssignment_4_0_1_4.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_5 = (Assignment)cAlternatives_4_0_1.eContents().get(5);
		private final RuleCall cChildrenDebugTagParserRuleCall_4_0_1_5_0 = (RuleCall)cChildrenAssignment_4_0_1_5.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_6 = (Assignment)cAlternatives_4_0_1.eContents().get(6);
		private final RuleCall cChildrenFieldParserRuleCall_4_0_1_6_0 = (RuleCall)cChildrenAssignment_4_0_1_6.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_7 = (Assignment)cAlternatives_4_0_1.eContents().get(7);
		private final RuleCall cChildrenCommentClauseParserRuleCall_4_0_1_7_0 = (RuleCall)cChildrenAssignment_4_0_1_7.eContents().get(0);
		private final Assignment cChildrenAssignment_4_0_1_8 = (Assignment)cAlternatives_4_0_1.eContents().get(8);
		private final RuleCall cChildrenBreakParserRuleCall_4_0_1_8_0 = (RuleCall)cChildrenAssignment_4_0_1_8.eContents().get(0);
		private final RuleCall cXML_START_ENDTAGTerminalRuleCall_4_0_2 = (RuleCall)cGroup_4_0.eContents().get(2);
		private final Assignment cClosedTagAssignment_4_0_3 = (Assignment)cGroup_4_0.eContents().get(3);
		private final RuleCall cClosedTagMESSAGETAGTerminalRuleCall_4_0_3_0 = (RuleCall)cClosedTagAssignment_4_0_3.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_4_0_4 = (RuleCall)cGroup_4_0.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//Message:
		//	LT MESSAGETAG {Message} ((COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS
		//	QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel
		//	QUOTE)?) (splitTag?=GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod
		//	| children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG
		//	closedTag?=MESSAGETAG GT | XML_TAG_SINGLEEND);
		public ParserRule getRule() { return rule; }

		//LT MESSAGETAG {Message} ((COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS
		//QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel
		//QUOTE)?) (splitTag?=GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod
		//| children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG
		//closedTag?=MESSAGETAG GT | XML_TAG_SINGLEEND)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//MESSAGETAG
		public RuleCall getMESSAGETAGTerminalRuleCall_1() { return cMESSAGETAGTerminalRuleCall_1; }

		//{Message}
		public Action getMessageAction_2() { return cMessageAction_2; }

		//(COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID
		//QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//(COUNT EQUALS QUOTE count=NUMBER QUOTE)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//COUNT
		public RuleCall getCOUNTTerminalRuleCall_3_0_0() { return cCOUNTTerminalRuleCall_3_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_0_1() { return cEQUALSTerminalRuleCall_3_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_2() { return cQUOTETerminalRuleCall_3_0_2; }

		//count=NUMBER
		public Assignment getCountAssignment_3_0_3() { return cCountAssignment_3_0_3; }

		//NUMBER
		public RuleCall getCountNUMBERTerminalRuleCall_3_0_3_0() { return cCountNUMBERTerminalRuleCall_3_0_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_4() { return cQUOTETerminalRuleCall_3_0_4; }

		//(MODE EQUALS QUOTE mode=ID QUOTE)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//MODE
		public RuleCall getMODETerminalRuleCall_3_1_0() { return cMODETerminalRuleCall_3_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_1_1() { return cEQUALSTerminalRuleCall_3_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_2() { return cQUOTETerminalRuleCall_3_1_2; }

		//mode=ID
		public Assignment getModeAssignment_3_1_3() { return cModeAssignment_3_1_3; }

		//ID
		public RuleCall getModeIDTerminalRuleCall_3_1_3_0() { return cModeIDTerminalRuleCall_3_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_4() { return cQUOTETerminalRuleCall_3_1_4; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//NAME
		public RuleCall getNAMETerminalRuleCall_3_2_0() { return cNAMETerminalRuleCall_3_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_2_1() { return cEQUALSTerminalRuleCall_3_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_2() { return cQUOTETerminalRuleCall_3_2_2; }

		//nameAttribute=ID
		public Assignment getNameAttributeAssignment_3_2_3() { return cNameAttributeAssignment_3_2_3; }

		//ID
		public RuleCall getNameAttributeIDTerminalRuleCall_3_2_3_0() { return cNameAttributeIDTerminalRuleCall_3_2_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_4() { return cQUOTETerminalRuleCall_3_2_4; }

		//(TYPE EQUALS QUOTE type=ID QUOTE)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//TYPE
		public RuleCall getTYPETerminalRuleCall_3_3_0() { return cTYPETerminalRuleCall_3_3_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_3_1() { return cEQUALSTerminalRuleCall_3_3_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_3_2() { return cQUOTETerminalRuleCall_3_3_2; }

		//type=ID
		public Assignment getTypeAssignment_3_3_3() { return cTypeAssignment_3_3_3; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_3_3_3_0() { return cTypeIDTerminalRuleCall_3_3_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_3_4() { return cQUOTETerminalRuleCall_3_3_4; }

		//(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//CONDITION
		public RuleCall getCONDITIONTerminalRuleCall_3_4_0() { return cCONDITIONTerminalRuleCall_3_4_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_4_1() { return cEQUALSTerminalRuleCall_3_4_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4_2() { return cQUOTETerminalRuleCall_3_4_2; }

		//condition=TopLevel
		public Assignment getConditionAssignment_3_4_3() { return cConditionAssignment_3_4_3; }

		//TopLevel
		public RuleCall getConditionTopLevelParserRuleCall_3_4_3_0() { return cConditionTopLevelParserRuleCall_3_4_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4_4() { return cQUOTETerminalRuleCall_3_4_4; }

		//splitTag?=GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod |
		//children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG
		//closedTag?=MESSAGETAG GT | XML_TAG_SINGLEEND
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//splitTag?=GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod |
		//children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG
		//closedTag?=MESSAGETAG GT
		public Group getGroup_4_0() { return cGroup_4_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_0_0() { return cSplitTagAssignment_4_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_0_0_0() { return cSplitTagGTTerminalRuleCall_4_0_0_0; }

		//(children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag |
		//children+=Field | children+=CommentClause | children+=Break)*
		public Alternatives getAlternatives_4_0_1() { return cAlternatives_4_0_1; }

		//children+=Message
		public Assignment getChildrenAssignment_4_0_1_0() { return cChildrenAssignment_4_0_1_0; }

		//Message
		public RuleCall getChildrenMessageParserRuleCall_4_0_1_0_0() { return cChildrenMessageParserRuleCall_4_0_1_0_0; }

		//children+=Property
		public Assignment getChildrenAssignment_4_0_1_1() { return cChildrenAssignment_4_0_1_1; }

		//Property
		public RuleCall getChildrenPropertyParserRuleCall_4_0_1_1_0() { return cChildrenPropertyParserRuleCall_4_0_1_1_0; }

		//children+=Param
		public Assignment getChildrenAssignment_4_0_1_2() { return cChildrenAssignment_4_0_1_2; }

		//Param
		public RuleCall getChildrenParamParserRuleCall_4_0_1_2_0() { return cChildrenParamParserRuleCall_4_0_1_2_0; }

		//children+=Map
		public Assignment getChildrenAssignment_4_0_1_3() { return cChildrenAssignment_4_0_1_3; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_4_0_1_3_0() { return cChildrenMapParserRuleCall_4_0_1_3_0; }

		//children+=MapMethod
		public Assignment getChildrenAssignment_4_0_1_4() { return cChildrenAssignment_4_0_1_4; }

		//MapMethod
		public RuleCall getChildrenMapMethodParserRuleCall_4_0_1_4_0() { return cChildrenMapMethodParserRuleCall_4_0_1_4_0; }

		//children+=DebugTag
		public Assignment getChildrenAssignment_4_0_1_5() { return cChildrenAssignment_4_0_1_5; }

		//DebugTag
		public RuleCall getChildrenDebugTagParserRuleCall_4_0_1_5_0() { return cChildrenDebugTagParserRuleCall_4_0_1_5_0; }

		//children+=Field
		public Assignment getChildrenAssignment_4_0_1_6() { return cChildrenAssignment_4_0_1_6; }

		//Field
		public RuleCall getChildrenFieldParserRuleCall_4_0_1_6_0() { return cChildrenFieldParserRuleCall_4_0_1_6_0; }

		//children+=CommentClause
		public Assignment getChildrenAssignment_4_0_1_7() { return cChildrenAssignment_4_0_1_7; }

		//CommentClause
		public RuleCall getChildrenCommentClauseParserRuleCall_4_0_1_7_0() { return cChildrenCommentClauseParserRuleCall_4_0_1_7_0; }

		//children+=Break
		public Assignment getChildrenAssignment_4_0_1_8() { return cChildrenAssignment_4_0_1_8; }

		//Break
		public RuleCall getChildrenBreakParserRuleCall_4_0_1_8_0() { return cChildrenBreakParserRuleCall_4_0_1_8_0; }

		//XML_START_ENDTAG
		public RuleCall getXML_START_ENDTAGTerminalRuleCall_4_0_2() { return cXML_START_ENDTAGTerminalRuleCall_4_0_2; }

		//closedTag?=MESSAGETAG
		public Assignment getClosedTagAssignment_4_0_3() { return cClosedTagAssignment_4_0_3; }

		//MESSAGETAG
		public RuleCall getClosedTagMESSAGETAGTerminalRuleCall_4_0_3_0() { return cClosedTagMESSAGETAGTerminalRuleCall_4_0_3_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_0_4() { return cGTTerminalRuleCall_4_0_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_1() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_1; }
	}

	public class MapElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Map");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cMAPTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cMapAction_2 = (Action)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cDOTTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cMapNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMapNameMapIdParserRuleCall_3_1_0 = (RuleCall)cMapNameAssignment_3_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4 = (UnorderedGroup)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cUnorderedGroup_4.eContents().get(0);
		private final RuleCall cREFTerminalRuleCall_4_0_0 = (RuleCall)cGroup_4_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_0_1 = (RuleCall)cGroup_4_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_0_2 = (RuleCall)cGroup_4_0.eContents().get(2);
		private final Assignment cRefAssignment_4_0_3 = (Assignment)cGroup_4_0.eContents().get(3);
		private final RuleCall cRefPathElementParserRuleCall_4_0_3_0 = (RuleCall)cRefAssignment_4_0_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_4_0_4 = (RuleCall)cGroup_4_0.eContents().get(4);
		private final Group cGroup_4_1 = (Group)cUnorderedGroup_4.eContents().get(1);
		private final RuleCall cOBJECTTerminalRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Assignment cObjectAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cObjectPathElementParserRuleCall_4_1_3_0 = (RuleCall)cObjectAssignment_4_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Group cGroup_4_2 = (Group)cUnorderedGroup_4.eContents().get(2);
		private final RuleCall cNAMETerminalRuleCall_4_2_0 = (RuleCall)cGroup_4_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_2_1 = (RuleCall)cGroup_4_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_2_2 = (RuleCall)cGroup_4_2.eContents().get(2);
		private final Assignment cNameAttributeAssignment_4_2_3 = (Assignment)cGroup_4_2.eContents().get(3);
		private final RuleCall cNameAttributeIDTerminalRuleCall_4_2_3_0 = (RuleCall)cNameAttributeAssignment_4_2_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_4_2_4 = (RuleCall)cGroup_4_2.eContents().get(4);
		private final Group cGroup_4_3 = (Group)cUnorderedGroup_4.eContents().get(3);
		private final RuleCall cFILTERTerminalRuleCall_4_3_0 = (RuleCall)cGroup_4_3.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_4_3_1 = (RuleCall)cGroup_4_3.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_4_3_2 = (RuleCall)cGroup_4_3.eContents().get(2);
		private final Assignment cFilterAssignment_4_3_3 = (Assignment)cGroup_4_3.eContents().get(3);
		private final RuleCall cFilterTopLevelParserRuleCall_4_3_3_0 = (RuleCall)cFilterAssignment_4_3_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_4_3_4 = (RuleCall)cGroup_4_3.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cGTTerminalRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Alternatives cAlternatives_5_1_1 = (Alternatives)cGroup_5_1.eContents().get(1);
		private final Assignment cChildrenAssignment_5_1_1_0 = (Assignment)cAlternatives_5_1_1.eContents().get(0);
		private final RuleCall cChildrenMessageParserRuleCall_5_1_1_0_0 = (RuleCall)cChildrenAssignment_5_1_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_1 = (Assignment)cAlternatives_5_1_1.eContents().get(1);
		private final RuleCall cChildrenPropertyParserRuleCall_5_1_1_1_0 = (RuleCall)cChildrenAssignment_5_1_1_1.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_2 = (Assignment)cAlternatives_5_1_1.eContents().get(2);
		private final RuleCall cChildrenParamParserRuleCall_5_1_1_2_0 = (RuleCall)cChildrenAssignment_5_1_1_2.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_3 = (Assignment)cAlternatives_5_1_1.eContents().get(3);
		private final RuleCall cChildrenMapParserRuleCall_5_1_1_3_0 = (RuleCall)cChildrenAssignment_5_1_1_3.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_4 = (Assignment)cAlternatives_5_1_1.eContents().get(4);
		private final RuleCall cChildrenMapMethodParserRuleCall_5_1_1_4_0 = (RuleCall)cChildrenAssignment_5_1_1_4.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_5 = (Assignment)cAlternatives_5_1_1.eContents().get(5);
		private final RuleCall cChildrenDebugTagParserRuleCall_5_1_1_5_0 = (RuleCall)cChildrenAssignment_5_1_1_5.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_6 = (Assignment)cAlternatives_5_1_1.eContents().get(6);
		private final RuleCall cChildrenFieldParserRuleCall_5_1_1_6_0 = (RuleCall)cChildrenAssignment_5_1_1_6.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_7 = (Assignment)cAlternatives_5_1_1.eContents().get(7);
		private final RuleCall cChildrenCommentClauseParserRuleCall_5_1_1_7_0 = (RuleCall)cChildrenAssignment_5_1_1_7.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_8 = (Assignment)cAlternatives_5_1_1.eContents().get(8);
		private final RuleCall cChildrenBreakParserRuleCall_5_1_1_8_0 = (RuleCall)cChildrenAssignment_5_1_1_8.eContents().get(0);
		private final RuleCall cXML_START_ENDTAGTerminalRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final RuleCall cMAPTAGTerminalRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		private final Group cGroup_5_1_4 = (Group)cGroup_5_1.eContents().get(4);
		private final RuleCall cDOTTerminalRuleCall_5_1_4_0 = (RuleCall)cGroup_5_1_4.eContents().get(0);
		private final Assignment cMapClosingNameAssignment_5_1_4_1 = (Assignment)cGroup_5_1_4.eContents().get(1);
		private final RuleCall cMapClosingNameMapIdParserRuleCall_5_1_4_1_0 = (RuleCall)cMapClosingNameAssignment_5_1_4_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_5_1_5 = (Assignment)cGroup_5_1.eContents().get(5);
		private final RuleCall cClosedTagGTTerminalRuleCall_5_1_5_0 = (RuleCall)cClosedTagAssignment_5_1_5.eContents().get(0);
		
		//Map:
		//	LT MAPTAG {Map} (DOT mapName=MapId)? ((REF EQUALS QUOTE ref+=PathElement+ QUOTE)? & (OBJECT EQUALS QUOTE
		//	object+=PathElement+ QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel
		//	QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=Message | children+=Property | children+=Param | children+=Map |
		//	children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
		//	XML_START_ENDTAG MAPTAG (DOT mapClosingName=MapId)? closedTag?=GT);
		public ParserRule getRule() { return rule; }

		//LT MAPTAG {Map} (DOT mapName=MapId)? ((REF EQUALS QUOTE ref+=PathElement+ QUOTE)? & (OBJECT EQUALS QUOTE
		//object+=PathElement+ QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel
		//QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=Message | children+=Property | children+=Param | children+=Map |
		//children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
		//XML_START_ENDTAG MAPTAG (DOT mapClosingName=MapId)? closedTag?=GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//MAPTAG
		public RuleCall getMAPTAGTerminalRuleCall_1() { return cMAPTAGTerminalRuleCall_1; }

		//{Map}
		public Action getMapAction_2() { return cMapAction_2; }

		//(DOT mapName=MapId)?
		public Group getGroup_3() { return cGroup_3; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_3_0() { return cDOTTerminalRuleCall_3_0; }

		//mapName=MapId
		public Assignment getMapNameAssignment_3_1() { return cMapNameAssignment_3_1; }

		//MapId
		public RuleCall getMapNameMapIdParserRuleCall_3_1_0() { return cMapNameMapIdParserRuleCall_3_1_0; }

		//(REF EQUALS QUOTE ref+=PathElement+ QUOTE)? & (OBJECT EQUALS QUOTE object+=PathElement+ QUOTE)? & (NAME EQUALS QUOTE
		//nameAttribute=ID QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
		public UnorderedGroup getUnorderedGroup_4() { return cUnorderedGroup_4; }

		//(REF EQUALS QUOTE ref+=PathElement+ QUOTE)?
		public Group getGroup_4_0() { return cGroup_4_0; }

		//REF
		public RuleCall getREFTerminalRuleCall_4_0_0() { return cREFTerminalRuleCall_4_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_0_1() { return cEQUALSTerminalRuleCall_4_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_0_2() { return cQUOTETerminalRuleCall_4_0_2; }

		//ref+=PathElement+
		public Assignment getRefAssignment_4_0_3() { return cRefAssignment_4_0_3; }

		//PathElement
		public RuleCall getRefPathElementParserRuleCall_4_0_3_0() { return cRefPathElementParserRuleCall_4_0_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_0_4() { return cQUOTETerminalRuleCall_4_0_4; }

		//(OBJECT EQUALS QUOTE object+=PathElement+ QUOTE)?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//OBJECT
		public RuleCall getOBJECTTerminalRuleCall_4_1_0() { return cOBJECTTerminalRuleCall_4_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_1_1() { return cEQUALSTerminalRuleCall_4_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_1_2() { return cQUOTETerminalRuleCall_4_1_2; }

		//object+=PathElement+
		public Assignment getObjectAssignment_4_1_3() { return cObjectAssignment_4_1_3; }

		//PathElement
		public RuleCall getObjectPathElementParserRuleCall_4_1_3_0() { return cObjectPathElementParserRuleCall_4_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_1_4() { return cQUOTETerminalRuleCall_4_1_4; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//NAME
		public RuleCall getNAMETerminalRuleCall_4_2_0() { return cNAMETerminalRuleCall_4_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_2_1() { return cEQUALSTerminalRuleCall_4_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_2_2() { return cQUOTETerminalRuleCall_4_2_2; }

		//nameAttribute=ID
		public Assignment getNameAttributeAssignment_4_2_3() { return cNameAttributeAssignment_4_2_3; }

		//ID
		public RuleCall getNameAttributeIDTerminalRuleCall_4_2_3_0() { return cNameAttributeIDTerminalRuleCall_4_2_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_2_4() { return cQUOTETerminalRuleCall_4_2_4; }

		//(FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
		public Group getGroup_4_3() { return cGroup_4_3; }

		//FILTER
		public RuleCall getFILTERTerminalRuleCall_4_3_0() { return cFILTERTerminalRuleCall_4_3_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_4_3_1() { return cEQUALSTerminalRuleCall_4_3_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_3_2() { return cQUOTETerminalRuleCall_4_3_2; }

		//filter=TopLevel
		public Assignment getFilterAssignment_4_3_3() { return cFilterAssignment_4_3_3; }

		//TopLevel
		public RuleCall getFilterTopLevelParserRuleCall_4_3_3_0() { return cFilterTopLevelParserRuleCall_4_3_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_4_3_4() { return cQUOTETerminalRuleCall_4_3_4; }

		//XML_TAG_SINGLEEND | GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod |
		//children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG MAPTAG (DOT
		//mapClosingName=MapId)? closedTag?=GT
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_5_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_5_0; }

		//GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag
		//| children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG MAPTAG (DOT mapClosingName=MapId)?
		//closedTag?=GT
		public Group getGroup_5_1() { return cGroup_5_1; }

		//GT
		public RuleCall getGTTerminalRuleCall_5_1_0() { return cGTTerminalRuleCall_5_1_0; }

		//(children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag |
		//children+=Field | children+=CommentClause | children+=Break)*
		public Alternatives getAlternatives_5_1_1() { return cAlternatives_5_1_1; }

		//children+=Message
		public Assignment getChildrenAssignment_5_1_1_0() { return cChildrenAssignment_5_1_1_0; }

		//Message
		public RuleCall getChildrenMessageParserRuleCall_5_1_1_0_0() { return cChildrenMessageParserRuleCall_5_1_1_0_0; }

		//children+=Property
		public Assignment getChildrenAssignment_5_1_1_1() { return cChildrenAssignment_5_1_1_1; }

		//Property
		public RuleCall getChildrenPropertyParserRuleCall_5_1_1_1_0() { return cChildrenPropertyParserRuleCall_5_1_1_1_0; }

		//children+=Param
		public Assignment getChildrenAssignment_5_1_1_2() { return cChildrenAssignment_5_1_1_2; }

		//Param
		public RuleCall getChildrenParamParserRuleCall_5_1_1_2_0() { return cChildrenParamParserRuleCall_5_1_1_2_0; }

		//children+=Map
		public Assignment getChildrenAssignment_5_1_1_3() { return cChildrenAssignment_5_1_1_3; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_5_1_1_3_0() { return cChildrenMapParserRuleCall_5_1_1_3_0; }

		//children+=MapMethod
		public Assignment getChildrenAssignment_5_1_1_4() { return cChildrenAssignment_5_1_1_4; }

		//MapMethod
		public RuleCall getChildrenMapMethodParserRuleCall_5_1_1_4_0() { return cChildrenMapMethodParserRuleCall_5_1_1_4_0; }

		//children+=DebugTag
		public Assignment getChildrenAssignment_5_1_1_5() { return cChildrenAssignment_5_1_1_5; }

		//DebugTag
		public RuleCall getChildrenDebugTagParserRuleCall_5_1_1_5_0() { return cChildrenDebugTagParserRuleCall_5_1_1_5_0; }

		//children+=Field
		public Assignment getChildrenAssignment_5_1_1_6() { return cChildrenAssignment_5_1_1_6; }

		//Field
		public RuleCall getChildrenFieldParserRuleCall_5_1_1_6_0() { return cChildrenFieldParserRuleCall_5_1_1_6_0; }

		//children+=CommentClause
		public Assignment getChildrenAssignment_5_1_1_7() { return cChildrenAssignment_5_1_1_7; }

		//CommentClause
		public RuleCall getChildrenCommentClauseParserRuleCall_5_1_1_7_0() { return cChildrenCommentClauseParserRuleCall_5_1_1_7_0; }

		//children+=Break
		public Assignment getChildrenAssignment_5_1_1_8() { return cChildrenAssignment_5_1_1_8; }

		//Break
		public RuleCall getChildrenBreakParserRuleCall_5_1_1_8_0() { return cChildrenBreakParserRuleCall_5_1_1_8_0; }

		//XML_START_ENDTAG
		public RuleCall getXML_START_ENDTAGTerminalRuleCall_5_1_2() { return cXML_START_ENDTAGTerminalRuleCall_5_1_2; }

		//MAPTAG
		public RuleCall getMAPTAGTerminalRuleCall_5_1_3() { return cMAPTAGTerminalRuleCall_5_1_3; }

		//(DOT mapClosingName=MapId)?
		public Group getGroup_5_1_4() { return cGroup_5_1_4; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_5_1_4_0() { return cDOTTerminalRuleCall_5_1_4_0; }

		//mapClosingName=MapId
		public Assignment getMapClosingNameAssignment_5_1_4_1() { return cMapClosingNameAssignment_5_1_4_1; }

		//MapId
		public RuleCall getMapClosingNameMapIdParserRuleCall_5_1_4_1_0() { return cMapClosingNameMapIdParserRuleCall_5_1_4_1_0; }

		//closedTag?=GT
		public Assignment getClosedTagAssignment_5_1_5() { return cClosedTagAssignment_5_1_5; }

		//GT
		public RuleCall getClosedTagGTTerminalRuleCall_5_1_5_0() { return cClosedTagGTTerminalRuleCall_5_1_5_0; }
	}

	public class MapIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MapId");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MapId:
		//	ID;
		public ParserRule getRule() { return rule; }

		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}

	public class RequiredElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Required");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cREQUIREDTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cRequiredAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesNonExpressionParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cSplitTagAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_1_0_0 = (RuleCall)cSplitTagAssignment_4_1_0.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_4_1_1_0 = (RuleCall)cClosedTagAssignment_4_1_1.eContents().get(0);
		private final RuleCall cREQUIREDTAGTerminalRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final RuleCall cGTTerminalRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//Required:
		//	LT REQUIREDTAG {Required} attributes+=NonExpression* (XML_TAG_SINGLEEND | splitTag?=GT closedTag?=XML_START_ENDTAG
		//	REQUIREDTAG GT);
		public ParserRule getRule() { return rule; }

		//LT REQUIREDTAG {Required} attributes+=NonExpression* (XML_TAG_SINGLEEND | splitTag?=GT closedTag?=XML_START_ENDTAG
		//REQUIREDTAG GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//REQUIREDTAG
		public RuleCall getREQUIREDTAGTerminalRuleCall_1() { return cREQUIREDTAGTerminalRuleCall_1; }

		//{Required}
		public Action getRequiredAction_2() { return cRequiredAction_2; }

		//attributes+=NonExpression*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//NonExpression
		public RuleCall getAttributesNonExpressionParserRuleCall_3_0() { return cAttributesNonExpressionParserRuleCall_3_0; }

		//XML_TAG_SINGLEEND | splitTag?=GT closedTag?=XML_START_ENDTAG REQUIREDTAG GT
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_0; }

		//splitTag?=GT closedTag?=XML_START_ENDTAG REQUIREDTAG GT
		public Group getGroup_4_1() { return cGroup_4_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_1_0() { return cSplitTagAssignment_4_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_1_0_0() { return cSplitTagGTTerminalRuleCall_4_1_0_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_4_1_1() { return cClosedTagAssignment_4_1_1; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_4_1_1_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_4_1_1_0; }

		//REQUIREDTAG
		public RuleCall getREQUIREDTAGTerminalRuleCall_4_1_2() { return cREQUIREDTAGTerminalRuleCall_4_1_2; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_1_3() { return cGTTerminalRuleCall_4_1_3; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPROPERTYTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cPropertyAction_2 = (Action)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cDESCRIPTIONTerminalRuleCall_3_0_0 = (RuleCall)cGroup_3_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_0_2 = (RuleCall)cGroup_3_0.eContents().get(2);
		private final Assignment cDescriptionAssignment_3_0_3 = (Assignment)cGroup_3_0.eContents().get(3);
		private final RuleCall cDescriptionGarbageParserRuleCall_3_0_3_0 = (RuleCall)cDescriptionAssignment_3_0_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cLENGTHTerminalRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final Assignment cLengthAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cLengthNUMBERTerminalRuleCall_3_1_3_0 = (RuleCall)cLengthAssignment_3_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_1_4 = (RuleCall)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final RuleCall cCARDINALITYTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_2_1 = (RuleCall)cGroup_3_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_2_2 = (RuleCall)cGroup_3_2.eContents().get(2);
		private final Assignment cCardinalityAssignment_3_2_3 = (Assignment)cGroup_3_2.eContents().get(3);
		private final RuleCall cCardinalityIDTerminalRuleCall_3_2_3_0 = (RuleCall)cCardinalityAssignment_3_2_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_2_4 = (RuleCall)cGroup_3_2.eContents().get(4);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final RuleCall cDIRECTIONTerminalRuleCall_3_3_0 = (RuleCall)cGroup_3_3.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_3_1 = (RuleCall)cGroup_3_3.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_3_2 = (RuleCall)cGroup_3_3.eContents().get(2);
		private final Assignment cDirectionAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cDirectionIDTerminalRuleCall_3_3_3_0 = (RuleCall)cDirectionAssignment_3_3_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_3_4 = (RuleCall)cGroup_3_3.eContents().get(4);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final RuleCall cSUBTYPESTerminalRuleCall_3_4_0 = (RuleCall)cGroup_3_4.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_4_1 = (RuleCall)cGroup_3_4.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_4_2 = (RuleCall)cGroup_3_4.eContents().get(2);
		private final Assignment cSubtypesAssignment_3_4_3 = (Assignment)cGroup_3_4.eContents().get(3);
		private final RuleCall cSubtypesIDTerminalRuleCall_3_4_3_0 = (RuleCall)cSubtypesAssignment_3_4_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_4_4 = (RuleCall)cGroup_3_4.eContents().get(4);
		private final Group cGroup_3_5 = (Group)cUnorderedGroup_3.eContents().get(5);
		private final RuleCall cNAMETerminalRuleCall_3_5_0 = (RuleCall)cGroup_3_5.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_5_1 = (RuleCall)cGroup_3_5.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_5_2 = (RuleCall)cGroup_3_5.eContents().get(2);
		private final Assignment cNameAttributeAssignment_3_5_3 = (Assignment)cGroup_3_5.eContents().get(3);
		private final RuleCall cNameAttributeIDTerminalRuleCall_3_5_3_0 = (RuleCall)cNameAttributeAssignment_3_5_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_5_4 = (RuleCall)cGroup_3_5.eContents().get(4);
		private final Group cGroup_3_6 = (Group)cUnorderedGroup_3.eContents().get(6);
		private final RuleCall cTYPETerminalRuleCall_3_6_0 = (RuleCall)cGroup_3_6.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_6_1 = (RuleCall)cGroup_3_6.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_6_2 = (RuleCall)cGroup_3_6.eContents().get(2);
		private final Assignment cTypeAssignment_3_6_3 = (Assignment)cGroup_3_6.eContents().get(3);
		private final RuleCall cTypeIDTerminalRuleCall_3_6_3_0 = (RuleCall)cTypeAssignment_3_6_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_6_4 = (RuleCall)cGroup_3_6.eContents().get(4);
		private final Group cGroup_3_7 = (Group)cUnorderedGroup_3.eContents().get(7);
		private final RuleCall cCONDITIONTerminalRuleCall_3_7_0 = (RuleCall)cGroup_3_7.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_7_1 = (RuleCall)cGroup_3_7.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_7_2 = (RuleCall)cGroup_3_7.eContents().get(2);
		private final Assignment cConditionAssignment_3_7_3 = (Assignment)cGroup_3_7.eContents().get(3);
		private final RuleCall cConditionTopLevelParserRuleCall_3_7_3_0 = (RuleCall)cConditionAssignment_3_7_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_7_4 = (RuleCall)cGroup_3_7.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cSplitTagAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_1_0_0 = (RuleCall)cSplitTagAssignment_4_1_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1_1 = (Alternatives)cGroup_4_1.eContents().get(1);
		private final Assignment cChildrenAssignment_4_1_1_0 = (Assignment)cAlternatives_4_1_1.eContents().get(0);
		private final RuleCall cChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0 = (RuleCall)cChildrenAssignment_4_1_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_1_1 = (Assignment)cAlternatives_4_1_1.eContents().get(1);
		private final RuleCall cChildrenMapParserRuleCall_4_1_1_1_0 = (RuleCall)cChildrenAssignment_4_1_1_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_4_1_2_0 = (RuleCall)cClosedTagAssignment_4_1_2.eContents().get(0);
		private final RuleCall cPROPERTYTAGTerminalRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final RuleCall cGTTerminalRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//Property:
		//	LT PROPERTYTAG {Property} ((DESCRIPTION EQUALS QUOTE description=Garbage QUOTE)? & (LENGTH EQUALS QUOTE length=NUMBER
		//	QUOTE)? & (CARDINALITY EQUALS QUOTE cardinality=ID QUOTE)? & (DIRECTION EQUALS QUOTE direction=ID QUOTE)? & (SUBTYPES
		//	EQUALS QUOTE subtypes=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? &
		//	(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption |
		//	children+=Map)* closedTag?=XML_START_ENDTAG PROPERTYTAG GT);
		public ParserRule getRule() { return rule; }

		//LT PROPERTYTAG {Property} ((DESCRIPTION EQUALS QUOTE description=Garbage QUOTE)? & (LENGTH EQUALS QUOTE length=NUMBER
		//QUOTE)? & (CARDINALITY EQUALS QUOTE cardinality=ID QUOTE)? & (DIRECTION EQUALS QUOTE direction=ID QUOTE)? & (SUBTYPES
		//EQUALS QUOTE subtypes=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? &
		//(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption |
		//children+=Map)* closedTag?=XML_START_ENDTAG PROPERTYTAG GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//PROPERTYTAG
		public RuleCall getPROPERTYTAGTerminalRuleCall_1() { return cPROPERTYTAGTerminalRuleCall_1; }

		//{Property}
		public Action getPropertyAction_2() { return cPropertyAction_2; }

		//(DESCRIPTION EQUALS QUOTE description=Garbage QUOTE)? & (LENGTH EQUALS QUOTE length=NUMBER QUOTE)? & (CARDINALITY EQUALS
		//QUOTE cardinality=ID QUOTE)? & (DIRECTION EQUALS QUOTE direction=ID QUOTE)? & (SUBTYPES EQUALS QUOTE subtypes=ID
		//QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE
		//condition=TopLevel QUOTE)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//(DESCRIPTION EQUALS QUOTE description=Garbage QUOTE)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//DESCRIPTION
		public RuleCall getDESCRIPTIONTerminalRuleCall_3_0_0() { return cDESCRIPTIONTerminalRuleCall_3_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_0_1() { return cEQUALSTerminalRuleCall_3_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_2() { return cQUOTETerminalRuleCall_3_0_2; }

		//description=Garbage
		public Assignment getDescriptionAssignment_3_0_3() { return cDescriptionAssignment_3_0_3; }

		//Garbage
		public RuleCall getDescriptionGarbageParserRuleCall_3_0_3_0() { return cDescriptionGarbageParserRuleCall_3_0_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_4() { return cQUOTETerminalRuleCall_3_0_4; }

		//(LENGTH EQUALS QUOTE length=NUMBER QUOTE)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//LENGTH
		public RuleCall getLENGTHTerminalRuleCall_3_1_0() { return cLENGTHTerminalRuleCall_3_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_1_1() { return cEQUALSTerminalRuleCall_3_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_2() { return cQUOTETerminalRuleCall_3_1_2; }

		//length=NUMBER
		public Assignment getLengthAssignment_3_1_3() { return cLengthAssignment_3_1_3; }

		//NUMBER
		public RuleCall getLengthNUMBERTerminalRuleCall_3_1_3_0() { return cLengthNUMBERTerminalRuleCall_3_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_4() { return cQUOTETerminalRuleCall_3_1_4; }

		//(CARDINALITY EQUALS QUOTE cardinality=ID QUOTE)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//CARDINALITY
		public RuleCall getCARDINALITYTerminalRuleCall_3_2_0() { return cCARDINALITYTerminalRuleCall_3_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_2_1() { return cEQUALSTerminalRuleCall_3_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_2() { return cQUOTETerminalRuleCall_3_2_2; }

		//cardinality=ID
		public Assignment getCardinalityAssignment_3_2_3() { return cCardinalityAssignment_3_2_3; }

		//ID
		public RuleCall getCardinalityIDTerminalRuleCall_3_2_3_0() { return cCardinalityIDTerminalRuleCall_3_2_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_4() { return cQUOTETerminalRuleCall_3_2_4; }

		//(DIRECTION EQUALS QUOTE direction=ID QUOTE)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//DIRECTION
		public RuleCall getDIRECTIONTerminalRuleCall_3_3_0() { return cDIRECTIONTerminalRuleCall_3_3_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_3_1() { return cEQUALSTerminalRuleCall_3_3_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_3_2() { return cQUOTETerminalRuleCall_3_3_2; }

		//direction=ID
		public Assignment getDirectionAssignment_3_3_3() { return cDirectionAssignment_3_3_3; }

		//ID
		public RuleCall getDirectionIDTerminalRuleCall_3_3_3_0() { return cDirectionIDTerminalRuleCall_3_3_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_3_4() { return cQUOTETerminalRuleCall_3_3_4; }

		//(SUBTYPES EQUALS QUOTE subtypes=ID QUOTE)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//SUBTYPES
		public RuleCall getSUBTYPESTerminalRuleCall_3_4_0() { return cSUBTYPESTerminalRuleCall_3_4_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_4_1() { return cEQUALSTerminalRuleCall_3_4_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4_2() { return cQUOTETerminalRuleCall_3_4_2; }

		//subtypes=ID
		public Assignment getSubtypesAssignment_3_4_3() { return cSubtypesAssignment_3_4_3; }

		//ID
		public RuleCall getSubtypesIDTerminalRuleCall_3_4_3_0() { return cSubtypesIDTerminalRuleCall_3_4_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4_4() { return cQUOTETerminalRuleCall_3_4_4; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
		public Group getGroup_3_5() { return cGroup_3_5; }

		//NAME
		public RuleCall getNAMETerminalRuleCall_3_5_0() { return cNAMETerminalRuleCall_3_5_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_5_1() { return cEQUALSTerminalRuleCall_3_5_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_5_2() { return cQUOTETerminalRuleCall_3_5_2; }

		//nameAttribute=ID
		public Assignment getNameAttributeAssignment_3_5_3() { return cNameAttributeAssignment_3_5_3; }

		//ID
		public RuleCall getNameAttributeIDTerminalRuleCall_3_5_3_0() { return cNameAttributeIDTerminalRuleCall_3_5_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_5_4() { return cQUOTETerminalRuleCall_3_5_4; }

		//(TYPE EQUALS QUOTE type=ID QUOTE)?
		public Group getGroup_3_6() { return cGroup_3_6; }

		//TYPE
		public RuleCall getTYPETerminalRuleCall_3_6_0() { return cTYPETerminalRuleCall_3_6_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_6_1() { return cEQUALSTerminalRuleCall_3_6_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_6_2() { return cQUOTETerminalRuleCall_3_6_2; }

		//type=ID
		public Assignment getTypeAssignment_3_6_3() { return cTypeAssignment_3_6_3; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_3_6_3_0() { return cTypeIDTerminalRuleCall_3_6_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_6_4() { return cQUOTETerminalRuleCall_3_6_4; }

		//(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public Group getGroup_3_7() { return cGroup_3_7; }

		//CONDITION
		public RuleCall getCONDITIONTerminalRuleCall_3_7_0() { return cCONDITIONTerminalRuleCall_3_7_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_7_1() { return cEQUALSTerminalRuleCall_3_7_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_7_2() { return cQUOTETerminalRuleCall_3_7_2; }

		//condition=TopLevel
		public Assignment getConditionAssignment_3_7_3() { return cConditionAssignment_3_7_3; }

		//TopLevel
		public RuleCall getConditionTopLevelParserRuleCall_3_7_3_0() { return cConditionTopLevelParserRuleCall_3_7_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_7_4() { return cQUOTETerminalRuleCall_3_7_4; }

		//XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption | children+=Map)* closedTag?=XML_START_ENDTAG PROPERTYTAG
		//GT
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_0; }

		//splitTag?=GT (children+=ExpressionOrOption | children+=Map)* closedTag?=XML_START_ENDTAG PROPERTYTAG GT
		public Group getGroup_4_1() { return cGroup_4_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_1_0() { return cSplitTagAssignment_4_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_1_0_0() { return cSplitTagGTTerminalRuleCall_4_1_0_0; }

		//(children+=ExpressionOrOption | children+=Map)*
		public Alternatives getAlternatives_4_1_1() { return cAlternatives_4_1_1; }

		//children+=ExpressionOrOption
		public Assignment getChildrenAssignment_4_1_1_0() { return cChildrenAssignment_4_1_1_0; }

		//ExpressionOrOption
		public RuleCall getChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0() { return cChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0; }

		//children+=Map
		public Assignment getChildrenAssignment_4_1_1_1() { return cChildrenAssignment_4_1_1_1; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_4_1_1_1_0() { return cChildrenMapParserRuleCall_4_1_1_1_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_4_1_2() { return cClosedTagAssignment_4_1_2; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_4_1_2_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_4_1_2_0; }

		//PROPERTYTAG
		public RuleCall getPROPERTYTAGTerminalRuleCall_4_1_3() { return cPROPERTYTAGTerminalRuleCall_4_1_3; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_1_4() { return cGTTerminalRuleCall_4_1_4; }
	}

	public class ParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Param");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cPARAMTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cParamAction_2 = (Action)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cNAMETerminalRuleCall_3_0_0 = (RuleCall)cGroup_3_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_0_2 = (RuleCall)cGroup_3_0.eContents().get(2);
		private final Assignment cNameAttributeAssignment_3_0_3 = (Assignment)cGroup_3_0.eContents().get(3);
		private final RuleCall cNameAttributeIDTerminalRuleCall_3_0_3_0 = (RuleCall)cNameAttributeAssignment_3_0_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cTYPETerminalRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final Assignment cTypeAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cTypeIDTerminalRuleCall_3_1_3_0 = (RuleCall)cTypeAssignment_3_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_1_4 = (RuleCall)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final RuleCall cCONDITIONTerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_2_1 = (RuleCall)cGroup_3_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_2_2 = (RuleCall)cGroup_3_2.eContents().get(2);
		private final Assignment cConditionAssignment_3_2_3 = (Assignment)cGroup_3_2.eContents().get(3);
		private final RuleCall cConditionTopLevelParserRuleCall_3_2_3_0 = (RuleCall)cConditionAssignment_3_2_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_2_4 = (RuleCall)cGroup_3_2.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cSplitTagAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_1_0_0 = (RuleCall)cSplitTagAssignment_4_1_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1_1 = (Alternatives)cGroup_4_1.eContents().get(1);
		private final Assignment cChildrenAssignment_4_1_1_0 = (Assignment)cAlternatives_4_1_1.eContents().get(0);
		private final RuleCall cChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0 = (RuleCall)cChildrenAssignment_4_1_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_1_1 = (Assignment)cAlternatives_4_1_1.eContents().get(1);
		private final RuleCall cChildrenMapParserRuleCall_4_1_1_1_0 = (RuleCall)cChildrenAssignment_4_1_1_1.eContents().get(0);
		private final RuleCall cXML_START_ENDTAGTerminalRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Assignment cClosedTagAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cClosedTagPARAMTAGTerminalRuleCall_4_1_3_0 = (RuleCall)cClosedTagAssignment_4_1_3.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//Param:
		//	LT PARAMTAG {Param} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION
		//	EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption |
		//	children+=Map)* XML_START_ENDTAG closedTag?=PARAMTAG GT);
		public ParserRule getRule() { return rule; }

		//LT PARAMTAG {Param} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION
		//EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption |
		//children+=Map)* XML_START_ENDTAG closedTag?=PARAMTAG GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//PARAMTAG
		public RuleCall getPARAMTAGTerminalRuleCall_1() { return cPARAMTAGTerminalRuleCall_1; }

		//{Param}
		public Action getParamAction_2() { return cParamAction_2; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE
		//condition=TopLevel QUOTE)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//NAME
		public RuleCall getNAMETerminalRuleCall_3_0_0() { return cNAMETerminalRuleCall_3_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_0_1() { return cEQUALSTerminalRuleCall_3_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_2() { return cQUOTETerminalRuleCall_3_0_2; }

		//nameAttribute=ID
		public Assignment getNameAttributeAssignment_3_0_3() { return cNameAttributeAssignment_3_0_3; }

		//ID
		public RuleCall getNameAttributeIDTerminalRuleCall_3_0_3_0() { return cNameAttributeIDTerminalRuleCall_3_0_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_4() { return cQUOTETerminalRuleCall_3_0_4; }

		//(TYPE EQUALS QUOTE type=ID QUOTE)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//TYPE
		public RuleCall getTYPETerminalRuleCall_3_1_0() { return cTYPETerminalRuleCall_3_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_1_1() { return cEQUALSTerminalRuleCall_3_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_2() { return cQUOTETerminalRuleCall_3_1_2; }

		//type=ID
		public Assignment getTypeAssignment_3_1_3() { return cTypeAssignment_3_1_3; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_3_1_3_0() { return cTypeIDTerminalRuleCall_3_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_4() { return cQUOTETerminalRuleCall_3_1_4; }

		//(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//CONDITION
		public RuleCall getCONDITIONTerminalRuleCall_3_2_0() { return cCONDITIONTerminalRuleCall_3_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_2_1() { return cEQUALSTerminalRuleCall_3_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_2() { return cQUOTETerminalRuleCall_3_2_2; }

		//condition=TopLevel
		public Assignment getConditionAssignment_3_2_3() { return cConditionAssignment_3_2_3; }

		//TopLevel
		public RuleCall getConditionTopLevelParserRuleCall_3_2_3_0() { return cConditionTopLevelParserRuleCall_3_2_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_4() { return cQUOTETerminalRuleCall_3_2_4; }

		//XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption | children+=Map)* XML_START_ENDTAG closedTag?=PARAMTAG GT
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_0; }

		//splitTag?=GT (children+=ExpressionOrOption | children+=Map)* XML_START_ENDTAG closedTag?=PARAMTAG GT
		public Group getGroup_4_1() { return cGroup_4_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_1_0() { return cSplitTagAssignment_4_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_1_0_0() { return cSplitTagGTTerminalRuleCall_4_1_0_0; }

		//(children+=ExpressionOrOption | children+=Map)*
		public Alternatives getAlternatives_4_1_1() { return cAlternatives_4_1_1; }

		//children+=ExpressionOrOption
		public Assignment getChildrenAssignment_4_1_1_0() { return cChildrenAssignment_4_1_1_0; }

		//ExpressionOrOption
		public RuleCall getChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0() { return cChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0; }

		//children+=Map
		public Assignment getChildrenAssignment_4_1_1_1() { return cChildrenAssignment_4_1_1_1; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_4_1_1_1_0() { return cChildrenMapParserRuleCall_4_1_1_1_0; }

		//XML_START_ENDTAG
		public RuleCall getXML_START_ENDTAGTerminalRuleCall_4_1_2() { return cXML_START_ENDTAGTerminalRuleCall_4_1_2; }

		//closedTag?=PARAMTAG
		public Assignment getClosedTagAssignment_4_1_3() { return cClosedTagAssignment_4_1_3; }

		//PARAMTAG
		public RuleCall getClosedTagPARAMTAGTerminalRuleCall_4_1_3_0() { return cClosedTagPARAMTAGTerminalRuleCall_4_1_3_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_1_4() { return cGTTerminalRuleCall_4_1_4; }
	}

	public class MapMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MapMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cMapNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMapNameIDTerminalRuleCall_1_0 = (RuleCall)cMapNameAssignment_1.eContents().get(0);
		private final RuleCall cDOTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cMethodNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMethodNameIDTerminalRuleCall_3_0 = (RuleCall)cMethodNameAssignment_3.eContents().get(0);
		private final Assignment cAttributesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAttributesExpressionParserRuleCall_4_0 = (RuleCall)cAttributesAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Assignment cSplitTagAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_5_1_0_0 = (RuleCall)cSplitTagAssignment_5_1_0.eContents().get(0);
		private final Alternatives cAlternatives_5_1_1 = (Alternatives)cGroup_5_1.eContents().get(1);
		private final Assignment cChildrenAssignment_5_1_1_0 = (Assignment)cAlternatives_5_1_1.eContents().get(0);
		private final RuleCall cChildrenExpressionOrOptionParserRuleCall_5_1_1_0_0 = (RuleCall)cChildrenAssignment_5_1_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_1 = (Assignment)cAlternatives_5_1_1.eContents().get(1);
		private final RuleCall cChildrenMessageParserRuleCall_5_1_1_1_0 = (RuleCall)cChildrenAssignment_5_1_1_1.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_2 = (Assignment)cAlternatives_5_1_1.eContents().get(2);
		private final RuleCall cChildrenPropertyParserRuleCall_5_1_1_2_0 = (RuleCall)cChildrenAssignment_5_1_1_2.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_3 = (Assignment)cAlternatives_5_1_1.eContents().get(3);
		private final RuleCall cChildrenParamParserRuleCall_5_1_1_3_0 = (RuleCall)cChildrenAssignment_5_1_1_3.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_4 = (Assignment)cAlternatives_5_1_1.eContents().get(4);
		private final RuleCall cChildrenMapParserRuleCall_5_1_1_4_0 = (RuleCall)cChildrenAssignment_5_1_1_4.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_5 = (Assignment)cAlternatives_5_1_1.eContents().get(5);
		private final RuleCall cChildrenMapMethodParserRuleCall_5_1_1_5_0 = (RuleCall)cChildrenAssignment_5_1_1_5.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_6 = (Assignment)cAlternatives_5_1_1.eContents().get(6);
		private final RuleCall cChildrenDebugTagParserRuleCall_5_1_1_6_0 = (RuleCall)cChildrenAssignment_5_1_1_6.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_7 = (Assignment)cAlternatives_5_1_1.eContents().get(7);
		private final RuleCall cChildrenFieldParserRuleCall_5_1_1_7_0 = (RuleCall)cChildrenAssignment_5_1_1_7.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_8 = (Assignment)cAlternatives_5_1_1.eContents().get(8);
		private final RuleCall cChildrenCommentClauseParserRuleCall_5_1_1_8_0 = (RuleCall)cChildrenAssignment_5_1_1_8.eContents().get(0);
		private final Assignment cChildrenAssignment_5_1_1_9 = (Assignment)cAlternatives_5_1_1.eContents().get(9);
		private final RuleCall cChildrenBreakParserRuleCall_5_1_1_9_0 = (RuleCall)cChildrenAssignment_5_1_1_9.eContents().get(0);
		private final Assignment cClosedTagAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cClosedTagXML_START_ENDTAGTerminalRuleCall_5_1_2_0 = (RuleCall)cClosedTagAssignment_5_1_2.eContents().get(0);
		private final Assignment cMethodClosingNameAssignment_5_1_3 = (Assignment)cGroup_5_1.eContents().get(3);
		private final RuleCall cMethodClosingNameIDTerminalRuleCall_5_1_3_0 = (RuleCall)cMethodClosingNameAssignment_5_1_3.eContents().get(0);
		private final RuleCall cDOTTerminalRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		private final Assignment cMethodClosingMethodAssignment_5_1_5 = (Assignment)cGroup_5_1.eContents().get(5);
		private final RuleCall cMethodClosingMethodIDTerminalRuleCall_5_1_5_0 = (RuleCall)cMethodClosingMethodAssignment_5_1_5.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_5_1_6 = (RuleCall)cGroup_5_1.eContents().get(6);
		
		//MapMethod:
		//	LT mapName=ID DOT methodName=ID attributes+=Expression* (XML_TAG_SINGLEEND | splitTag?=GT
		//	(children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=Map |
		//	children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
		//	closedTag?=XML_START_ENDTAG methodClosingName=ID DOT methodClosingMethod=ID GT);
		public ParserRule getRule() { return rule; }

		//LT mapName=ID DOT methodName=ID attributes+=Expression* (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption
		//| children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag |
		//children+=Field | children+=CommentClause | children+=Break)* closedTag?=XML_START_ENDTAG methodClosingName=ID DOT
		//methodClosingMethod=ID GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//mapName=ID
		public Assignment getMapNameAssignment_1() { return cMapNameAssignment_1; }

		//ID
		public RuleCall getMapNameIDTerminalRuleCall_1_0() { return cMapNameIDTerminalRuleCall_1_0; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_2() { return cDOTTerminalRuleCall_2; }

		//methodName=ID
		public Assignment getMethodNameAssignment_3() { return cMethodNameAssignment_3; }

		//ID
		public RuleCall getMethodNameIDTerminalRuleCall_3_0() { return cMethodNameIDTerminalRuleCall_3_0; }

		//attributes+=Expression*
		public Assignment getAttributesAssignment_4() { return cAttributesAssignment_4; }

		//Expression
		public RuleCall getAttributesExpressionParserRuleCall_4_0() { return cAttributesExpressionParserRuleCall_4_0; }

		//XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption | children+=Message | children+=Property |
		//children+=Param | children+=Map | children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause
		//| children+=Break)* closedTag?=XML_START_ENDTAG methodClosingName=ID DOT methodClosingMethod=ID GT
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_5_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_5_0; }

		//splitTag?=GT (children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=Map |
		//children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
		//closedTag?=XML_START_ENDTAG methodClosingName=ID DOT methodClosingMethod=ID GT
		public Group getGroup_5_1() { return cGroup_5_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_5_1_0() { return cSplitTagAssignment_5_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_5_1_0_0() { return cSplitTagGTTerminalRuleCall_5_1_0_0; }

		//(children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=Map |
		//children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
		public Alternatives getAlternatives_5_1_1() { return cAlternatives_5_1_1; }

		//children+=ExpressionOrOption
		public Assignment getChildrenAssignment_5_1_1_0() { return cChildrenAssignment_5_1_1_0; }

		//ExpressionOrOption
		public RuleCall getChildrenExpressionOrOptionParserRuleCall_5_1_1_0_0() { return cChildrenExpressionOrOptionParserRuleCall_5_1_1_0_0; }

		//children+=Message
		public Assignment getChildrenAssignment_5_1_1_1() { return cChildrenAssignment_5_1_1_1; }

		//Message
		public RuleCall getChildrenMessageParserRuleCall_5_1_1_1_0() { return cChildrenMessageParserRuleCall_5_1_1_1_0; }

		//children+=Property
		public Assignment getChildrenAssignment_5_1_1_2() { return cChildrenAssignment_5_1_1_2; }

		//Property
		public RuleCall getChildrenPropertyParserRuleCall_5_1_1_2_0() { return cChildrenPropertyParserRuleCall_5_1_1_2_0; }

		//children+=Param
		public Assignment getChildrenAssignment_5_1_1_3() { return cChildrenAssignment_5_1_1_3; }

		//Param
		public RuleCall getChildrenParamParserRuleCall_5_1_1_3_0() { return cChildrenParamParserRuleCall_5_1_1_3_0; }

		//children+=Map
		public Assignment getChildrenAssignment_5_1_1_4() { return cChildrenAssignment_5_1_1_4; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_5_1_1_4_0() { return cChildrenMapParserRuleCall_5_1_1_4_0; }

		//children+=MapMethod
		public Assignment getChildrenAssignment_5_1_1_5() { return cChildrenAssignment_5_1_1_5; }

		//MapMethod
		public RuleCall getChildrenMapMethodParserRuleCall_5_1_1_5_0() { return cChildrenMapMethodParserRuleCall_5_1_1_5_0; }

		//children+=DebugTag
		public Assignment getChildrenAssignment_5_1_1_6() { return cChildrenAssignment_5_1_1_6; }

		//DebugTag
		public RuleCall getChildrenDebugTagParserRuleCall_5_1_1_6_0() { return cChildrenDebugTagParserRuleCall_5_1_1_6_0; }

		//children+=Field
		public Assignment getChildrenAssignment_5_1_1_7() { return cChildrenAssignment_5_1_1_7; }

		//Field
		public RuleCall getChildrenFieldParserRuleCall_5_1_1_7_0() { return cChildrenFieldParserRuleCall_5_1_1_7_0; }

		//children+=CommentClause
		public Assignment getChildrenAssignment_5_1_1_8() { return cChildrenAssignment_5_1_1_8; }

		//CommentClause
		public RuleCall getChildrenCommentClauseParserRuleCall_5_1_1_8_0() { return cChildrenCommentClauseParserRuleCall_5_1_1_8_0; }

		//children+=Break
		public Assignment getChildrenAssignment_5_1_1_9() { return cChildrenAssignment_5_1_1_9; }

		//Break
		public RuleCall getChildrenBreakParserRuleCall_5_1_1_9_0() { return cChildrenBreakParserRuleCall_5_1_1_9_0; }

		//closedTag?=XML_START_ENDTAG
		public Assignment getClosedTagAssignment_5_1_2() { return cClosedTagAssignment_5_1_2; }

		//XML_START_ENDTAG
		public RuleCall getClosedTagXML_START_ENDTAGTerminalRuleCall_5_1_2_0() { return cClosedTagXML_START_ENDTAGTerminalRuleCall_5_1_2_0; }

		//methodClosingName=ID
		public Assignment getMethodClosingNameAssignment_5_1_3() { return cMethodClosingNameAssignment_5_1_3; }

		//ID
		public RuleCall getMethodClosingNameIDTerminalRuleCall_5_1_3_0() { return cMethodClosingNameIDTerminalRuleCall_5_1_3_0; }

		//DOT
		public RuleCall getDOTTerminalRuleCall_5_1_4() { return cDOTTerminalRuleCall_5_1_4; }

		//methodClosingMethod=ID
		public Assignment getMethodClosingMethodAssignment_5_1_5() { return cMethodClosingMethodAssignment_5_1_5; }

		//ID
		public RuleCall getMethodClosingMethodIDTerminalRuleCall_5_1_5_0() { return cMethodClosingMethodIDTerminalRuleCall_5_1_5_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_5_1_6() { return cGTTerminalRuleCall_5_1_6; }
	}

	public class FieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Field");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cFIELDTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cFieldAction_2 = (Action)cGroup.eContents().get(2);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cNAMETerminalRuleCall_3_0_0 = (RuleCall)cGroup_3_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_0_2 = (RuleCall)cGroup_3_0.eContents().get(2);
		private final Assignment cNameAttributeAssignment_3_0_3 = (Assignment)cGroup_3_0.eContents().get(3);
		private final RuleCall cNameAttributeIDTerminalRuleCall_3_0_3_0 = (RuleCall)cNameAttributeAssignment_3_0_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_0_4 = (RuleCall)cGroup_3_0.eContents().get(4);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cCOMMENTTerminalRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final Assignment cCommentAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cCommentGarbageParserRuleCall_3_1_3_0 = (RuleCall)cCommentAssignment_3_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_1_4 = (RuleCall)cGroup_3_1.eContents().get(4);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final RuleCall cTYPETerminalRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_2_1 = (RuleCall)cGroup_3_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_2_2 = (RuleCall)cGroup_3_2.eContents().get(2);
		private final Assignment cTypeAssignment_3_2_3 = (Assignment)cGroup_3_2.eContents().get(3);
		private final RuleCall cTypeIDTerminalRuleCall_3_2_3_0 = (RuleCall)cTypeAssignment_3_2_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_2_4 = (RuleCall)cGroup_3_2.eContents().get(4);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final RuleCall cCONDITIONTerminalRuleCall_3_3_0 = (RuleCall)cGroup_3_3.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_3_1 = (RuleCall)cGroup_3_3.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_3_2 = (RuleCall)cGroup_3_3.eContents().get(2);
		private final Assignment cConditionAssignment_3_3_3 = (Assignment)cGroup_3_3.eContents().get(3);
		private final RuleCall cConditionTopLevelParserRuleCall_3_3_3_0 = (RuleCall)cConditionAssignment_3_3_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_3_4 = (RuleCall)cGroup_3_3.eContents().get(4);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final RuleCall cFILTERTerminalRuleCall_3_4_0 = (RuleCall)cGroup_3_4.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_4_1 = (RuleCall)cGroup_3_4.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_4_2 = (RuleCall)cGroup_3_4.eContents().get(2);
		private final Assignment cFilterAssignment_3_4_3 = (Assignment)cGroup_3_4.eContents().get(3);
		private final RuleCall cFilterTopLevelParserRuleCall_3_4_3_0 = (RuleCall)cFilterAssignment_3_4_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_4_4 = (RuleCall)cGroup_3_4.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cGroup_4_1.eContents().get(0);
		private final Assignment cSplitTagAssignment_4_1_0_0 = (Assignment)cGroup_4_1_0.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_1_0_0_0 = (RuleCall)cSplitTagAssignment_4_1_0_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1_0_1 = (Alternatives)cGroup_4_1_0.eContents().get(1);
		private final Assignment cChildrenAssignment_4_1_0_1_0 = (Assignment)cAlternatives_4_1_0_1.eContents().get(0);
		private final RuleCall cChildrenExpressionOrOptionParserRuleCall_4_1_0_1_0_0 = (RuleCall)cChildrenAssignment_4_1_0_1_0.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_0_1_1 = (Assignment)cAlternatives_4_1_0_1.eContents().get(1);
		private final RuleCall cChildrenParamParserRuleCall_4_1_0_1_1_0 = (RuleCall)cChildrenAssignment_4_1_0_1_1.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_0_1_2 = (Assignment)cAlternatives_4_1_0_1.eContents().get(2);
		private final RuleCall cChildrenMapParserRuleCall_4_1_0_1_2_0 = (RuleCall)cChildrenAssignment_4_1_0_1_2.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_0_1_3 = (Assignment)cAlternatives_4_1_0_1.eContents().get(3);
		private final RuleCall cChildrenMapMethodParserRuleCall_4_1_0_1_3_0 = (RuleCall)cChildrenAssignment_4_1_0_1_3.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_0_1_4 = (Assignment)cAlternatives_4_1_0_1.eContents().get(4);
		private final RuleCall cChildrenDebugTagParserRuleCall_4_1_0_1_4_0 = (RuleCall)cChildrenAssignment_4_1_0_1_4.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_0_1_5 = (Assignment)cAlternatives_4_1_0_1.eContents().get(5);
		private final RuleCall cChildrenCommentClauseParserRuleCall_4_1_0_1_5_0 = (RuleCall)cChildrenAssignment_4_1_0_1_5.eContents().get(0);
		private final Assignment cChildrenAssignment_4_1_0_1_6 = (Assignment)cAlternatives_4_1_0_1.eContents().get(6);
		private final RuleCall cChildrenBreakParserRuleCall_4_1_0_1_6_0 = (RuleCall)cChildrenAssignment_4_1_0_1_6.eContents().get(0);
		private final RuleCall cXML_START_ENDTAGTerminalRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Assignment cClosedTagAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cClosedTagFIELDTAGTerminalRuleCall_4_1_2_0 = (RuleCall)cClosedTagAssignment_4_1_2.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//Field:
		//	LT FIELDTAG {Field} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=Garbage QUOTE)? &
		//	(TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE
		//	filter=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | (splitTag?=GT (children+=ExpressionOrOption | children+=Param |
		//	children+=Map | children+=MapMethod | children+=DebugTag | children+=CommentClause | children+=Break)*)
		//	XML_START_ENDTAG closedTag?=FIELDTAG GT);
		public ParserRule getRule() { return rule; }

		//LT FIELDTAG {Field} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=Garbage QUOTE)? & (TYPE
		//EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE
		//filter=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | (splitTag?=GT (children+=ExpressionOrOption | children+=Param |
		//children+=Map | children+=MapMethod | children+=DebugTag | children+=CommentClause | children+=Break)*)
		//XML_START_ENDTAG closedTag?=FIELDTAG GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//FIELDTAG
		public RuleCall getFIELDTAGTerminalRuleCall_1() { return cFIELDTAGTerminalRuleCall_1; }

		//{Field}
		public Action getFieldAction_2() { return cFieldAction_2; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=Garbage QUOTE)? & (TYPE EQUALS QUOTE type=ID
		//QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//(NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//NAME
		public RuleCall getNAMETerminalRuleCall_3_0_0() { return cNAMETerminalRuleCall_3_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_0_1() { return cEQUALSTerminalRuleCall_3_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_2() { return cQUOTETerminalRuleCall_3_0_2; }

		//nameAttribute=ID
		public Assignment getNameAttributeAssignment_3_0_3() { return cNameAttributeAssignment_3_0_3; }

		//ID
		public RuleCall getNameAttributeIDTerminalRuleCall_3_0_3_0() { return cNameAttributeIDTerminalRuleCall_3_0_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_0_4() { return cQUOTETerminalRuleCall_3_0_4; }

		//(COMMENT EQUALS QUOTE comment=Garbage QUOTE)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//COMMENT
		public RuleCall getCOMMENTTerminalRuleCall_3_1_0() { return cCOMMENTTerminalRuleCall_3_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_1_1() { return cEQUALSTerminalRuleCall_3_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_2() { return cQUOTETerminalRuleCall_3_1_2; }

		//comment=Garbage
		public Assignment getCommentAssignment_3_1_3() { return cCommentAssignment_3_1_3; }

		//Garbage
		public RuleCall getCommentGarbageParserRuleCall_3_1_3_0() { return cCommentGarbageParserRuleCall_3_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_4() { return cQUOTETerminalRuleCall_3_1_4; }

		//(TYPE EQUALS QUOTE type=ID QUOTE)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//TYPE
		public RuleCall getTYPETerminalRuleCall_3_2_0() { return cTYPETerminalRuleCall_3_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_2_1() { return cEQUALSTerminalRuleCall_3_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_2() { return cQUOTETerminalRuleCall_3_2_2; }

		//type=ID
		public Assignment getTypeAssignment_3_2_3() { return cTypeAssignment_3_2_3; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_3_2_3_0() { return cTypeIDTerminalRuleCall_3_2_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_2_4() { return cQUOTETerminalRuleCall_3_2_4; }

		//(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//CONDITION
		public RuleCall getCONDITIONTerminalRuleCall_3_3_0() { return cCONDITIONTerminalRuleCall_3_3_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_3_1() { return cEQUALSTerminalRuleCall_3_3_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_3_2() { return cQUOTETerminalRuleCall_3_3_2; }

		//condition=TopLevel
		public Assignment getConditionAssignment_3_3_3() { return cConditionAssignment_3_3_3; }

		//TopLevel
		public RuleCall getConditionTopLevelParserRuleCall_3_3_3_0() { return cConditionTopLevelParserRuleCall_3_3_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_3_4() { return cQUOTETerminalRuleCall_3_3_4; }

		//(FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//FILTER
		public RuleCall getFILTERTerminalRuleCall_3_4_0() { return cFILTERTerminalRuleCall_3_4_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_4_1() { return cEQUALSTerminalRuleCall_3_4_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4_2() { return cQUOTETerminalRuleCall_3_4_2; }

		//filter=TopLevel
		public Assignment getFilterAssignment_3_4_3() { return cFilterAssignment_3_4_3; }

		//TopLevel
		public RuleCall getFilterTopLevelParserRuleCall_3_4_3_0() { return cFilterTopLevelParserRuleCall_3_4_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_4_4() { return cQUOTETerminalRuleCall_3_4_4; }

		//XML_TAG_SINGLEEND | (splitTag?=GT (children+=ExpressionOrOption | children+=Param | children+=Map | children+=MapMethod
		//| children+=DebugTag | children+=CommentClause | children+=Break)*) XML_START_ENDTAG closedTag?=FIELDTAG GT
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_0; }

		//(splitTag?=GT (children+=ExpressionOrOption | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag
		//| children+=CommentClause | children+=Break)*) XML_START_ENDTAG closedTag?=FIELDTAG GT
		public Group getGroup_4_1() { return cGroup_4_1; }

		//splitTag?=GT (children+=ExpressionOrOption | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag
		//| children+=CommentClause | children+=Break)*
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_1_0_0() { return cSplitTagAssignment_4_1_0_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_1_0_0_0() { return cSplitTagGTTerminalRuleCall_4_1_0_0_0; }

		//(children+=ExpressionOrOption | children+=Param | children+=Map | children+=MapMethod | children+=DebugTag |
		//children+=CommentClause | children+=Break)*
		public Alternatives getAlternatives_4_1_0_1() { return cAlternatives_4_1_0_1; }

		//children+=ExpressionOrOption
		public Assignment getChildrenAssignment_4_1_0_1_0() { return cChildrenAssignment_4_1_0_1_0; }

		//ExpressionOrOption
		public RuleCall getChildrenExpressionOrOptionParserRuleCall_4_1_0_1_0_0() { return cChildrenExpressionOrOptionParserRuleCall_4_1_0_1_0_0; }

		//children+=Param
		public Assignment getChildrenAssignment_4_1_0_1_1() { return cChildrenAssignment_4_1_0_1_1; }

		//Param
		public RuleCall getChildrenParamParserRuleCall_4_1_0_1_1_0() { return cChildrenParamParserRuleCall_4_1_0_1_1_0; }

		//children+=Map
		public Assignment getChildrenAssignment_4_1_0_1_2() { return cChildrenAssignment_4_1_0_1_2; }

		//Map
		public RuleCall getChildrenMapParserRuleCall_4_1_0_1_2_0() { return cChildrenMapParserRuleCall_4_1_0_1_2_0; }

		//children+=MapMethod
		public Assignment getChildrenAssignment_4_1_0_1_3() { return cChildrenAssignment_4_1_0_1_3; }

		//MapMethod
		public RuleCall getChildrenMapMethodParserRuleCall_4_1_0_1_3_0() { return cChildrenMapMethodParserRuleCall_4_1_0_1_3_0; }

		//children+=DebugTag
		public Assignment getChildrenAssignment_4_1_0_1_4() { return cChildrenAssignment_4_1_0_1_4; }

		//DebugTag
		public RuleCall getChildrenDebugTagParserRuleCall_4_1_0_1_4_0() { return cChildrenDebugTagParserRuleCall_4_1_0_1_4_0; }

		//children+=CommentClause
		public Assignment getChildrenAssignment_4_1_0_1_5() { return cChildrenAssignment_4_1_0_1_5; }

		//CommentClause
		public RuleCall getChildrenCommentClauseParserRuleCall_4_1_0_1_5_0() { return cChildrenCommentClauseParserRuleCall_4_1_0_1_5_0; }

		//children+=Break
		public Assignment getChildrenAssignment_4_1_0_1_6() { return cChildrenAssignment_4_1_0_1_6; }

		//Break
		public RuleCall getChildrenBreakParserRuleCall_4_1_0_1_6_0() { return cChildrenBreakParserRuleCall_4_1_0_1_6_0; }

		//XML_START_ENDTAG
		public RuleCall getXML_START_ENDTAGTerminalRuleCall_4_1_1() { return cXML_START_ENDTAGTerminalRuleCall_4_1_1; }

		//closedTag?=FIELDTAG
		public Assignment getClosedTagAssignment_4_1_2() { return cClosedTagAssignment_4_1_2; }

		//FIELDTAG
		public RuleCall getClosedTagFIELDTAGTerminalRuleCall_4_1_2_0() { return cClosedTagFIELDTAGTerminalRuleCall_4_1_2_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_1_3() { return cGTTerminalRuleCall_4_1_3; }
	}

	public class DebugTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DebugTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cDEBUG_TAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cDebugTagAction_2 = (Action)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cGroup_3.eContents().get(0);
		private final RuleCall cVALUETerminalRuleCall_3_0_0 = (RuleCall)cGroup_3_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_0_1 = (RuleCall)cGroup_3_0.eContents().get(1);
		private final Assignment cValueAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cValueTopLevelParserRuleCall_3_0_2_0 = (RuleCall)cValueAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final RuleCall cCONDITIONTerminalRuleCall_3_1_0 = (RuleCall)cGroup_3_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_3_1_2 = (RuleCall)cGroup_3_1.eContents().get(2);
		private final Assignment cConditionAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cConditionTopLevelParserRuleCall_3_1_3_0 = (RuleCall)cConditionAssignment_3_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_3_1_4 = (RuleCall)cGroup_3_1.eContents().get(4);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cSplitTagAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_1_0_0 = (RuleCall)cSplitTagAssignment_4_1_0.eContents().get(0);
		private final Assignment cExpressionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExpressionTopLevelParserRuleCall_4_1_1_0 = (RuleCall)cExpressionAssignment_4_1_1.eContents().get(0);
		private final RuleCall cXML_START_ENDTAGTerminalRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Assignment cClosedTagAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cClosedTagDEBUG_TAGTerminalRuleCall_4_1_3_0 = (RuleCall)cClosedTagAssignment_4_1_3.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//DebugTag:
		//	LT DEBUG_TAG {DebugTag} ((VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?)
		//	(XML_TAG_SINGLEEND | splitTag?=GT expression=TopLevel? XML_START_ENDTAG closedTag?=DEBUG_TAG GT);
		public ParserRule getRule() { return rule; }

		//LT DEBUG_TAG {DebugTag} ((VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?)
		//(XML_TAG_SINGLEEND | splitTag?=GT expression=TopLevel? XML_START_ENDTAG closedTag?=DEBUG_TAG GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//DEBUG_TAG
		public RuleCall getDEBUG_TAGTerminalRuleCall_1() { return cDEBUG_TAGTerminalRuleCall_1; }

		//{DebugTag}
		public Action getDebugTagAction_2() { return cDebugTagAction_2; }

		//(VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public Group getGroup_3() { return cGroup_3; }

		//(VALUE EQUALS value=TopLevel)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//VALUE
		public RuleCall getVALUETerminalRuleCall_3_0_0() { return cVALUETerminalRuleCall_3_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_0_1() { return cEQUALSTerminalRuleCall_3_0_1; }

		//value=TopLevel
		public Assignment getValueAssignment_3_0_2() { return cValueAssignment_3_0_2; }

		//TopLevel
		public RuleCall getValueTopLevelParserRuleCall_3_0_2_0() { return cValueTopLevelParserRuleCall_3_0_2_0; }

		//(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//CONDITION
		public RuleCall getCONDITIONTerminalRuleCall_3_1_0() { return cCONDITIONTerminalRuleCall_3_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_3_1_1() { return cEQUALSTerminalRuleCall_3_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_2() { return cQUOTETerminalRuleCall_3_1_2; }

		//condition=TopLevel
		public Assignment getConditionAssignment_3_1_3() { return cConditionAssignment_3_1_3; }

		//TopLevel
		public RuleCall getConditionTopLevelParserRuleCall_3_1_3_0() { return cConditionTopLevelParserRuleCall_3_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_3_1_4() { return cQUOTETerminalRuleCall_3_1_4; }

		//XML_TAG_SINGLEEND | splitTag?=GT expression=TopLevel? XML_START_ENDTAG closedTag?=DEBUG_TAG GT
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_0; }

		//splitTag?=GT expression=TopLevel? XML_START_ENDTAG closedTag?=DEBUG_TAG GT
		public Group getGroup_4_1() { return cGroup_4_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_1_0() { return cSplitTagAssignment_4_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_1_0_0() { return cSplitTagGTTerminalRuleCall_4_1_0_0; }

		//expression=TopLevel?
		public Assignment getExpressionAssignment_4_1_1() { return cExpressionAssignment_4_1_1; }

		//TopLevel
		public RuleCall getExpressionTopLevelParserRuleCall_4_1_1_0() { return cExpressionTopLevelParserRuleCall_4_1_1_0; }

		//XML_START_ENDTAG
		public RuleCall getXML_START_ENDTAGTerminalRuleCall_4_1_2() { return cXML_START_ENDTAGTerminalRuleCall_4_1_2; }

		//closedTag?=DEBUG_TAG
		public Assignment getClosedTagAssignment_4_1_3() { return cClosedTagAssignment_4_1_3; }

		//DEBUG_TAG
		public RuleCall getClosedTagDEBUG_TAGTerminalRuleCall_4_1_3_0() { return cClosedTagDEBUG_TAGTerminalRuleCall_4_1_3_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_1_4() { return cGTTerminalRuleCall_4_1_4; }
	}

	public class ExpressionOrOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionOrOption");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cLTTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cEXPRESSION_TAGTerminalRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cExpressionTagParserRuleCall_0_2 = (RuleCall)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cOPTIONTAGTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final RuleCall cOptionParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//ExpressionOrOption returns Element:
		//	LT EXPRESSION_TAG ExpressionTag | LT OPTIONTAG Option;
		public ParserRule getRule() { return rule; }

		//LT EXPRESSION_TAG ExpressionTag | LT OPTIONTAG Option
		public Alternatives getAlternatives() { return cAlternatives; }

		//LT EXPRESSION_TAG ExpressionTag
		public Group getGroup_0() { return cGroup_0; }

		//LT
		public RuleCall getLTTerminalRuleCall_0_0() { return cLTTerminalRuleCall_0_0; }

		//EXPRESSION_TAG
		public RuleCall getEXPRESSION_TAGTerminalRuleCall_0_1() { return cEXPRESSION_TAGTerminalRuleCall_0_1; }

		//ExpressionTag
		public RuleCall getExpressionTagParserRuleCall_0_2() { return cExpressionTagParserRuleCall_0_2; }

		//LT OPTIONTAG Option
		public Group getGroup_1() { return cGroup_1; }

		//LT
		public RuleCall getLTTerminalRuleCall_1_0() { return cLTTerminalRuleCall_1_0; }

		//OPTIONTAG
		public RuleCall getOPTIONTAGTerminalRuleCall_1_1() { return cOPTIONTAGTerminalRuleCall_1_1; }

		//Option
		public RuleCall getOptionParserRuleCall_1_2() { return cOptionParserRuleCall_1_2; }
	}

	public class ExpressionTagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExpressionTag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExpressionTagAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cUnorderedGroup_1.eContents().get(0);
		private final RuleCall cVALUETerminalRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_1_0_2 = (RuleCall)cGroup_1_0.eContents().get(2);
		private final Assignment cValueAssignment_1_0_3 = (Assignment)cGroup_1_0.eContents().get(3);
		private final RuleCall cValueTopLevelParserRuleCall_1_0_3_0 = (RuleCall)cValueAssignment_1_0_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_1_0_4 = (RuleCall)cGroup_1_0.eContents().get(4);
		private final Group cGroup_1_1 = (Group)cUnorderedGroup_1.eContents().get(1);
		private final RuleCall cCONDITIONTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_1_1_2 = (RuleCall)cGroup_1_1.eContents().get(2);
		private final Assignment cConditionAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
		private final RuleCall cConditionTopLevelParserRuleCall_1_1_3_0 = (RuleCall)cConditionAssignment_1_1_3.eContents().get(0);
		private final RuleCall cQUOTETerminalRuleCall_1_1_4 = (RuleCall)cGroup_1_1.eContents().get(4);
		private final Group cGroup_1_2 = (Group)cUnorderedGroup_1.eContents().get(2);
		private final RuleCall cXMLSPACETerminalRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final RuleCall cEQUALSTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
		private final RuleCall cQUOTETerminalRuleCall_1_2_2 = (RuleCall)cGroup_1_2.eContents().get(2);
		private final RuleCall cPRESERVETerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
		private final RuleCall cQUOTETerminalRuleCall_1_2_4 = (RuleCall)cGroup_1_2.eContents().get(4);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Assignment cSplitTagAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_2_1_0_0 = (RuleCall)cSplitTagAssignment_2_1_0.eContents().get(0);
		private final Assignment cContentAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cContentGarbageParserRuleCall_2_1_1_0 = (RuleCall)cContentAssignment_2_1_1.eContents().get(0);
		private final Assignment cClosedTagAssignment_2_1_2 = (Assignment)cGroup_2_1.eContents().get(2);
		private final RuleCall cClosedTagEXPRESSION_END_TAGTerminalRuleCall_2_1_2_0 = (RuleCall)cClosedTagAssignment_2_1_2.eContents().get(0);
		
		//ExpressionTag:
		//	{ExpressionTag} ((VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? &
		//	(XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT content=Garbage
		//	closedTag?=EXPRESSION_END_TAG);
		public ParserRule getRule() { return rule; }

		//{ExpressionTag} ((VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? &
		//(XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT content=Garbage
		//closedTag?=EXPRESSION_END_TAG)
		public Group getGroup() { return cGroup; }

		//{ExpressionTag}
		public Action getExpressionTagAction_0() { return cExpressionTagAction_0; }

		//(VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? & (XMLSPACE EQUALS
		//QUOTE PRESERVE QUOTE)?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }

		//(VALUE EQUALS QUOTE value=TopLevel? QUOTE)?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//VALUE
		public RuleCall getVALUETerminalRuleCall_1_0_0() { return cVALUETerminalRuleCall_1_0_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_1_0_1() { return cEQUALSTerminalRuleCall_1_0_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_1_0_2() { return cQUOTETerminalRuleCall_1_0_2; }

		//value=TopLevel?
		public Assignment getValueAssignment_1_0_3() { return cValueAssignment_1_0_3; }

		//TopLevel
		public RuleCall getValueTopLevelParserRuleCall_1_0_3_0() { return cValueTopLevelParserRuleCall_1_0_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_1_0_4() { return cQUOTETerminalRuleCall_1_0_4; }

		//(CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//CONDITION
		public RuleCall getCONDITIONTerminalRuleCall_1_1_0() { return cCONDITIONTerminalRuleCall_1_1_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_1_1_1() { return cEQUALSTerminalRuleCall_1_1_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_1_1_2() { return cQUOTETerminalRuleCall_1_1_2; }

		//condition=TopLevel?
		public Assignment getConditionAssignment_1_1_3() { return cConditionAssignment_1_1_3; }

		//TopLevel
		public RuleCall getConditionTopLevelParserRuleCall_1_1_3_0() { return cConditionTopLevelParserRuleCall_1_1_3_0; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_1_1_4() { return cQUOTETerminalRuleCall_1_1_4; }

		//(XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//XMLSPACE
		public RuleCall getXMLSPACETerminalRuleCall_1_2_0() { return cXMLSPACETerminalRuleCall_1_2_0; }

		//EQUALS
		public RuleCall getEQUALSTerminalRuleCall_1_2_1() { return cEQUALSTerminalRuleCall_1_2_1; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_1_2_2() { return cQUOTETerminalRuleCall_1_2_2; }

		//PRESERVE
		public RuleCall getPRESERVETerminalRuleCall_1_2_3() { return cPRESERVETerminalRuleCall_1_2_3; }

		//QUOTE
		public RuleCall getQUOTETerminalRuleCall_1_2_4() { return cQUOTETerminalRuleCall_1_2_4; }

		//XML_TAG_SINGLEEND | splitTag?=GT content=Garbage closedTag?=EXPRESSION_END_TAG
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_2_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_2_0; }

		//splitTag?=GT content=Garbage closedTag?=EXPRESSION_END_TAG
		public Group getGroup_2_1() { return cGroup_2_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_2_1_0() { return cSplitTagAssignment_2_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_2_1_0_0() { return cSplitTagGTTerminalRuleCall_2_1_0_0; }

		//content=Garbage
		public Assignment getContentAssignment_2_1_1() { return cContentAssignment_2_1_1; }

		//Garbage
		public RuleCall getContentGarbageParserRuleCall_2_1_1_0() { return cContentGarbageParserRuleCall_2_1_1_0; }

		//closedTag?=EXPRESSION_END_TAG
		public Assignment getClosedTagAssignment_2_1_2() { return cClosedTagAssignment_2_1_2; }

		//EXPRESSION_END_TAG
		public RuleCall getClosedTagEXPRESSION_END_TAGTerminalRuleCall_2_1_2_0() { return cClosedTagEXPRESSION_END_TAGTerminalRuleCall_2_1_2_0; }
	}

	public class OptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Option");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cLTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cOPTIONTAGTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Action cOptionAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesNonExpressionParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cXML_TAG_SINGLEENDTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Assignment cSplitTagAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cSplitTagGTTerminalRuleCall_4_1_0_0 = (RuleCall)cSplitTagAssignment_4_1_0.eContents().get(0);
		private final RuleCall cXML_START_ENDTAGTerminalRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Assignment cClosedTagAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cClosedTagOPTIONTAGTerminalRuleCall_4_1_2_0 = (RuleCall)cClosedTagAssignment_4_1_2.eContents().get(0);
		private final RuleCall cGTTerminalRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//Option:
		//	LT OPTIONTAG {Option} attributes+=NonExpression* (XML_TAG_SINGLEEND | splitTag?=GT XML_START_ENDTAG
		//	closedTag?=OPTIONTAG GT);
		public ParserRule getRule() { return rule; }

		//LT OPTIONTAG {Option} attributes+=NonExpression* (XML_TAG_SINGLEEND | splitTag?=GT XML_START_ENDTAG closedTag?=OPTIONTAG
		//GT)
		public Group getGroup() { return cGroup; }

		//LT
		public RuleCall getLTTerminalRuleCall_0() { return cLTTerminalRuleCall_0; }

		//OPTIONTAG
		public RuleCall getOPTIONTAGTerminalRuleCall_1() { return cOPTIONTAGTerminalRuleCall_1; }

		//{Option}
		public Action getOptionAction_2() { return cOptionAction_2; }

		//attributes+=NonExpression*
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//NonExpression
		public RuleCall getAttributesNonExpressionParserRuleCall_3_0() { return cAttributesNonExpressionParserRuleCall_3_0; }

		//XML_TAG_SINGLEEND | splitTag?=GT XML_START_ENDTAG closedTag?=OPTIONTAG GT
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//XML_TAG_SINGLEEND
		public RuleCall getXML_TAG_SINGLEENDTerminalRuleCall_4_0() { return cXML_TAG_SINGLEENDTerminalRuleCall_4_0; }

		//splitTag?=GT XML_START_ENDTAG closedTag?=OPTIONTAG GT
		public Group getGroup_4_1() { return cGroup_4_1; }

		//splitTag?=GT
		public Assignment getSplitTagAssignment_4_1_0() { return cSplitTagAssignment_4_1_0; }

		//GT
		public RuleCall getSplitTagGTTerminalRuleCall_4_1_0_0() { return cSplitTagGTTerminalRuleCall_4_1_0_0; }

		//XML_START_ENDTAG
		public RuleCall getXML_START_ENDTAGTerminalRuleCall_4_1_1() { return cXML_START_ENDTAGTerminalRuleCall_4_1_1; }

		//closedTag?=OPTIONTAG
		public Assignment getClosedTagAssignment_4_1_2() { return cClosedTagAssignment_4_1_2; }

		//OPTIONTAG
		public RuleCall getClosedTagOPTIONTAGTerminalRuleCall_4_1_2_0() { return cClosedTagOPTIONTAGTerminalRuleCall_4_1_2_0; }

		//GT
		public RuleCall getGTTerminalRuleCall_4_1_3() { return cGTTerminalRuleCall_4_1_3; }
	}
	
	
	private TmlElements pTml;
	private TerminalRule tXMLHEAD;
	private TerminalRule tXMLCOMMENT;
	private TerminalRule tLT;
	private TerminalRule tNAVASCRIPTTAG;
	private TerminalRule tTSLTAG;
	private TerminalRule tQUOTE;
	private TerminalRule tNAME;
	private TerminalRule tNOTES;
	private TerminalRule tIDTAG;
	private TerminalRule tREPOSITORY;
	private TerminalRule tAUTHOR;
	private TerminalRule tXMLNS;
	private TerminalRule tSCHEMALOCATION;
	private TerminalRule tNONAMESPACESCHEMALOCATION;
	private TerminalRule tSEMICOLON;
	private TerminalRule tTYPE;
	private TerminalRule tMODE;
	private TerminalRule tSCRIPT;
	private TerminalRule tCONDITION;
	private TerminalRule tFILTER;
	private TerminalRule tOBJECT;
	private TerminalRule tCOUNT;
	private TerminalRule tREF;
	private TerminalRule tLENGTH;
	private TerminalRule tCARDINALITY;
	private TerminalRule tSUBTYPES;
	private TerminalRule tDIRECTION;
	private TerminalRule tDESCRIPTION;
	private TerminalRule tVALUE;
	private TerminalRule tXMLSPACE;
	private TerminalRule tPRESERVE;
	private TerminalRule tCOMMENT;
	private TerminalRule tXML_START_ENDTAG;
	private TerminalRule tGT;
	private TerminalRule tXML_TAG_SINGLEEND;
	private TerminalRule tMAPTAG;
	private TerminalRule tINCLUDETAG;
	private TerminalRule tPROPERTYTAG;
	private TerminalRule tREQUIREDTAG;
	private TerminalRule tVALIDATIONSTAG;
	private TerminalRule tCHECKTAG;
	private TerminalRule tBREAKTAG;
	private TerminalRule tOPTIONTAG;
	private TerminalRule tEQUALS;
	private TerminalRule tEXPRESSION_TAG;
	private TerminalRule tEXPRESSION_END_TAG;
	private TerminalRule tPARAMTAG;
	private TerminalRule tMESSAGETAG;
	private TerminalRule tMETHODTAG;
	private TerminalRule tMETHODSTAG;
	private TerminalRule tFIELDTAG;
	private TerminalRule tDEBUG_TAG;
	private TerminalRule tNAVASCRIPT_END;
	private GarbageElements pGarbage;
	private AttributeNameElements pAttributeName;
	private ExpressionElements pExpression;
	private NonExpressionElements pNonExpression;
	private MethodsElements pMethods;
	private MethodElements pMethod;
	private ValidationsElements pValidations;
	private CheckElements pCheck;
	private CommentClauseElements pCommentClause;
	private BreakElements pBreak;
	private FilePathElements pFilePath;
	private IncludeElements pInclude;
	private MessageElements pMessage;
	private MapElements pMap;
	private MapIdElements pMapId;
	private RequiredElements pRequired;
	private PropertyElements pProperty;
	private ParamElements pParam;
	private MapMethodElements pMapMethod;
	private FieldElements pField;
	private DebugTagElements pDebugTag;
	private ExpressionOrOptionElements pExpressionOrOption;
	private ExpressionTagElements pExpressionTag;
	private OptionElements pOption;
	
	private final Grammar grammar;

	private NavajoExpressionGrammarAccess gaNavajoExpression;

	@Inject
	public TslGrammarAccess(GrammarProvider grammarProvider,
		NavajoExpressionGrammarAccess gaNavajoExpression) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaNavajoExpression = gaNavajoExpression;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.dexels.navajo.dsl.tsl.Tsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public NavajoExpressionGrammarAccess getNavajoExpressionGrammarAccess() {
		return gaNavajoExpression;
	}

	
	////xsi:noNamespaceSchemaLocation
	//Tml:
	//	{Tml} XMLHEAD? LT (TSLTAG | NAVASCRIPTTAG) ((NOTES EQUALS QUOTE Garbage QUOTE)? & (REPOSITORY EQUALS QUOTE Garbage
	//	QUOTE)? & (IDTAG EQUALS QUOTE Garbage QUOTE)? & (AUTHOR EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage
	//	QUOTE)? & (XMLNS COLON ID EQUALS QUOTE Garbage QUOTE)? & (ID COLON SCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (ID
	//	COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE Garbage QUOTE)? & (XMLNS EQUALS QUOTE Garbage QUOTE)?) (GT
	//	(children+=Message | children+=Map | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
	//	children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND);
	public TmlElements getTmlAccess() {
		return (pTml != null) ? pTml : (pTml = new TmlElements());
	}
	
	public ParserRule getTmlRule() {
		return getTmlAccess().getRule();
	}

	//terminal XMLHEAD:
	//	"<?"->"?>";
	public TerminalRule getXMLHEADRule() {
		return (tXMLHEAD != null) ? tXMLHEAD : (tXMLHEAD = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XMLHEAD"));
	} 

	//terminal XMLCOMMENT:
	//	"<!--"->"-->";
	public TerminalRule getXMLCOMMENTRule() {
		return (tXMLCOMMENT != null) ? tXMLCOMMENT : (tXMLCOMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XMLCOMMENT"));
	} 

	////terminal QUOTEQ: '"=';	
	////terminal SEMICOLONQUOTE: ';"';
	//terminal LT:
	//	"<";
	public TerminalRule getLTRule() {
		return (tLT != null) ? tLT : (tLT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LT"));
	} 

	//terminal NAVASCRIPTTAG:
	//	"navascript";
	public TerminalRule getNAVASCRIPTTAGRule() {
		return (tNAVASCRIPTTAG != null) ? tNAVASCRIPTTAG : (tNAVASCRIPTTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NAVASCRIPTTAG"));
	} 

	//terminal TSLTAG:
	//	"tsl";
	public TerminalRule getTSLTAGRule() {
		return (tTSLTAG != null) ? tTSLTAG : (tTSLTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "TSLTAG"));
	} 

	////terminal NAVASCRIPT_START:
	////	'<navascript';
	//terminal QUOTE:
	//	"\"";
	public TerminalRule getQUOTERule() {
		return (tQUOTE != null) ? tQUOTE : (tQUOTE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "QUOTE"));
	} 

	//terminal NAME:
	//	"name";
	public TerminalRule getNAMERule() {
		return (tNAME != null) ? tNAME : (tNAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NAME"));
	} 

	//terminal NOTES:
	//	"notes";
	public TerminalRule getNOTESRule() {
		return (tNOTES != null) ? tNOTES : (tNOTES = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NOTES"));
	} 

	//terminal IDTAG:
	//	"id";
	public TerminalRule getIDTAGRule() {
		return (tIDTAG != null) ? tIDTAG : (tIDTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IDTAG"));
	} 

	//terminal REPOSITORY:
	//	"repository";
	public TerminalRule getREPOSITORYRule() {
		return (tREPOSITORY != null) ? tREPOSITORY : (tREPOSITORY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "REPOSITORY"));
	} 

	//terminal AUTHOR:
	//	"author";
	public TerminalRule getAUTHORRule() {
		return (tAUTHOR != null) ? tAUTHOR : (tAUTHOR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "AUTHOR"));
	} 

	//terminal XMLNS:
	//	"xmlns";
	public TerminalRule getXMLNSRule() {
		return (tXMLNS != null) ? tXMLNS : (tXMLNS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XMLNS"));
	} 

	//terminal SCHEMALOCATION:
	//	"schemaLocation";
	public TerminalRule getSCHEMALOCATIONRule() {
		return (tSCHEMALOCATION != null) ? tSCHEMALOCATION : (tSCHEMALOCATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SCHEMALOCATION"));
	} 

	//terminal NONAMESPACESCHEMALOCATION:
	//	"noNamespaceSchemaLocation";
	public TerminalRule getNONAMESPACESCHEMALOCATIONRule() {
		return (tNONAMESPACESCHEMALOCATION != null) ? tNONAMESPACESCHEMALOCATION : (tNONAMESPACESCHEMALOCATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NONAMESPACESCHEMALOCATION"));
	} 

	//terminal SEMICOLON:
	//	";";
	public TerminalRule getSEMICOLONRule() {
		return (tSEMICOLON != null) ? tSEMICOLON : (tSEMICOLON = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SEMICOLON"));
	} 

	//terminal TYPE:
	//	"type";
	public TerminalRule getTYPERule() {
		return (tTYPE != null) ? tTYPE : (tTYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "TYPE"));
	} 

	//terminal MODE:
	//	"mode";
	public TerminalRule getMODERule() {
		return (tMODE != null) ? tMODE : (tMODE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MODE"));
	} 

	//terminal SCRIPT:
	//	"script";
	public TerminalRule getSCRIPTRule() {
		return (tSCRIPT != null) ? tSCRIPT : (tSCRIPT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SCRIPT"));
	} 

	//terminal CONDITION:
	//	"condition";
	public TerminalRule getCONDITIONRule() {
		return (tCONDITION != null) ? tCONDITION : (tCONDITION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "CONDITION"));
	} 

	//terminal FILTER:
	//	"filter";
	public TerminalRule getFILTERRule() {
		return (tFILTER != null) ? tFILTER : (tFILTER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "FILTER"));
	} 

	//terminal OBJECT:
	//	"object";
	public TerminalRule getOBJECTRule() {
		return (tOBJECT != null) ? tOBJECT : (tOBJECT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OBJECT"));
	} 

	//terminal COUNT:
	//	"count";
	public TerminalRule getCOUNTRule() {
		return (tCOUNT != null) ? tCOUNT : (tCOUNT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COUNT"));
	} 

	//terminal REF:
	//	"ref";
	public TerminalRule getREFRule() {
		return (tREF != null) ? tREF : (tREF = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "REF"));
	} 

	//terminal LENGTH:
	//	"length";
	public TerminalRule getLENGTHRule() {
		return (tLENGTH != null) ? tLENGTH : (tLENGTH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LENGTH"));
	} 

	//terminal CARDINALITY:
	//	"cardinality";
	public TerminalRule getCARDINALITYRule() {
		return (tCARDINALITY != null) ? tCARDINALITY : (tCARDINALITY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "CARDINALITY"));
	} 

	//terminal SUBTYPES:
	//	"subtypes";
	public TerminalRule getSUBTYPESRule() {
		return (tSUBTYPES != null) ? tSUBTYPES : (tSUBTYPES = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SUBTYPES"));
	} 

	//terminal DIRECTION:
	//	"direction";
	public TerminalRule getDIRECTIONRule() {
		return (tDIRECTION != null) ? tDIRECTION : (tDIRECTION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DIRECTION"));
	} 

	//terminal DESCRIPTION:
	//	"description";
	public TerminalRule getDESCRIPTIONRule() {
		return (tDESCRIPTION != null) ? tDESCRIPTION : (tDESCRIPTION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DESCRIPTION"));
	} 

	//terminal VALUE:
	//	"value";
	public TerminalRule getVALUERule() {
		return (tVALUE != null) ? tVALUE : (tVALUE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "VALUE"));
	} 

	//terminal XMLSPACE:
	//	"xml:space";
	public TerminalRule getXMLSPACERule() {
		return (tXMLSPACE != null) ? tXMLSPACE : (tXMLSPACE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XMLSPACE"));
	} 

	//terminal PRESERVE:
	//	"preserve";
	public TerminalRule getPRESERVERule() {
		return (tPRESERVE != null) ? tPRESERVE : (tPRESERVE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PRESERVE"));
	} 

	//terminal COMMENT:
	//	"comment";
	public TerminalRule getCOMMENTRule() {
		return (tCOMMENT != null) ? tCOMMENT : (tCOMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COMMENT"));
	} 

	//terminal XML_START_ENDTAG:
	//	"</";
	public TerminalRule getXML_START_ENDTAGRule() {
		return (tXML_START_ENDTAG != null) ? tXML_START_ENDTAG : (tXML_START_ENDTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XML_START_ENDTAG"));
	} 

	//terminal GT:
	//	">";
	public TerminalRule getGTRule() {
		return (tGT != null) ? tGT : (tGT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "GT"));
	} 

	//terminal XML_TAG_SINGLEEND:
	//	"/>";
	public TerminalRule getXML_TAG_SINGLEENDRule() {
		return (tXML_TAG_SINGLEEND != null) ? tXML_TAG_SINGLEEND : (tXML_TAG_SINGLEEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XML_TAG_SINGLEEND"));
	} 

	////terminal MAP_METHOD_STARTTAG_START: '<_';
	////terminal MAP_METHOD_ENDTAG_START: '</_';
	////terminal XML_TAG_START: '<';
	//terminal MAPTAG:
	//	"map";
	public TerminalRule getMAPTAGRule() {
		return (tMAPTAG != null) ? tMAPTAG : (tMAPTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MAPTAG"));
	} 

	//terminal INCLUDETAG:
	//	"include";
	public TerminalRule getINCLUDETAGRule() {
		return (tINCLUDETAG != null) ? tINCLUDETAG : (tINCLUDETAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INCLUDETAG"));
	} 

	//terminal PROPERTYTAG:
	//	"property";
	public TerminalRule getPROPERTYTAGRule() {
		return (tPROPERTYTAG != null) ? tPROPERTYTAG : (tPROPERTYTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PROPERTYTAG"));
	} 

	//terminal REQUIREDTAG:
	//	"required";
	public TerminalRule getREQUIREDTAGRule() {
		return (tREQUIREDTAG != null) ? tREQUIREDTAG : (tREQUIREDTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "REQUIREDTAG"));
	} 

	//terminal VALIDATIONSTAG:
	//	"validations";
	public TerminalRule getVALIDATIONSTAGRule() {
		return (tVALIDATIONSTAG != null) ? tVALIDATIONSTAG : (tVALIDATIONSTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "VALIDATIONSTAG"));
	} 

	//terminal CHECKTAG:
	//	"check";
	public TerminalRule getCHECKTAGRule() {
		return (tCHECKTAG != null) ? tCHECKTAG : (tCHECKTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "CHECKTAG"));
	} 

	//terminal BREAKTAG:
	//	"break";
	public TerminalRule getBREAKTAGRule() {
		return (tBREAKTAG != null) ? tBREAKTAG : (tBREAKTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BREAKTAG"));
	} 

	//terminal OPTIONTAG:
	//	"option";
	public TerminalRule getOPTIONTAGRule() {
		return (tOPTIONTAG != null) ? tOPTIONTAG : (tOPTIONTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OPTIONTAG"));
	} 

	//terminal EQUALS:
	//	"=";
	public TerminalRule getEQUALSRule() {
		return (tEQUALS != null) ? tEQUALS : (tEQUALS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EQUALS"));
	} 

	//terminal EXPRESSION_TAG:
	//	"expression";
	public TerminalRule getEXPRESSION_TAGRule() {
		return (tEXPRESSION_TAG != null) ? tEXPRESSION_TAG : (tEXPRESSION_TAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EXPRESSION_TAG"));
	} 

	//terminal EXPRESSION_END_TAG:
	//	"</expression" GT;
	public TerminalRule getEXPRESSION_END_TAGRule() {
		return (tEXPRESSION_END_TAG != null) ? tEXPRESSION_END_TAG : (tEXPRESSION_END_TAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EXPRESSION_END_TAG"));
	} 

	//terminal PARAMTAG:
	//	"param";
	public TerminalRule getPARAMTAGRule() {
		return (tPARAMTAG != null) ? tPARAMTAG : (tPARAMTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PARAMTAG"));
	} 

	//terminal MESSAGETAG:
	//	"message";
	public TerminalRule getMESSAGETAGRule() {
		return (tMESSAGETAG != null) ? tMESSAGETAG : (tMESSAGETAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MESSAGETAG"));
	} 

	//terminal METHODTAG:
	//	"method";
	public TerminalRule getMETHODTAGRule() {
		return (tMETHODTAG != null) ? tMETHODTAG : (tMETHODTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "METHODTAG"));
	} 

	//terminal METHODSTAG:
	//	"methods";
	public TerminalRule getMETHODSTAGRule() {
		return (tMETHODSTAG != null) ? tMETHODSTAG : (tMETHODSTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "METHODSTAG"));
	} 

	//terminal FIELDTAG:
	//	"field";
	public TerminalRule getFIELDTAGRule() {
		return (tFIELDTAG != null) ? tFIELDTAG : (tFIELDTAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "FIELDTAG"));
	} 

	//terminal DEBUG_TAG:
	//	"debug";
	public TerminalRule getDEBUG_TAGRule() {
		return (tDEBUG_TAG != null) ? tDEBUG_TAG : (tDEBUG_TAG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DEBUG_TAG"));
	} 

	//terminal NAVASCRIPT_END:
	//	"</navascript" GT //XML_START_ENDTAG NAVASCRIPT_KEYWORD GT;
	//	| "</tsl" GT;
	public TerminalRule getNAVASCRIPT_ENDRule() {
		return (tNAVASCRIPT_END != null) ? tNAVASCRIPT_END : (tNAVASCRIPT_END = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NAVASCRIPT_END"));
	} 

	//Garbage returns ecore::EString:
	//	(ID | DOT | PARENT | DOLLAR | TML_SEPARATOR | NUMBER | COMMA | SQBRACKET_OPEN | SQBRACKET_CLOSE | AT | COLON |
	//	BRACKET_OPEN | BRACKET_CLOSE | TML_EXISTS | EQUALS | NEQUALS | PLUS | MINUS | MULTIPLY | SEMICOLON | TSLTAG |
	//	NAVASCRIPTTAG)*;
	public GarbageElements getGarbageAccess() {
		return (pGarbage != null) ? pGarbage : (pGarbage = new GarbageElements());
	}
	
	public ParserRule getGarbageRule() {
		return getGarbageAccess().getRule();
	}

	//// might need to add a lot more kywords here 'message' | 'comment' 
	//AttributeName:
	//	ID;
	public AttributeNameElements getAttributeNameAccess() {
		return (pAttributeName != null) ? pAttributeName : (pAttributeName = new AttributeNameElements());
	}
	
	public ParserRule getAttributeNameRule() {
		return getAttributeNameAccess().getRule();
	}

	//Expression returns PossibleExpression:
	//	key=ID EQUALS QUOTE expressionValue=TopLevel endToken=QUOTE;
	public ExpressionElements getExpressionAccess() {
		return (pExpression != null) ? pExpression : (pExpression = new ExpressionElements());
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}

	//NonExpression returns PossibleExpression:
	//	(namespace=ID COLON)? key=AttributeName EQUALS (QUOTE value=Garbage QUOTE);
	public NonExpressionElements getNonExpressionAccess() {
		return (pNonExpression != null) ? pNonExpression : (pNonExpression = new NonExpressionElements());
	}
	
	public ParserRule getNonExpressionRule() {
		return getNonExpressionAccess().getRule();
	}

	//Methods:
	//	LT METHODSTAG {Methods} (splitTag?=GT method+=Method* closedTag?=XML_START_ENDTAG METHODSTAG GT | XML_TAG_SINGLEEND);
	public MethodsElements getMethodsAccess() {
		return (pMethods != null) ? pMethods : (pMethods = new MethodsElements());
	}
	
	public ParserRule getMethodsRule() {
		return getMethodsAccess().getRule();
	}

	//Method:
	//	LT METHODTAG {Method} attributes+=NonExpression* (splitTag?=GT children+=Required* closedTag?=XML_START_ENDTAG
	//	METHODTAG GT | XML_TAG_SINGLEEND);
	public MethodElements getMethodAccess() {
		return (pMethod != null) ? pMethod : (pMethod = new MethodElements());
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//Validations:
	//	LT VALIDATIONSTAG {Validations} (splitTag?=GT children+=Check* closedTag?=XML_START_ENDTAG VALIDATIONSTAG GT |
	//	XML_TAG_SINGLEEND);
	public ValidationsElements getValidationsAccess() {
		return (pValidations != null) ? pValidations : (pValidations = new ValidationsElements());
	}
	
	public ParserRule getValidationsRule() {
		return getValidationsAccess().getRule();
	}

	//Check:
	//	LT CHECKTAG {Check} attributes+=NonExpression* (splitTag?=GT expression=TopLevel closedTag?=XML_START_ENDTAG CHECKTAG
	//	GT | XML_TAG_SINGLEEND);
	public CheckElements getCheckAccess() {
		return (pCheck != null) ? pCheck : (pCheck = new CheckElements());
	}
	
	public ParserRule getCheckRule() {
		return getCheckAccess().getRule();
	}

	//CommentClause returns Comment:
	//	LT COMMENT {Comment} attributes+=Expression* (splitTag?=GT closedTag?=XML_START_ENDTAG COMMENT GT |
	//	XML_TAG_SINGLEEND);
	public CommentClauseElements getCommentClauseAccess() {
		return (pCommentClause != null) ? pCommentClause : (pCommentClause = new CommentClauseElements());
	}
	
	public ParserRule getCommentClauseRule() {
		return getCommentClauseAccess().getRule();
	}

	//Break:
	//	LT BREAKTAG {Break} attributes+=Expression* (splitTag?=GT //		expression=TopLevel
	//	closedTag?=BREAKTAG GT | XML_TAG_SINGLEEND);
	public BreakElements getBreakAccess() {
		return (pBreak != null) ? pBreak : (pBreak = new BreakElements());
	}
	
	public ParserRule getBreakRule() {
		return getBreakAccess().getRule();
	}

	//FilePath returns ecore::EString:
	//	(TML_SEPARATOR | PARENT | DOT | ID)+;
	public FilePathElements getFilePathAccess() {
		return (pFilePath != null) ? pFilePath : (pFilePath = new FilePathElements());
	}
	
	public ParserRule getFilePathRule() {
		return getFilePathAccess().getRule();
	}

	//// create Include entity in Model
	//Include returns Method:
	//	LT INCLUDETAG {Method} (SCRIPT EQUALS QUOTE path+=PathElement+ QUOTE)? (splitTag?=GT closedTag?=INCLUDETAG |
	//	XML_TAG_SINGLEEND);
	public IncludeElements getIncludeAccess() {
		return (pInclude != null) ? pInclude : (pInclude = new IncludeElements());
	}
	
	public ParserRule getIncludeRule() {
		return getIncludeAccess().getRule();
	}

	//Message:
	//	LT MESSAGETAG {Message} ((COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS
	//	QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel
	//	QUOTE)?) (splitTag?=GT (children+=Message | children+=Property | children+=Param | children+=Map | children+=MapMethod
	//	| children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)* XML_START_ENDTAG
	//	closedTag?=MESSAGETAG GT | XML_TAG_SINGLEEND);
	public MessageElements getMessageAccess() {
		return (pMessage != null) ? pMessage : (pMessage = new MessageElements());
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	//Map:
	//	LT MAPTAG {Map} (DOT mapName=MapId)? ((REF EQUALS QUOTE ref+=PathElement+ QUOTE)? & (OBJECT EQUALS QUOTE
	//	object+=PathElement+ QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel
	//	QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=Message | children+=Property | children+=Param | children+=Map |
	//	children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
	//	XML_START_ENDTAG MAPTAG (DOT mapClosingName=MapId)? closedTag?=GT);
	public MapElements getMapAccess() {
		return (pMap != null) ? pMap : (pMap = new MapElements());
	}
	
	public ParserRule getMapRule() {
		return getMapAccess().getRule();
	}

	//MapId:
	//	ID;
	public MapIdElements getMapIdAccess() {
		return (pMapId != null) ? pMapId : (pMapId = new MapIdElements());
	}
	
	public ParserRule getMapIdRule() {
		return getMapIdAccess().getRule();
	}

	//Required:
	//	LT REQUIREDTAG {Required} attributes+=NonExpression* (XML_TAG_SINGLEEND | splitTag?=GT closedTag?=XML_START_ENDTAG
	//	REQUIREDTAG GT);
	public RequiredElements getRequiredAccess() {
		return (pRequired != null) ? pRequired : (pRequired = new RequiredElements());
	}
	
	public ParserRule getRequiredRule() {
		return getRequiredAccess().getRule();
	}

	//Property:
	//	LT PROPERTYTAG {Property} ((DESCRIPTION EQUALS QUOTE description=Garbage QUOTE)? & (LENGTH EQUALS QUOTE length=NUMBER
	//	QUOTE)? & (CARDINALITY EQUALS QUOTE cardinality=ID QUOTE)? & (DIRECTION EQUALS QUOTE direction=ID QUOTE)? & (SUBTYPES
	//	EQUALS QUOTE subtypes=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? &
	//	(CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption |
	//	children+=Map)* closedTag?=XML_START_ENDTAG PROPERTYTAG GT);
	public PropertyElements getPropertyAccess() {
		return (pProperty != null) ? pProperty : (pProperty = new PropertyElements());
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//Param:
	//	LT PARAMTAG {Param} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION
	//	EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT (children+=ExpressionOrOption |
	//	children+=Map)* XML_START_ENDTAG closedTag?=PARAMTAG GT);
	public ParamElements getParamAccess() {
		return (pParam != null) ? pParam : (pParam = new ParamElements());
	}
	
	public ParserRule getParamRule() {
		return getParamAccess().getRule();
	}

	//MapMethod:
	//	LT mapName=ID DOT methodName=ID attributes+=Expression* (XML_TAG_SINGLEEND | splitTag?=GT
	//	(children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=Map |
	//	children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break)*
	//	closedTag?=XML_START_ENDTAG methodClosingName=ID DOT methodClosingMethod=ID GT);
	public MapMethodElements getMapMethodAccess() {
		return (pMapMethod != null) ? pMapMethod : (pMapMethod = new MapMethodElements());
	}
	
	public ParserRule getMapMethodRule() {
		return getMapMethodAccess().getRule();
	}

	//Field:
	//	LT FIELDTAG {Field} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=Garbage QUOTE)? &
	//	(TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE
	//	filter=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | (splitTag?=GT (children+=ExpressionOrOption | children+=Param |
	//	children+=Map | children+=MapMethod | children+=DebugTag | children+=CommentClause | children+=Break)*)
	//	XML_START_ENDTAG closedTag?=FIELDTAG GT);
	public FieldElements getFieldAccess() {
		return (pField != null) ? pField : (pField = new FieldElements());
	}
	
	public ParserRule getFieldRule() {
		return getFieldAccess().getRule();
	}

	//DebugTag:
	//	LT DEBUG_TAG {DebugTag} ((VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?)
	//	(XML_TAG_SINGLEEND | splitTag?=GT expression=TopLevel? XML_START_ENDTAG closedTag?=DEBUG_TAG GT);
	public DebugTagElements getDebugTagAccess() {
		return (pDebugTag != null) ? pDebugTag : (pDebugTag = new DebugTagElements());
	}
	
	public ParserRule getDebugTagRule() {
		return getDebugTagAccess().getRule();
	}

	//ExpressionOrOption returns Element:
	//	LT EXPRESSION_TAG ExpressionTag | LT OPTIONTAG Option;
	public ExpressionOrOptionElements getExpressionOrOptionAccess() {
		return (pExpressionOrOption != null) ? pExpressionOrOption : (pExpressionOrOption = new ExpressionOrOptionElements());
	}
	
	public ParserRule getExpressionOrOptionRule() {
		return getExpressionOrOptionAccess().getRule();
	}

	//ExpressionTag:
	//	{ExpressionTag} ((VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? &
	//	(XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | splitTag?=GT content=Garbage
	//	closedTag?=EXPRESSION_END_TAG);
	public ExpressionTagElements getExpressionTagAccess() {
		return (pExpressionTag != null) ? pExpressionTag : (pExpressionTag = new ExpressionTagElements());
	}
	
	public ParserRule getExpressionTagRule() {
		return getExpressionTagAccess().getRule();
	}

	//Option:
	//	LT OPTIONTAG {Option} attributes+=NonExpression* (XML_TAG_SINGLEEND | splitTag?=GT XML_START_ENDTAG
	//	closedTag?=OPTIONTAG GT);
	public OptionElements getOptionAccess() {
		return (pOption != null) ? pOption : (pOption = new OptionElements());
	}
	
	public ParserRule getOptionRule() {
		return getOptionAccess().getRule();
	}

	//TopLevel:
	//	toplevelExpression=OrExpression;
	public NavajoExpressionGrammarAccess.TopLevelElements getTopLevelAccess() {
		return gaNavajoExpression.getTopLevelAccess();
	}
	
	public ParserRule getTopLevelRule() {
		return getTopLevelAccess().getRule();
	}

	//terminal XML_GT:
	//	"&gt;";
	public TerminalRule getXML_GTRule() {
		return gaNavajoExpression.getXML_GTRule();
	} 

	//terminal XML_LT:
	//	"&lt;";
	public TerminalRule getXML_LTRule() {
		return gaNavajoExpression.getXML_LTRule();
	} 

	//terminal XML_GTEQ:
	//	"&gt;=";
	public TerminalRule getXML_GTEQRule() {
		return gaNavajoExpression.getXML_GTEQRule();
	} 

	//terminal XML_LTEQ:
	//	"&lt;=";
	public TerminalRule getXML_LTEQRule() {
		return gaNavajoExpression.getXML_LTEQRule();
	} 

	//terminal DOT:
	//	".";
	public TerminalRule getDOTRule() {
		return gaNavajoExpression.getDOTRule();
	} 

	//terminal NUMBER returns ecore::EBigDecimal:
	//	"0".."9"+ (DOT "0".."9"+)?;
	public TerminalRule getNUMBERRule() {
		return gaNavajoExpression.getNUMBERRule();
	} 

	//terminal BADNUMBER:
	//	"0".."9"+ DOT;
	public TerminalRule getBADNUMBERRule() {
		return gaNavajoExpression.getBADNUMBERRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaNavajoExpression.getWSRule();
	} 

	//terminal TRUE:
	//	"true" | "TRUE";
	public TerminalRule getTRUERule() {
		return gaNavajoExpression.getTRUERule();
	} 

	//terminal FALSE:
	//	"false" | "FALSE";
	public TerminalRule getFALSERule() {
		return gaNavajoExpression.getFALSERule();
	} 

	//terminal NULL:
	//	"null" | "NULL";
	public TerminalRule getNULLRule() {
		return gaNavajoExpression.getNULLRule();
	} 

	//terminal TODAY:
	//	"today" | "TODAY";
	public TerminalRule getTODAYRule() {
		return gaNavajoExpression.getTODAYRule();
	} 

	//terminal FORALL:
	//	"FORALL";
	public TerminalRule getFORALLRule() {
		return gaNavajoExpression.getFORALLRule();
	} 

	//terminal PARENT:
	//	"..";
	public TerminalRule getPARENTRule() {
		return gaNavajoExpression.getPARENTRule();
	} 

	//terminal AT:
	//	"@";
	public TerminalRule getATRule() {
		return gaNavajoExpression.getATRule();
	} 

	//terminal COLON:
	//	":";
	public TerminalRule getCOLONRule() {
		return gaNavajoExpression.getCOLONRule();
	} 

	//terminal NOT:
	//	"!";
	public TerminalRule getNOTRule() {
		return gaNavajoExpression.getNOTRule();
	} 

	//terminal LITERALSTRING:
	//	"\'" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'" | "<![CDATA["->"]]>";
	public TerminalRule getLITERALSTRINGRule() {
		return gaNavajoExpression.getLITERALSTRINGRule();
	} 

	//terminal SQBRACKET_OPEN:
	//	"[";
	public TerminalRule getSQBRACKET_OPENRule() {
		return gaNavajoExpression.getSQBRACKET_OPENRule();
	} 

	//terminal SQBRACKET_CLOSE:
	//	"]";
	public TerminalRule getSQBRACKET_CLOSERule() {
		return gaNavajoExpression.getSQBRACKET_CLOSERule();
	} 

	//terminal TML_SEPARATOR:
	//	"/";
	public TerminalRule getTML_SEPARATORRule() {
		return gaNavajoExpression.getTML_SEPARATORRule();
	} 

	//terminal TML_EXISTS:
	//	"?";
	public TerminalRule getTML_EXISTSRule() {
		return gaNavajoExpression.getTML_EXISTSRule();
	} 

	//terminal DOLLAR:
	//	"$";
	public TerminalRule getDOLLARRule() {
		return gaNavajoExpression.getDOLLARRule();
	} 

	//terminal BRACKET_OPEN:
	//	"(";
	public TerminalRule getBRACKET_OPENRule() {
		return gaNavajoExpression.getBRACKET_OPENRule();
	} 

	//terminal BRACKET_CLOSE:
	//	")";
	public TerminalRule getBRACKET_CLOSERule() {
		return gaNavajoExpression.getBRACKET_CLOSERule();
	} 

	//terminal COMMA:
	//	",";
	public TerminalRule getCOMMARule() {
		return gaNavajoExpression.getCOMMARule();
	} 

	//terminal AND:
	//	"AND";
	public TerminalRule getANDRule() {
		return gaNavajoExpression.getANDRule();
	} 

	//terminal OR:
	//	"OR";
	public TerminalRule getORRule() {
		return gaNavajoExpression.getORRule();
	} 

	//terminal HASH:
	//	"#";
	public TerminalRule getHASHRule() {
		return gaNavajoExpression.getHASHRule();
	} 

	//terminal CURLYOPEN:
	//	"{";
	public TerminalRule getCURLYOPENRule() {
		return gaNavajoExpression.getCURLYOPENRule();
	} 

	//terminal CURLYCLOSE:
	//	"}";
	public TerminalRule getCURLYCLOSERule() {
		return gaNavajoExpression.getCURLYCLOSERule();
	} 

	//terminal EQUALSEQUALS:
	//	"==";
	public TerminalRule getEQUALSEQUALSRule() {
		return gaNavajoExpression.getEQUALSEQUALSRule();
	} 

	//terminal NEQUALS:
	//	"!=";
	public TerminalRule getNEQUALSRule() {
		return gaNavajoExpression.getNEQUALSRule();
	} 

	//terminal PLUS:
	//	"+";
	public TerminalRule getPLUSRule() {
		return gaNavajoExpression.getPLUSRule();
	} 

	//terminal MINUS:
	//	"-";
	public TerminalRule getMINUSRule() {
		return gaNavajoExpression.getMINUSRule();
	} 

	//terminal MULTIPLY:
	//	"*";
	public TerminalRule getMULTIPLYRule() {
		return gaNavajoExpression.getMULTIPLYRule();
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaNavajoExpression.getIDRule();
	} 

	//AnyExpression:
	//	XML_GT | XML_LT | XML_GTEQ | XML_LTEQ | DOT | NUMBER | BADNUMBER | WS | TRUE | FALSE | NULL | TODAY | FORALL | PARENT
	//	| AT | COLON | NOT | LITERALSTRING | SQBRACKET_CLOSE | SQBRACKET_OPEN | TML_SEPARATOR | TML_EXISTS | DOLLAR |
	//	BRACKET_OPEN | BRACKET_CLOSE | COMMA | AND | OR | HASH | CURLYOPEN | CURLYCLOSE | EQUALSEQUALS | NEQUALS | PLUS |
	//	MINUS | MULTIPLY | ID;
	public NavajoExpressionGrammarAccess.AnyExpressionElements getAnyExpressionAccess() {
		return gaNavajoExpression.getAnyExpressionAccess();
	}
	
	public ParserRule getAnyExpressionRule() {
		return getAnyExpressionAccess().getRule();
	}

	//// skipped url, image, points, datepattern, password
	//PathElement returns ecore::EString:
	//	ID | DOT | PARENT | TML_SEPARATOR;
	public NavajoExpressionGrammarAccess.PathElementElements getPathElementAccess() {
		return gaNavajoExpression.getPathElementAccess();
	}
	
	public ParserRule getPathElementRule() {
		return getPathElementAccess().getRule();
	}

	//TmlExpression returns TmlReference:
	//	SQBRACKET_OPEN absolute?=TML_SEPARATOR? param?=AT? elements+=PathElement (TML_SEPARATOR elements+=PathElement)*
	//	SQBRACKET_CLOSE;
	public NavajoExpressionGrammarAccess.TmlExpressionElements getTmlExpressionAccess() {
		return gaNavajoExpression.getTmlExpressionAccess();
	}
	
	public ParserRule getTmlExpressionRule() {
		return getTmlExpressionAccess().getRule();
	}

	//ExistsTmlExpression returns ExistsTmlReference:
	//	TML_EXISTS SQBRACKET_OPEN absolute?=TML_SEPARATOR? param?=AT? elements+=PathElement (TML_SEPARATOR
	//	elements+=PathElement)* SQBRACKET_CLOSE;
	public NavajoExpressionGrammarAccess.ExistsTmlExpressionElements getExistsTmlExpressionAccess() {
		return gaNavajoExpression.getExistsTmlExpressionAccess();
	}
	
	public ParserRule getExistsTmlExpressionRule() {
		return getExistsTmlExpressionAccess().getRule();
	}

	//MapReferenceParams returns ReferenceParams:
	//	BRACKET_OPEN getterParams+=Literal (COMMA getterParams+=Literal)* BRACKET_CLOSE;
	public NavajoExpressionGrammarAccess.MapReferenceParamsElements getMapReferenceParamsAccess() {
		return gaNavajoExpression.getMapReferenceParamsAccess();
	}
	
	public ParserRule getMapReferenceParamsRule() {
		return getMapReferenceParamsAccess().getRule();
	}

	//MapGetReference:
	//	operations+=DOLLAR (elements+=PARENT TML_SEPARATOR)* elements+=ID referenceParams=MapReferenceParams?;
	public NavajoExpressionGrammarAccess.MapGetReferenceElements getMapGetReferenceAccess() {
		return gaNavajoExpression.getMapGetReferenceAccess();
	}
	
	public ParserRule getMapGetReferenceRule() {
		return getMapGetReferenceAccess().getRule();
	}

	//OrExpression returns Expression:
	//	parameters+=AndExpression (operations+=OR parameters+=AndExpression)*;
	public NavajoExpressionGrammarAccess.OrExpressionElements getOrExpressionAccess() {
		return gaNavajoExpression.getOrExpressionAccess();
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}

	//AndExpression returns Expression:
	//	parameters+=EqualityExpression (operations+=AND parameters+=EqualityExpression)*;
	public NavajoExpressionGrammarAccess.AndExpressionElements getAndExpressionAccess() {
		return gaNavajoExpression.getAndExpressionAccess();
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}

	//EqualityExpression returns Expression:
	//	parameters+=RelationalExpression (operations+=EQUALSEQUALS parameters+=RelationalExpression | operations+=NEQUALS
	//	parameters+=RelationalExpression)?;
	public NavajoExpressionGrammarAccess.EqualityExpressionElements getEqualityExpressionAccess() {
		return gaNavajoExpression.getEqualityExpressionAccess();
	}
	
	public ParserRule getEqualityExpressionRule() {
		return getEqualityExpressionAccess().getRule();
	}

	//// Skipped for now. Trouble with overloaded '<' stuff  
	//RelationalExpression returns Expression:
	//	{Expression} parameters+=AdditiveExpression (operations+=XML_LT parameters+=AdditiveExpression | operations+=XML_GT
	//	parameters+=AdditiveExpression | operations+=XML_LTEQ parameters+=AdditiveExpression | operations+=XML_GTEQ
	//	parameters+=AdditiveExpression)?;
	public NavajoExpressionGrammarAccess.RelationalExpressionElements getRelationalExpressionAccess() {
		return gaNavajoExpression.getRelationalExpressionAccess();
	}
	
	public ParserRule getRelationalExpressionRule() {
		return getRelationalExpressionAccess().getRule();
	}

	//AdditiveExpression returns Expression:
	//	parameters+=MultiplicativeExpression (PLUS parameters+=MultiplicativeExpression | MINUS
	//	parameters+=MultiplicativeExpression)*;
	public NavajoExpressionGrammarAccess.AdditiveExpressionElements getAdditiveExpressionAccess() {
		return gaNavajoExpression.getAdditiveExpressionAccess();
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}

	//MultiplicativeExpression returns Expression:
	//	parameters+=UnaryExpression (operations+=MULTIPLY parameters+=UnaryExpression | operations+=TML_SEPARATOR
	//	parameters+=UnaryExpression)*;
	public NavajoExpressionGrammarAccess.MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return gaNavajoExpression.getMultiplicativeExpressionAccess();
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}

	//UnaryExpression returns Expression:
	//	(NOT parameters+=PrimaryExpression | MINUS parameters+=PrimaryExpression) | PrimaryExpression;
	public NavajoExpressionGrammarAccess.UnaryExpressionElements getUnaryExpressionAccess() {
		return gaNavajoExpression.getUnaryExpressionAccess();
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}

	//PrimaryExpression returns Expression:
	//	parameters+=Literal | BRACKET_OPEN parameters+=OrExpression BRACKET_CLOSE;
	public NavajoExpressionGrammarAccess.PrimaryExpressionElements getPrimaryExpressionAccess() {
		return gaNavajoExpression.getPrimaryExpressionAccess();
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}

	//// Keep this one in place so it will create a node for the code completion
	//FunctionName:
	//	ID;
	public NavajoExpressionGrammarAccess.FunctionNameElements getFunctionNameAccess() {
		return gaNavajoExpression.getFunctionNameAccess();
	}
	
	public ParserRule getFunctionNameRule() {
		return getFunctionNameAccess().getRule();
	}

	//FunctionCall:
	//	name=FunctionName BRACKET_OPEN parameters+=OrExpression? (COMMA parameters+=OrExpression)* BRACKET_CLOSE;
	public NavajoExpressionGrammarAccess.FunctionCallElements getFunctionCallAccess() {
		return gaNavajoExpression.getFunctionCallAccess();
	}
	
	public ParserRule getFunctionCallRule() {
		return getFunctionCallAccess().getRule();
	}

	//DateLiteral returns Expression:
	//	{Expression} NUMBER HASH NUMBER HASH NUMBER HASH NUMBER HASH NUMBER HASH NUMBER;
	public NavajoExpressionGrammarAccess.DateLiteralElements getDateLiteralAccess() {
		return gaNavajoExpression.getDateLiteralAccess();
	}
	
	public ParserRule getDateLiteralRule() {
		return getDateLiteralAccess().getRule();
	}

	//Literal returns Expression:
	//	{Expression} NUMBER | valueString=LITERALSTRING | operations+=FORALL BRACKET_OPEN valueString=LITERALSTRING COMMA
	//	parameters+=OrExpression BRACKET_CLOSE | parameters+=FunctionCall | expressionType=CURLYOPEN parameters+=OrExpression?
	//	(COMMA parameters+=OrExpression)* CURLYCLOSE | elements+=NULL | elements+=TODAY | elements+=TRUE | elements+=FALSE |
	//	parameters+=TmlExpression | parameters+=ExistsTmlExpression | parameters+=MapGetReference | parameters+=DateLiteral;
	public NavajoExpressionGrammarAccess.LiteralElements getLiteralAccess() {
		return gaNavajoExpression.getLiteralAccess();
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}
}
