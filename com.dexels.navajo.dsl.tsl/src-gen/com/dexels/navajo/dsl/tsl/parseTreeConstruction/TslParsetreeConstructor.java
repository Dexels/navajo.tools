/*
* generated by Xtext
*/
package com.dexels.navajo.dsl.tsl.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import com.dexels.navajo.dsl.tsl.services.TslGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class TslParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private TslGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_Group(this, this, 0, inst);
			case 1: return new Expression_Group(this, this, 1, inst);
			case 2: return new NonExpression_Group(this, this, 2, inst);
			case 3: return new Methods_Group(this, this, 3, inst);
			case 4: return new Method_Group(this, this, 4, inst);
			case 5: return new Validations_Group(this, this, 5, inst);
			case 6: return new Check_Group(this, this, 6, inst);
			case 7: return new CommentClause_Group(this, this, 7, inst);
			case 8: return new Break_Group(this, this, 8, inst);
			case 9: return new Include_Group(this, this, 9, inst);
			case 10: return new Message_Group(this, this, 10, inst);
			case 11: return new Required_Group(this, this, 11, inst);
			case 12: return new Property_Group(this, this, 12, inst);
			case 13: return new Param_Group(this, this, 13, inst);
			case 14: return new MapMethod_Group(this, this, 14, inst);
			case 15: return new Field_Group(this, this, 15, inst);
			case 16: return new DebugTag_Group(this, this, 16, inst);
			case 17: return new ExpressionOrOption_Alternatives(this, this, 17, inst);
			case 18: return new ExpressionTag_Group(this, this, 18, inst);
			case 19: return new Option_Group(this, this, 19, inst);
			case 20: return new TopLevel_ToplevelExpressionAssignment(this, this, 20, inst);
			case 21: return new TmlExpression_Group(this, this, 21, inst);
			case 22: return new ExistsTmlExpression_Group(this, this, 22, inst);
			case 23: return new MapReferenceParams_Group(this, this, 23, inst);
			case 24: return new MapGetReference_Group(this, this, 24, inst);
			case 25: return new OrExpression_Group(this, this, 25, inst);
			case 26: return new AndExpression_Group(this, this, 26, inst);
			case 27: return new EqualityExpression_Group(this, this, 27, inst);
			case 28: return new RelationalExpression_Group(this, this, 28, inst);
			case 29: return new AdditiveExpression_Group(this, this, 29, inst);
			case 30: return new MultiplicativeExpression_Group(this, this, 30, inst);
			case 31: return new UnaryExpression_Alternatives(this, this, 31, inst);
			case 32: return new PrimaryExpression_Alternatives(this, this, 32, inst);
			case 33: return new FunctionCall_Group(this, this, 33, inst);
			case 34: return new DateLiteral_Group(this, this, 34, inst);
			case 35: return new Literal_Alternatives(this, this, 35, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Tml ****************
 *
 * //xsi:noNamespaceSchemaLocation
 * Tml:
 * 	{Tml} (LT TSLTAG | LT NAVASCRIPTTAG) ((NOTES EQUALS QUOTE AnyUntilQuote QUOTE)? & (REPOSITORY EQUALS QUOTE
 * 	AnyUntilQuote QUOTE)? & (ID EQUALS QUOTE AnyUntilQuote QUOTE)? & (AUTHOR EQUALS QUOTE AnyUntilQuote QUOTE)? & (XMLNS
 * 	EQUALS QUOTE AnyUntilQuote QUOTE)? & (XMLNS COLON ID EQUALS QUOTE AnyUntilQuote QUOTE)? & (ID COLON SCHEMALOCATION
 * 	EQUALS QUOTE AnyUntilQuote QUOTE)? & (ID COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE AnyUntilQuote QUOTE)?) (GT
 * 	(children+=Message | children+=MapMethod | children+=Param | methods+=Methods | children+=DebugTag | children+=Include
 * 	| children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND);
 *
 **/

// {Tml} (LT TSLTAG | LT NAVASCRIPTTAG) ((NOTES EQUALS QUOTE AnyUntilQuote QUOTE)? & (REPOSITORY EQUALS QUOTE AnyUntilQuote
// QUOTE)? & (ID EQUALS QUOTE AnyUntilQuote QUOTE)? & (AUTHOR EQUALS QUOTE AnyUntilQuote QUOTE)? & (XMLNS EQUALS QUOTE
// AnyUntilQuote QUOTE)? & (XMLNS COLON ID EQUALS QUOTE AnyUntilQuote QUOTE)? & (ID COLON SCHEMALOCATION EQUALS QUOTE
// AnyUntilQuote QUOTE)? & (ID COLON NONAMESPACESCHEMALOCATION EQUALS QUOTE AnyUntilQuote QUOTE)?) (GT (children+=Message
// | children+=MapMethod | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
// children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND)
protected class Tml_Group extends GroupToken {
	
	public Tml_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTmlAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTmlAccess().getTmlAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Tml}
protected class Tml_TmlAction_0 extends ActionToken  {

	public Tml_TmlAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTmlAccess().getTmlAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// LT TSLTAG | LT NAVASCRIPTTAG
protected class Tml_Alternatives_1 extends AlternativesToken {

	public Tml_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTmlAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LT TSLTAG
protected class Tml_Group_1_0 extends GroupToken {
	
	public Tml_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTmlAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_TSLTAGTerminalRuleCall_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LT
protected class Tml_LTTerminalRuleCall_1_0_0 extends UnassignedTextToken {

	public Tml_LTTerminalRuleCall_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlAccess().getLTTerminalRuleCall_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_TmlAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TSLTAG
protected class Tml_TSLTAGTerminalRuleCall_1_0_1 extends UnassignedTextToken {

	public Tml_TSLTAGTerminalRuleCall_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlAccess().getTSLTAGTerminalRuleCall_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_LTTerminalRuleCall_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// (NOTES EQUALS QUOTE AnyUntilQuote QUOTE)? & (REPOSITORY EQUALS QUOTE AnyUntilQuote QUOTE)? & (ID EQUALS QUOTE
// AnyUntilQuote QUOTE)? & (AUTHOR EQUALS QUOTE AnyUntilQuote QUOTE)? & (XMLNS EQUALS QUOTE AnyUntilQuote QUOTE)? & (XMLNS
// COLON ID EQUALS QUOTE AnyUntilQuote QUOTE)? & (ID COLON SCHEMALOCATION EQUALS QUOTE AnyUntilQuote QUOTE)? & (ID COLON
// NONAMESPACESCHEMALOCATION EQUALS QUOTE AnyUntilQuote QUOTE)?
protected class Tml_UnorderedGroup_2 extends UnorderedGroupToken {
	
	public Tml_UnorderedGroup_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getTmlAccess().getUnorderedGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// GT (children+=Message | children+=MapMethod | children+=Param | methods+=Methods | children+=DebugTag |
// children+=Include | children+=Validations | children+=CommentClause)* NAVASCRIPT_END | XML_TAG_SINGLEEND
protected class Tml_Alternatives_3 extends AlternativesToken {

	public Tml_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTmlAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Tml_XML_TAG_SINGLEENDTerminalRuleCall_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT (children+=Message | children+=MapMethod | children+=Param | methods+=Methods | children+=DebugTag |
// children+=Include | children+=Validations | children+=CommentClause)* NAVASCRIPT_END
protected class Tml_Group_3_0 extends GroupToken {
	
	public Tml_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTmlAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_NAVASCRIPT_ENDTerminalRuleCall_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Tml_GTTerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Tml_GTTerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlAccess().getGTTerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_UnorderedGroup_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (children+=Message | children+=MapMethod | children+=Param | methods+=Methods | children+=DebugTag | children+=Include |
// children+=Validations | children+=CommentClause)*
protected class Tml_Alternatives_3_0_1 extends AlternativesToken {

	public Tml_Alternatives_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTmlAccess().getAlternatives_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_ChildrenAssignment_3_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Tml_ChildrenAssignment_3_0_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Tml_ChildrenAssignment_3_0_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Tml_MethodsAssignment_3_0_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Tml_ChildrenAssignment_3_0_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Tml_ChildrenAssignment_3_0_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Tml_ChildrenAssignment_3_0_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Tml_ChildrenAssignment_3_0_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// children+=Message
protected class Tml_ChildrenAssignment_3_0_1_0 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenMessageParserRuleCall_3_0_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=MapMethod
protected class Tml_ChildrenAssignment_3_0_1_1 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenMapMethodParserRuleCall_3_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Param
protected class Tml_ChildrenAssignment_3_0_1_2 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParamRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenParamParserRuleCall_3_0_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// methods+=Methods
protected class Tml_MethodsAssignment_3_0_1_3 extends AssignmentToken  {
	
	public Tml_MethodsAssignment_3_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getMethodsAssignment_3_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methods",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methods");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMethodsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getMethodsMethodsParserRuleCall_3_0_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=DebugTag
protected class Tml_ChildrenAssignment_3_0_1_4 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDebugTagRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenDebugTagParserRuleCall_3_0_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Include
protected class Tml_ChildrenAssignment_3_0_1_5 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Include_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getIncludeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenIncludeParserRuleCall_3_0_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Validations
protected class Tml_ChildrenAssignment_3_0_1_6 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getValidationsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenValidationsParserRuleCall_3_0_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=CommentClause
protected class Tml_ChildrenAssignment_3_0_1_7 extends AssignmentToken  {
	
	public Tml_ChildrenAssignment_3_0_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlAccess().getChildrenAssignment_3_0_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCommentClauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTmlAccess().getChildrenCommentClauseParserRuleCall_3_0_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Tml_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// NAVASCRIPT_END
protected class Tml_NAVASCRIPT_ENDTerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Tml_NAVASCRIPT_ENDTerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlAccess().getNAVASCRIPT_ENDTerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_Alternatives_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class Tml_XML_TAG_SINGLEENDTerminalRuleCall_3_1 extends UnassignedTextToken {

	public Tml_XML_TAG_SINGLEENDTerminalRuleCall_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Tml_UnorderedGroup_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Tml ****************/





/************ begin Rule Expression ****************
 *
 * Expression returns PossibleExpression:
 * 	key=ID EQUALS QUOTE expressionValue=TopLevel endToken=QUOTE;
 *
 **/

// key=ID EQUALS QUOTE expressionValue=TopLevel endToken=QUOTE
protected class Expression_Group extends GroupToken {
	
	public Expression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Expression_EndTokenAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// key=ID
protected class Expression_KeyAssignment_0 extends AssignmentToken  {
	
	public Expression_KeyAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExpressionAccess().getKeyAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("key",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("key");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExpressionAccess().getKeyIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExpressionAccess().getKeyIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// EQUALS
protected class Expression_EQUALSTerminalRuleCall_1 extends UnassignedTextToken {

	public Expression_EQUALSTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionAccess().getEQUALSTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Expression_KeyAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Expression_QUOTETerminalRuleCall_2 extends UnassignedTextToken {

	public Expression_QUOTETerminalRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionAccess().getQUOTETerminalRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Expression_EQUALSTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressionValue=TopLevel
protected class Expression_ExpressionValueAssignment_3 extends AssignmentToken  {
	
	public Expression_ExpressionValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExpressionAccess().getExpressionValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressionValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressionValue");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getExpressionAccess().getExpressionValueTopLevelParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Expression_QUOTETerminalRuleCall_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// endToken=QUOTE
protected class Expression_EndTokenAssignment_4 extends AssignmentToken  {
	
	public Expression_EndTokenAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExpressionAccess().getEndTokenAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Expression_ExpressionValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("endToken",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("endToken");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExpressionAccess().getEndTokenQUOTETerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExpressionAccess().getEndTokenQUOTETerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Expression ****************/


/************ begin Rule NonExpression ****************
 *
 * NonExpression returns PossibleExpression:
 * 	(namespace=ID COLON)? key=AttributeName EQUALS (QUOTE (AnyExpression | LTS EXPRESSION_TAG GT)* QUOTE);
 *
 **/

// (namespace=ID COLON)? key=AttributeName EQUALS (QUOTE (AnyExpression | LTS EXPRESSION_TAG GT)* QUOTE)
protected class NonExpression_Group extends GroupToken {
	
	public NonExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNonExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// (namespace=ID COLON)?
protected class NonExpression_Group_0 extends GroupToken {
	
	public NonExpression_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_COLONTerminalRuleCall_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// namespace=ID
protected class NonExpression_NamespaceAssignment_0_0 extends AssignmentToken  {
	
	public NonExpression_NamespaceAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getNamespaceAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("namespace",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("namespace");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNonExpressionAccess().getNamespaceIDTerminalRuleCall_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNonExpressionAccess().getNamespaceIDTerminalRuleCall_0_0_0();
			return obj;
		}
		return null;
	}

}

// COLON
protected class NonExpression_COLONTerminalRuleCall_0_1 extends UnassignedTextToken {

	public NonExpression_COLONTerminalRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getCOLONTerminalRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_NamespaceAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// key=AttributeName
protected class NonExpression_KeyAssignment_1 extends AssignmentToken  {
	
	public NonExpression_KeyAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getKeyAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("key",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("key");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNonExpressionAccess().getKeyAttributeNameParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getNonExpressionAccess().getKeyAttributeNameParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// EQUALS
protected class NonExpression_EQUALSTerminalRuleCall_2 extends UnassignedTextToken {

	public NonExpression_EQUALSTerminalRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getEQUALSTerminalRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_KeyAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE (AnyExpression | LTS EXPRESSION_TAG GT)* QUOTE
protected class NonExpression_Group_3 extends GroupToken {
	
	public NonExpression_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_QUOTETerminalRuleCall_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class NonExpression_QUOTETerminalRuleCall_3_0 extends UnassignedTextToken {

	public NonExpression_QUOTETerminalRuleCall_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getQUOTETerminalRuleCall_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_EQUALSTerminalRuleCall_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class NonExpression_QUOTETerminalRuleCall_3_2 extends UnassignedTextToken {

	public NonExpression_QUOTETerminalRuleCall_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonExpressionAccess().getQUOTETerminalRuleCall_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_QUOTETerminalRuleCall_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule NonExpression ****************/


/************ begin Rule Methods ****************
 *
 * Methods:
 * 	LT METHODSTAG {Methods} (GT method+=Method* LTS METHODSTAG GT | XML_TAG_SINGLEEND);
 *
 **/

// LT METHODSTAG {Methods} (GT method+=Method* LTS METHODSTAG GT | XML_TAG_SINGLEEND)
protected class Methods_Group extends GroupToken {
	
	public Methods_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMethodsAccess().getMethodsAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Methods_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Methods_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// METHODSTAG
protected class Methods_METHODSTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Methods_METHODSTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getMETHODSTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Methods}
protected class Methods_MethodsAction_2 extends ActionToken  {

	public Methods_MethodsAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMethodsAccess().getMethodsAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_METHODSTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// GT method+=Method* LTS METHODSTAG GT | XML_TAG_SINGLEEND
protected class Methods_Alternatives_3 extends AlternativesToken {

	public Methods_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMethodsAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Methods_XML_TAG_SINGLEENDTerminalRuleCall_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT method+=Method* LTS METHODSTAG GT
protected class Methods_Group_3_0 extends GroupToken {
	
	public Methods_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodsAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_GTTerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Methods_GTTerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Methods_GTTerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getGTTerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_MethodsAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// method+=Method*
protected class Methods_MethodAssignment_3_0_1 extends AssignmentToken  {
	
	public Methods_MethodAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodsAccess().getMethodAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("method",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("method");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMethodsAccess().getMethodMethodParserRuleCall_3_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Methods_MethodAssignment_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Methods_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// LTS
protected class Methods_LTSTerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Methods_LTSTerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getLTSTerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_MethodAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// METHODSTAG
protected class Methods_METHODSTAGTerminalRuleCall_3_0_3 extends UnassignedTextToken {

	public Methods_METHODSTAGTerminalRuleCall_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getMETHODSTAGTerminalRuleCall_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_LTSTerminalRuleCall_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Methods_GTTerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Methods_GTTerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getGTTerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_METHODSTAGTerminalRuleCall_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class Methods_XML_TAG_SINGLEENDTerminalRuleCall_3_1 extends UnassignedTextToken {

	public Methods_XML_TAG_SINGLEENDTerminalRuleCall_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodsAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Methods_MethodsAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Methods ****************/


/************ begin Rule Method ****************
 *
 * Method:
 * 	LT METHODTAG {Method} (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? (GT children+=Required* closedTag?=LTS METHODTAG GT
 * 	| XML_TAG_SINGLEEND);
 *
 **/

// LT METHODTAG {Method} (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? (GT children+=Required* closedTag?=LTS METHODTAG GT |
// XML_TAG_SINGLEEND)
protected class Method_Group extends GroupToken {
	
	public Method_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMethodAccess().getMethodAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Method_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Method_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// METHODTAG
protected class Method_METHODTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Method_METHODTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getMETHODTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Method}
protected class Method_MethodAction_2 extends ActionToken  {

	public Method_MethodAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMethodAccess().getMethodAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_METHODTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
protected class Method_Group_3 extends GroupToken {
	
	public Method_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_QUOTETerminalRuleCall_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NAME
protected class Method_NAMETerminalRuleCall_3_0 extends UnassignedTextToken {

	public Method_NAMETerminalRuleCall_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getNAMETerminalRuleCall_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_MethodAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Method_EQUALSTerminalRuleCall_3_1 extends UnassignedTextToken {

	public Method_EQUALSTerminalRuleCall_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getEQUALSTerminalRuleCall_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_NAMETerminalRuleCall_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Method_QUOTETerminalRuleCall_3_2 extends UnassignedTextToken {

	public Method_QUOTETerminalRuleCall_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getQUOTETerminalRuleCall_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_EQUALSTerminalRuleCall_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nameAttribute=ID
protected class Method_NameAttributeAssignment_3_3 extends AssignmentToken  {
	
	public Method_NameAttributeAssignment_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getNameAttributeAssignment_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_QUOTETerminalRuleCall_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nameAttribute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nameAttribute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getNameAttributeIDTerminalRuleCall_3_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMethodAccess().getNameAttributeIDTerminalRuleCall_3_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Method_QUOTETerminalRuleCall_3_4 extends UnassignedTextToken {

	public Method_QUOTETerminalRuleCall_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getQUOTETerminalRuleCall_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_NameAttributeAssignment_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// GT children+=Required* closedTag?=LTS METHODTAG GT | XML_TAG_SINGLEEND
protected class Method_Alternatives_4 extends AlternativesToken {

	public Method_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMethodAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_XML_TAG_SINGLEENDTerminalRuleCall_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT children+=Required* closedTag?=LTS METHODTAG GT
protected class Method_Group_4_0 extends GroupToken {
	
	public Method_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_GTTerminalRuleCall_4_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Method_GTTerminalRuleCall_4_0_0 extends UnassignedTextToken {

	public Method_GTTerminalRuleCall_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getGTTerminalRuleCall_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_MethodAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// children+=Required*
protected class Method_ChildrenAssignment_4_0_1 extends AssignmentToken  {
	
	public Method_ChildrenAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getChildrenAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRequiredRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMethodAccess().getChildrenRequiredParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Method_ChildrenAssignment_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Method_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// closedTag?=LTS
protected class Method_ClosedTagAssignment_4_0_2 extends AssignmentToken  {
	
	public Method_ClosedTagAssignment_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getClosedTagAssignment_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_ChildrenAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("closedTag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("closedTag");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getClosedTagLTSTerminalRuleCall_4_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMethodAccess().getClosedTagLTSTerminalRuleCall_4_0_2_0();
			return obj;
		}
		return null;
	}

}

// METHODTAG
protected class Method_METHODTAGTerminalRuleCall_4_0_3 extends UnassignedTextToken {

	public Method_METHODTAGTerminalRuleCall_4_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getMETHODTAGTerminalRuleCall_4_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_ClosedTagAssignment_4_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Method_GTTerminalRuleCall_4_0_4 extends UnassignedTextToken {

	public Method_GTTerminalRuleCall_4_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getGTTerminalRuleCall_4_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_METHODTAGTerminalRuleCall_4_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class Method_XML_TAG_SINGLEENDTerminalRuleCall_4_1 extends UnassignedTextToken {

	public Method_XML_TAG_SINGLEENDTerminalRuleCall_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMethodAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Method_MethodAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule Method ****************/


/************ begin Rule Validations ****************
 *
 * Validations:
 * 	LT VALIDATIONSTAG {Validations} (GT children+=Check* closedTag?=LTS VALIDATIONSTAG GT | XML_TAG_SINGLEEND);
 *
 **/

// LT VALIDATIONSTAG {Validations} (GT children+=Check* closedTag?=LTS VALIDATIONSTAG GT | XML_TAG_SINGLEEND)
protected class Validations_Group extends GroupToken {
	
	public Validations_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getValidationsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_Alternatives_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getValidationsAccess().getValidationsAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Validations_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Validations_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValidationsAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// VALIDATIONSTAG
protected class Validations_VALIDATIONSTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Validations_VALIDATIONSTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValidationsAccess().getVALIDATIONSTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Validations}
protected class Validations_ValidationsAction_2 extends ActionToken  {

	public Validations_ValidationsAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getValidationsAccess().getValidationsAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_VALIDATIONSTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// GT children+=Check* closedTag?=LTS VALIDATIONSTAG GT | XML_TAG_SINGLEEND
protected class Validations_Alternatives_3 extends AlternativesToken {

	public Validations_Alternatives_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getValidationsAccess().getAlternatives_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Validations_XML_TAG_SINGLEENDTerminalRuleCall_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT children+=Check* closedTag?=LTS VALIDATIONSTAG GT
protected class Validations_Group_3_0 extends GroupToken {
	
	public Validations_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getValidationsAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_GTTerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Validations_GTTerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Validations_GTTerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValidationsAccess().getGTTerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_ValidationsAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// children+=Check*
protected class Validations_ChildrenAssignment_3_0_1 extends AssignmentToken  {
	
	public Validations_ChildrenAssignment_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getValidationsAccess().getChildrenAssignment_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCheckRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getValidationsAccess().getChildrenCheckParserRuleCall_3_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Validations_ChildrenAssignment_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Validations_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// closedTag?=LTS
protected class Validations_ClosedTagAssignment_3_0_2 extends AssignmentToken  {
	
	public Validations_ClosedTagAssignment_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getValidationsAccess().getClosedTagAssignment_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_ChildrenAssignment_3_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Validations_GTTerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("closedTag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("closedTag");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getValidationsAccess().getClosedTagLTSTerminalRuleCall_3_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getValidationsAccess().getClosedTagLTSTerminalRuleCall_3_0_2_0();
			return obj;
		}
		return null;
	}

}

// VALIDATIONSTAG
protected class Validations_VALIDATIONSTAGTerminalRuleCall_3_0_3 extends UnassignedTextToken {

	public Validations_VALIDATIONSTAGTerminalRuleCall_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValidationsAccess().getVALIDATIONSTAGTerminalRuleCall_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_ClosedTagAssignment_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Validations_GTTerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Validations_GTTerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValidationsAccess().getGTTerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_VALIDATIONSTAGTerminalRuleCall_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class Validations_XML_TAG_SINGLEENDTerminalRuleCall_3_1 extends UnassignedTextToken {

	public Validations_XML_TAG_SINGLEENDTerminalRuleCall_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValidationsAccess().getXML_TAG_SINGLEENDTerminalRuleCall_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Validations_ValidationsAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Validations ****************/


/************ begin Rule Check ****************
 *
 * Check:
 * 	LT CHECKTAG {Check} ((CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (DESCRIPTION EQUALS QUOTE
 * 	expressions+=TopLevel QUOTE)? & (CODE EQUALS QUOTE expressions+=TopLevel QUOTE)?) (GT expression=TopLevel
 * 	closedTag?=LTS CHECKTAG GT | XML_TAG_SINGLEEND);
 *
 **/

// LT CHECKTAG {Check} ((CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (DESCRIPTION EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (CODE EQUALS QUOTE expressions+=TopLevel QUOTE)?) (GT expression=TopLevel
// closedTag?=LTS CHECKTAG GT | XML_TAG_SINGLEEND)
protected class Check_Group extends GroupToken {
	
	public Check_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCheckAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCheckAccess().getCheckAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Check_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Check_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// CHECKTAG
protected class Check_CHECKTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Check_CHECKTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getCHECKTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Check}
protected class Check_CheckAction_2 extends ActionToken  {

	public Check_CheckAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCheckAccess().getCheckAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_CHECKTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (DESCRIPTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CODE
// EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class Check_UnorderedGroup_3 extends UnorderedGroupToken {
	
	public Check_UnorderedGroup_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getCheckAccess().getUnorderedGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Check_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Check_Group_3_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Check_CheckAction_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class Check_Group_3_0 extends GroupToken {
	
	public Check_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCheckAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_QUOTETerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class Check_CONDITIONTerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Check_CONDITIONTerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getCONDITIONTerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_CheckAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Check_EQUALSTerminalRuleCall_3_0_1 extends UnassignedTextToken {

	public Check_EQUALSTerminalRuleCall_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getEQUALSTerminalRuleCall_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_CONDITIONTerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Check_QUOTETerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Check_QUOTETerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getQUOTETerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_EQUALSTerminalRuleCall_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class Check_ConditionAssignment_3_0_3 extends AssignmentToken  {
	
	public Check_ConditionAssignment_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCheckAccess().getConditionAssignment_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCheckAccess().getConditionTopLevelParserRuleCall_3_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Check_QUOTETerminalRuleCall_3_0_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Check_QUOTETerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Check_QUOTETerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getQUOTETerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_ConditionAssignment_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (DESCRIPTION EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class Check_Group_3_1 extends GroupToken {
	
	public Check_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCheckAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_QUOTETerminalRuleCall_3_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// DESCRIPTION
protected class Check_DESCRIPTIONTerminalRuleCall_3_1_0 extends UnassignedTextToken {

	public Check_DESCRIPTIONTerminalRuleCall_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getDESCRIPTIONTerminalRuleCall_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Check_CheckAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Check_EQUALSTerminalRuleCall_3_1_1 extends UnassignedTextToken {

	public Check_EQUALSTerminalRuleCall_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getEQUALSTerminalRuleCall_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_DESCRIPTIONTerminalRuleCall_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Check_QUOTETerminalRuleCall_3_1_2 extends UnassignedTextToken {

	public Check_QUOTETerminalRuleCall_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getQUOTETerminalRuleCall_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_EQUALSTerminalRuleCall_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class Check_ExpressionsAssignment_3_1_3 extends AssignmentToken  {
	
	public Check_ExpressionsAssignment_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCheckAccess().getExpressionsAssignment_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCheckAccess().getExpressionsTopLevelParserRuleCall_3_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Check_QUOTETerminalRuleCall_3_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Check_QUOTETerminalRuleCall_3_1_4 extends UnassignedTextToken {

	public Check_QUOTETerminalRuleCall_3_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getQUOTETerminalRuleCall_3_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_ExpressionsAssignment_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CODE EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class Check_Group_3_2 extends GroupToken {
	
	public Check_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCheckAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_QUOTETerminalRuleCall_3_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CODE
protected class Check_CODETerminalRuleCall_3_2_0 extends UnassignedTextToken {

	public Check_CODETerminalRuleCall_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getCODETerminalRuleCall_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Check_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Check_CheckAction_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Check_EQUALSTerminalRuleCall_3_2_1 extends UnassignedTextToken {

	public Check_EQUALSTerminalRuleCall_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getEQUALSTerminalRuleCall_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_CODETerminalRuleCall_3_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Check_QUOTETerminalRuleCall_3_2_2 extends UnassignedTextToken {

	public Check_QUOTETerminalRuleCall_3_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getQUOTETerminalRuleCall_3_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_EQUALSTerminalRuleCall_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class Check_ExpressionsAssignment_3_2_3 extends AssignmentToken  {
	
	public Check_ExpressionsAssignment_3_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCheckAccess().getExpressionsAssignment_3_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCheckAccess().getExpressionsTopLevelParserRuleCall_3_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Check_QUOTETerminalRuleCall_3_2_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Check_QUOTETerminalRuleCall_3_2_4 extends UnassignedTextToken {

	public Check_QUOTETerminalRuleCall_3_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getQUOTETerminalRuleCall_3_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_ExpressionsAssignment_3_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// GT expression=TopLevel closedTag?=LTS CHECKTAG GT | XML_TAG_SINGLEEND
protected class Check_Alternatives_4 extends AlternativesToken {

	public Check_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getCheckAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Check_XML_TAG_SINGLEENDTerminalRuleCall_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT expression=TopLevel closedTag?=LTS CHECKTAG GT
protected class Check_Group_4_0 extends GroupToken {
	
	public Check_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCheckAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_GTTerminalRuleCall_4_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Check_GTTerminalRuleCall_4_0_0 extends UnassignedTextToken {

	public Check_GTTerminalRuleCall_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getGTTerminalRuleCall_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expression=TopLevel
protected class Check_ExpressionAssignment_4_0_1 extends AssignmentToken  {
	
	public Check_ExpressionAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCheckAccess().getExpressionAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expression",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expression");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCheckAccess().getExpressionTopLevelParserRuleCall_4_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Check_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// closedTag?=LTS
protected class Check_ClosedTagAssignment_4_0_2 extends AssignmentToken  {
	
	public Check_ClosedTagAssignment_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCheckAccess().getClosedTagAssignment_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_ExpressionAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("closedTag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("closedTag");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCheckAccess().getClosedTagLTSTerminalRuleCall_4_0_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCheckAccess().getClosedTagLTSTerminalRuleCall_4_0_2_0();
			return obj;
		}
		return null;
	}

}

// CHECKTAG
protected class Check_CHECKTAGTerminalRuleCall_4_0_3 extends UnassignedTextToken {

	public Check_CHECKTAGTerminalRuleCall_4_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getCHECKTAGTerminalRuleCall_4_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_ClosedTagAssignment_4_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Check_GTTerminalRuleCall_4_0_4 extends UnassignedTextToken {

	public Check_GTTerminalRuleCall_4_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getGTTerminalRuleCall_4_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_CHECKTAGTerminalRuleCall_4_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class Check_XML_TAG_SINGLEENDTerminalRuleCall_4_1 extends UnassignedTextToken {

	public Check_XML_TAG_SINGLEENDTerminalRuleCall_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCheckAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Check_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Check ****************/


/************ begin Rule CommentClause ****************
 *
 * CommentClause returns Comment:
 * 	LT COMMENT {Comment} attributes+=Expression* (GT closedTag?=LTS COMMENT GT | XML_TAG_SINGLEEND);
 *
 **/

// LT COMMENT {Comment} attributes+=Expression* (GT closedTag?=LTS COMMENT GT | XML_TAG_SINGLEEND)
protected class CommentClause_Group extends GroupToken {
	
	public CommentClause_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCommentClauseAccess().getCommentAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class CommentClause_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public CommentClause_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// COMMENT
protected class CommentClause_COMMENTTerminalRuleCall_1 extends UnassignedTextToken {

	public CommentClause_COMMENTTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getCOMMENTTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Comment}
protected class CommentClause_CommentAction_2 extends ActionToken  {

	public CommentClause_CommentAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getCommentAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_COMMENTTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// attributes+=Expression*
protected class CommentClause_AttributesAssignment_3 extends AssignmentToken  {
	
	public CommentClause_AttributesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getAttributesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Expression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCommentClauseAccess().getAttributesExpressionParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CommentClause_AttributesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new CommentClause_CommentAction_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// GT closedTag?=LTS COMMENT GT | XML_TAG_SINGLEEND
protected class CommentClause_Alternatives_4 extends AlternativesToken {

	public CommentClause_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CommentClause_XML_TAG_SINGLEENDTerminalRuleCall_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT closedTag?=LTS COMMENT GT
protected class CommentClause_Group_4_0 extends GroupToken {
	
	public CommentClause_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_GTTerminalRuleCall_4_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class CommentClause_GTTerminalRuleCall_4_0_0 extends UnassignedTextToken {

	public CommentClause_GTTerminalRuleCall_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getGTTerminalRuleCall_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_AttributesAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CommentClause_CommentAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// closedTag?=LTS
protected class CommentClause_ClosedTagAssignment_4_0_1 extends AssignmentToken  {
	
	public CommentClause_ClosedTagAssignment_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getClosedTagAssignment_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("closedTag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("closedTag");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCommentClauseAccess().getClosedTagLTSTerminalRuleCall_4_0_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getCommentClauseAccess().getClosedTagLTSTerminalRuleCall_4_0_1_0();
			return obj;
		}
		return null;
	}

}

// COMMENT
protected class CommentClause_COMMENTTerminalRuleCall_4_0_2 extends UnassignedTextToken {

	public CommentClause_COMMENTTerminalRuleCall_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getCOMMENTTerminalRuleCall_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_ClosedTagAssignment_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class CommentClause_GTTerminalRuleCall_4_0_3 extends UnassignedTextToken {

	public CommentClause_GTTerminalRuleCall_4_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getGTTerminalRuleCall_4_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_COMMENTTerminalRuleCall_4_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class CommentClause_XML_TAG_SINGLEENDTerminalRuleCall_4_1 extends UnassignedTextToken {

	public CommentClause_XML_TAG_SINGLEENDTerminalRuleCall_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getCommentClauseAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_AttributesAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CommentClause_CommentAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule CommentClause ****************/


/************ begin Rule Break ****************
 *
 * Break:
 * 	LT BREAKTAG {Break} attributes+=Expression* (GT //		expression=TopLevel
 * 	LTS BREAKTAG GT | XML_TAG_SINGLEEND);
 *
 **/

// LT BREAKTAG {Break} attributes+=Expression* (GT //		expression=TopLevel
// LTS BREAKTAG GT | XML_TAG_SINGLEEND)
protected class Break_Group extends GroupToken {
	
	public Break_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBreakAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBreakAccess().getBreakAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Break_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Break_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getBreakAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// BREAKTAG
protected class Break_BREAKTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Break_BREAKTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getBreakAccess().getBREAKTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Break}
protected class Break_BreakAction_2 extends ActionToken  {

	public Break_BreakAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getBreakAccess().getBreakAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_BREAKTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// attributes+=Expression*
protected class Break_AttributesAssignment_3 extends AssignmentToken  {
	
	public Break_AttributesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBreakAccess().getAttributesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Expression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBreakAccess().getAttributesExpressionParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Break_AttributesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Break_BreakAction_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// GT //		expression=TopLevel
// LTS BREAKTAG GT | XML_TAG_SINGLEEND
protected class Break_Alternatives_4 extends AlternativesToken {

	public Break_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBreakAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_XML_TAG_SINGLEENDTerminalRuleCall_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Break_XML_TAG_SINGLEENDTerminalRuleCall_4_1 extends UnassignedTextToken {

	public Break_XML_TAG_SINGLEENDTerminalRuleCall_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getBreakAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_AttributesAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Break_BreakAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule Break ****************/



/************ begin Rule Include ****************
 *
 * // create Include entity in Model
 * Include returns Method:
 * 	LT INCLUDETAG {Method} (SCRIPT EQUALS QUOTE AnyUntilQuote QUOTE)? (LTS INCLUDETAG | XML_TAG_SINGLEEND);
 *
 **/

// LT INCLUDETAG {Method} (SCRIPT EQUALS QUOTE AnyUntilQuote QUOTE)? (LTS INCLUDETAG | XML_TAG_SINGLEEND)
protected class Include_Group extends GroupToken {
	
	public Include_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getIncludeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Include_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getIncludeAccess().getMethodAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Include_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Include_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIncludeAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// INCLUDETAG
protected class Include_INCLUDETAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Include_INCLUDETAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIncludeAccess().getINCLUDETAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Include_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Method}
protected class Include_MethodAction_2 extends ActionToken  {

	public Include_MethodAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getIncludeAccess().getMethodAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Include_INCLUDETAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// LTS INCLUDETAG | XML_TAG_SINGLEEND
protected class Include_Alternatives_4 extends AlternativesToken {

	public Include_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getIncludeAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Include_XML_TAG_SINGLEENDTerminalRuleCall_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Include_XML_TAG_SINGLEENDTerminalRuleCall_4_1 extends UnassignedTextToken {

	public Include_XML_TAG_SINGLEENDTerminalRuleCall_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getIncludeAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Include_MethodAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Include ****************/


/************ begin Rule Message ****************
 *
 * Message:
 * 	LT MESSAGETAG {Message} ((COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS
 * 	QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel
 * 	QUOTE)?) (GT (children+=Message | children+=Property | children+=Param | children+=MapMethod | children+=DebugTag |
 * 	children+=Field | children+=CommentClause | children+=Break)* LTS MESSAGETAG GT | XML_TAG_SINGLEEND);
 *
 **/

// LT MESSAGETAG {Message} ((COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS
// QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel
// QUOTE)?) (GT (children+=Message | children+=Property | children+=Param | children+=MapMethod | children+=DebugTag |
// children+=Field | children+=CommentClause | children+=Break)* LTS MESSAGETAG GT | XML_TAG_SINGLEEND)
protected class Message_Group extends GroupToken {
	
	public Message_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMessageAccess().getMessageAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Message_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Message_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// MESSAGETAG
protected class Message_MESSAGETAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Message_MESSAGETAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getMESSAGETAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Message}
protected class Message_MessageAction_2 extends ActionToken  {

	public Message_MessageAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMessageAccess().getMessageAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_MESSAGETAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (COUNT EQUALS QUOTE count=NUMBER QUOTE)? & (MODE EQUALS QUOTE mode=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID
// QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class Message_UnorderedGroup_3 extends UnorderedGroupToken {
	
	public Message_UnorderedGroup_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getMessageAccess().getUnorderedGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group_3_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_Group_3_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Message_Group_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Message_Group_3_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Message_Group_3_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Message_MessageAction_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// (COUNT EQUALS QUOTE count=NUMBER QUOTE)?
protected class Message_Group_3_0 extends GroupToken {
	
	public Message_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COUNT
protected class Message_COUNTTerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Message_COUNTTerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getCOUNTTerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_MessageAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Message_EQUALSTerminalRuleCall_3_0_1 extends UnassignedTextToken {

	public Message_EQUALSTerminalRuleCall_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getEQUALSTerminalRuleCall_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_COUNTTerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_EQUALSTerminalRuleCall_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// count=NUMBER
protected class Message_CountAssignment_3_0_3 extends AssignmentToken  {
	
	public Message_CountAssignment_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getCountAssignment_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("count",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("count");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMessageAccess().getCountNUMBERTerminalRuleCall_3_0_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMessageAccess().getCountNUMBERTerminalRuleCall_3_0_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_CountAssignment_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (MODE EQUALS QUOTE mode=ID QUOTE)?
protected class Message_Group_3_1 extends GroupToken {
	
	public Message_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MODE
protected class Message_MODETerminalRuleCall_3_1_0 extends UnassignedTextToken {

	public Message_MODETerminalRuleCall_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getMODETerminalRuleCall_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_MessageAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Message_EQUALSTerminalRuleCall_3_1_1 extends UnassignedTextToken {

	public Message_EQUALSTerminalRuleCall_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getEQUALSTerminalRuleCall_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_MODETerminalRuleCall_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_1_2 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_EQUALSTerminalRuleCall_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// mode=ID
protected class Message_ModeAssignment_3_1_3 extends AssignmentToken  {
	
	public Message_ModeAssignment_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getModeAssignment_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mode",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mode");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMessageAccess().getModeIDTerminalRuleCall_3_1_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMessageAccess().getModeIDTerminalRuleCall_3_1_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_1_4 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_ModeAssignment_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
protected class Message_Group_3_2 extends GroupToken {
	
	public Message_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NAME
protected class Message_NAMETerminalRuleCall_3_2_0 extends UnassignedTextToken {

	public Message_NAMETerminalRuleCall_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getNAMETerminalRuleCall_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Message_MessageAction_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Message_EQUALSTerminalRuleCall_3_2_1 extends UnassignedTextToken {

	public Message_EQUALSTerminalRuleCall_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getEQUALSTerminalRuleCall_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_NAMETerminalRuleCall_3_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_2_2 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_EQUALSTerminalRuleCall_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nameAttribute=ID
protected class Message_NameAttributeAssignment_3_2_3 extends AssignmentToken  {
	
	public Message_NameAttributeAssignment_3_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getNameAttributeAssignment_3_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nameAttribute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nameAttribute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMessageAccess().getNameAttributeIDTerminalRuleCall_3_2_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMessageAccess().getNameAttributeIDTerminalRuleCall_3_2_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_2_4 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_NameAttributeAssignment_3_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (TYPE EQUALS QUOTE type=ID QUOTE)?
protected class Message_Group_3_3 extends GroupToken {
	
	public Message_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TYPE
protected class Message_TYPETerminalRuleCall_3_3_0 extends UnassignedTextToken {

	public Message_TYPETerminalRuleCall_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getTYPETerminalRuleCall_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Message_Group_3_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Message_MessageAction_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Message_EQUALSTerminalRuleCall_3_3_1 extends UnassignedTextToken {

	public Message_EQUALSTerminalRuleCall_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getEQUALSTerminalRuleCall_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_TYPETerminalRuleCall_3_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_3_2 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_EQUALSTerminalRuleCall_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=ID
protected class Message_TypeAssignment_3_3_3 extends AssignmentToken  {
	
	public Message_TypeAssignment_3_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getTypeAssignment_3_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMessageAccess().getTypeIDTerminalRuleCall_3_3_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMessageAccess().getTypeIDTerminalRuleCall_3_3_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_3_4 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_TypeAssignment_3_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class Message_Group_3_4 extends GroupToken {
	
	public Message_Group_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class Message_CONDITIONTerminalRuleCall_3_4_0 extends UnassignedTextToken {

	public Message_CONDITIONTerminalRuleCall_3_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getCONDITIONTerminalRuleCall_3_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_Group_3_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Message_Group_3_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Message_Group_3_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Message_MessageAction_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Message_EQUALSTerminalRuleCall_3_4_1 extends UnassignedTextToken {

	public Message_EQUALSTerminalRuleCall_3_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getEQUALSTerminalRuleCall_3_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_CONDITIONTerminalRuleCall_3_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_4_2 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_EQUALSTerminalRuleCall_3_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class Message_ConditionAssignment_3_4_3 extends AssignmentToken  {
	
	public Message_ConditionAssignment_3_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getConditionAssignment_3_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getConditionTopLevelParserRuleCall_3_4_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_QUOTETerminalRuleCall_3_4_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Message_QUOTETerminalRuleCall_3_4_4 extends UnassignedTextToken {

	public Message_QUOTETerminalRuleCall_3_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getQUOTETerminalRuleCall_3_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_ConditionAssignment_3_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// GT (children+=Message | children+=Property | children+=Param | children+=MapMethod | children+=DebugTag |
// children+=Field | children+=CommentClause | children+=Break)* LTS MESSAGETAG GT | XML_TAG_SINGLEEND
protected class Message_Alternatives_4 extends AlternativesToken {

	public Message_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMessageAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_XML_TAG_SINGLEENDTerminalRuleCall_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// GT (children+=Message | children+=Property | children+=Param | children+=MapMethod | children+=DebugTag |
// children+=Field | children+=CommentClause | children+=Break)* LTS MESSAGETAG GT
protected class Message_Group_4_0 extends GroupToken {
	
	public Message_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_GTTerminalRuleCall_4_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Message_GTTerminalRuleCall_4_0_0 extends UnassignedTextToken {

	public Message_GTTerminalRuleCall_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getGTTerminalRuleCall_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (children+=Message | children+=Property | children+=Param | children+=MapMethod | children+=DebugTag | children+=Field |
// children+=CommentClause | children+=Break)*
protected class Message_Alternatives_4_0_1 extends AlternativesToken {

	public Message_Alternatives_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMessageAccess().getAlternatives_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_ChildrenAssignment_4_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Message_ChildrenAssignment_4_0_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Message_ChildrenAssignment_4_0_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Message_ChildrenAssignment_4_0_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Message_ChildrenAssignment_4_0_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Message_ChildrenAssignment_4_0_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Message_ChildrenAssignment_4_0_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Message_ChildrenAssignment_4_0_1_7(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// children+=Message
protected class Message_ChildrenAssignment_4_0_1_0 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenMessageParserRuleCall_4_0_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Property
protected class Message_ChildrenAssignment_4_0_1_1 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenPropertyParserRuleCall_4_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Param
protected class Message_ChildrenAssignment_4_0_1_2 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParamRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenParamParserRuleCall_4_0_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=MapMethod
protected class Message_ChildrenAssignment_4_0_1_3 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenMapMethodParserRuleCall_4_0_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=DebugTag
protected class Message_ChildrenAssignment_4_0_1_4 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDebugTagRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenDebugTagParserRuleCall_4_0_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Field
protected class Message_ChildrenAssignment_4_0_1_5 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFieldRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenFieldParserRuleCall_4_0_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=CommentClause
protected class Message_ChildrenAssignment_4_0_1_6 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCommentClauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenCommentClauseParserRuleCall_4_0_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Break
protected class Message_ChildrenAssignment_4_0_1_7 extends AssignmentToken  {
	
	public Message_ChildrenAssignment_4_0_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getChildrenAssignment_4_0_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBreakRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMessageAccess().getChildrenBreakParserRuleCall_4_0_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Message_GTTerminalRuleCall_4_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// LTS
protected class Message_LTSTerminalRuleCall_4_0_2 extends UnassignedTextToken {

	public Message_LTSTerminalRuleCall_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getLTSTerminalRuleCall_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Alternatives_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MESSAGETAG
protected class Message_MESSAGETAGTerminalRuleCall_4_0_3 extends UnassignedTextToken {

	public Message_MESSAGETAGTerminalRuleCall_4_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getMESSAGETAGTerminalRuleCall_4_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_LTSTerminalRuleCall_4_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Message_GTTerminalRuleCall_4_0_4 extends UnassignedTextToken {

	public Message_GTTerminalRuleCall_4_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getGTTerminalRuleCall_4_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_MESSAGETAGTerminalRuleCall_4_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND
protected class Message_XML_TAG_SINGLEENDTerminalRuleCall_4_1 extends UnassignedTextToken {

	public Message_XML_TAG_SINGLEENDTerminalRuleCall_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule Message ****************/



/************ begin Rule Required ****************
 *
 * Required:
 * 	LT REQUIREDTAG {Required} (MESSAGETAG EQUALS QUOTE nameAttribute=ID QUOTE)? (XML_TAG_SINGLEEND | GT LTS REQUIREDTAG
 * 	GT);
 *
 **/

// LT REQUIREDTAG {Required} (MESSAGETAG EQUALS QUOTE nameAttribute=ID QUOTE)? (XML_TAG_SINGLEEND | GT LTS REQUIREDTAG GT)
protected class Required_Group extends GroupToken {
	
	public Required_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRequiredAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRequiredAccess().getRequiredAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Required_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Required_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// REQUIREDTAG
protected class Required_REQUIREDTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Required_REQUIREDTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getREQUIREDTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Required}
protected class Required_RequiredAction_2 extends ActionToken  {

	public Required_RequiredAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getRequiredAccess().getRequiredAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_REQUIREDTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (MESSAGETAG EQUALS QUOTE nameAttribute=ID QUOTE)?
protected class Required_Group_3 extends GroupToken {
	
	public Required_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRequiredAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_QUOTETerminalRuleCall_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MESSAGETAG
protected class Required_MESSAGETAGTerminalRuleCall_3_0 extends UnassignedTextToken {

	public Required_MESSAGETAGTerminalRuleCall_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getMESSAGETAGTerminalRuleCall_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_RequiredAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Required_EQUALSTerminalRuleCall_3_1 extends UnassignedTextToken {

	public Required_EQUALSTerminalRuleCall_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getEQUALSTerminalRuleCall_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_MESSAGETAGTerminalRuleCall_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Required_QUOTETerminalRuleCall_3_2 extends UnassignedTextToken {

	public Required_QUOTETerminalRuleCall_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getQUOTETerminalRuleCall_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_EQUALSTerminalRuleCall_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nameAttribute=ID
protected class Required_NameAttributeAssignment_3_3 extends AssignmentToken  {
	
	public Required_NameAttributeAssignment_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRequiredAccess().getNameAttributeAssignment_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_QUOTETerminalRuleCall_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nameAttribute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nameAttribute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRequiredAccess().getNameAttributeIDTerminalRuleCall_3_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRequiredAccess().getNameAttributeIDTerminalRuleCall_3_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Required_QUOTETerminalRuleCall_3_4 extends UnassignedTextToken {

	public Required_QUOTETerminalRuleCall_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getQUOTETerminalRuleCall_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_NameAttributeAssignment_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// XML_TAG_SINGLEEND | GT LTS REQUIREDTAG GT
protected class Required_Alternatives_4 extends AlternativesToken {

	public Required_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getRequiredAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_XML_TAG_SINGLEENDTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Required_XML_TAG_SINGLEENDTerminalRuleCall_4_0 extends UnassignedTextToken {

	public Required_XML_TAG_SINGLEENDTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRequiredAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Required_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Required_RequiredAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule Required ****************/


/************ begin Rule Property ****************
 *
 * Property:
 * 	LT PROPERTYTAG {Property} ((DESCRIPTION EQUALS QUOTE description=AnyUntilQuote QUOTE)? & (LENGTH EQUALS QUOTE
 * 	length=NUMBER QUOTE)? & (CARDINALITY EQUALS QUOTE cardinality=(ID | PLUS) QUOTE)? & (DIRECTION EQUALS QUOTE
 * 	direction=ID QUOTE)? & (SUBTYPES EQUALS QUOTE subtypes=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? &
 * 	(TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (VALUE EQUALS QUOTE
 * 	rawValue=AnyUntilQuote QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=MapMethod)* LTS
 * 	PROPERTYTAG GT);
 *
 **/

// LT PROPERTYTAG {Property} ((DESCRIPTION EQUALS QUOTE description=AnyUntilQuote QUOTE)? & (LENGTH EQUALS QUOTE
// length=NUMBER QUOTE)? & (CARDINALITY EQUALS QUOTE cardinality=(ID | PLUS) QUOTE)? & (DIRECTION EQUALS QUOTE
// direction=ID QUOTE)? & (SUBTYPES EQUALS QUOTE subtypes=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE
// EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (VALUE EQUALS QUOTE
// rawValue=AnyUntilQuote QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=MapMethod)* LTS
// PROPERTYTAG GT)
protected class Property_Group extends GroupToken {
	
	public Property_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPropertyAccess().getPropertyAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Property_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Property_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// PROPERTYTAG
protected class Property_PROPERTYTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Property_PROPERTYTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getPROPERTYTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Property}
protected class Property_PropertyAction_2 extends ActionToken  {

	public Property_PropertyAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPropertyAccess().getPropertyAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_PROPERTYTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (DESCRIPTION EQUALS QUOTE description=AnyUntilQuote QUOTE)? & (LENGTH EQUALS QUOTE length=NUMBER QUOTE)? & (CARDINALITY
// EQUALS QUOTE cardinality=(ID | PLUS) QUOTE)? & (DIRECTION EQUALS QUOTE direction=ID QUOTE)? & (SUBTYPES EQUALS QUOTE
// subtypes=ID QUOTE)? & (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION
// EQUALS QUOTE condition=TopLevel QUOTE)? & (VALUE EQUALS QUOTE rawValue=AnyUntilQuote QUOTE)?
protected class Property_UnorderedGroup_3 extends UnorderedGroupToken {
	
	public Property_UnorderedGroup_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getPropertyAccess().getUnorderedGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_Group_3_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Property_Group_3_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Property_Group_3_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Property_Group_3_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Property_Group_3_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Property_Group_3_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// (DESCRIPTION EQUALS QUOTE description=AnyUntilQuote QUOTE)?
protected class Property_Group_3_0 extends GroupToken {
	
	public Property_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// DESCRIPTION
protected class Property_DESCRIPTIONTerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Property_DESCRIPTIONTerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getDESCRIPTIONTerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_0_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_DESCRIPTIONTerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// description=AnyUntilQuote
protected class Property_DescriptionAssignment_3_0_3 extends AssignmentToken  {
	
	public Property_DescriptionAssignment_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getDescriptionAssignment_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("description",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("description");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getDescriptionAnyUntilQuoteParserRuleCall_3_0_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getDescriptionAnyUntilQuoteParserRuleCall_3_0_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_DescriptionAssignment_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (LENGTH EQUALS QUOTE length=NUMBER QUOTE)?
protected class Property_Group_3_1 extends GroupToken {
	
	public Property_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LENGTH
protected class Property_LENGTHTerminalRuleCall_3_1_0 extends UnassignedTextToken {

	public Property_LENGTHTerminalRuleCall_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getLENGTHTerminalRuleCall_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_1_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_LENGTHTerminalRuleCall_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_1_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// length=NUMBER
protected class Property_LengthAssignment_3_1_3 extends AssignmentToken  {
	
	public Property_LengthAssignment_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getLengthAssignment_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("length",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("length");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getLengthNUMBERTerminalRuleCall_3_1_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getLengthNUMBERTerminalRuleCall_3_1_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_1_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_LengthAssignment_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CARDINALITY EQUALS QUOTE cardinality=(ID | PLUS) QUOTE)?
protected class Property_Group_3_2 extends GroupToken {
	
	public Property_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CARDINALITY
protected class Property_CARDINALITYTerminalRuleCall_3_2_0 extends UnassignedTextToken {

	public Property_CARDINALITYTerminalRuleCall_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getCARDINALITYTerminalRuleCall_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_2_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_CARDINALITYTerminalRuleCall_3_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_2_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// cardinality=(ID | PLUS)
protected class Property_CardinalityAssignment_3_2_3 extends AssignmentToken  {
	
	public Property_CardinalityAssignment_3_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getCardinalityAssignment_3_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cardinality",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cardinality");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getCardinalityIDTerminalRuleCall_3_2_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getCardinalityIDTerminalRuleCall_3_2_3_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getCardinalityPLUSTerminalRuleCall_3_2_3_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getCardinalityPLUSTerminalRuleCall_3_2_3_0_1();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_2_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_CardinalityAssignment_3_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (DIRECTION EQUALS QUOTE direction=ID QUOTE)?
protected class Property_Group_3_3 extends GroupToken {
	
	public Property_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// DIRECTION
protected class Property_DIRECTIONTerminalRuleCall_3_3_0 extends UnassignedTextToken {

	public Property_DIRECTIONTerminalRuleCall_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getDIRECTIONTerminalRuleCall_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_3_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_DIRECTIONTerminalRuleCall_3_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_3_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// direction=ID
protected class Property_DirectionAssignment_3_3_3 extends AssignmentToken  {
	
	public Property_DirectionAssignment_3_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getDirectionAssignment_3_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_3_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("direction",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("direction");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getDirectionIDTerminalRuleCall_3_3_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getDirectionIDTerminalRuleCall_3_3_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_3_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_DirectionAssignment_3_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (SUBTYPES EQUALS QUOTE subtypes=ID QUOTE)?
protected class Property_Group_3_4 extends GroupToken {
	
	public Property_Group_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// SUBTYPES
protected class Property_SUBTYPESTerminalRuleCall_3_4_0 extends UnassignedTextToken {

	public Property_SUBTYPESTerminalRuleCall_3_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getSUBTYPESTerminalRuleCall_3_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_Group_3_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_4_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_SUBTYPESTerminalRuleCall_3_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_4_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// subtypes=ID
protected class Property_SubtypesAssignment_3_4_3 extends AssignmentToken  {
	
	public Property_SubtypesAssignment_3_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getSubtypesAssignment_3_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_4_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("subtypes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("subtypes");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getSubtypesIDTerminalRuleCall_3_4_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getSubtypesIDTerminalRuleCall_3_4_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_4_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_SubtypesAssignment_3_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
protected class Property_Group_3_5 extends GroupToken {
	
	public Property_Group_3_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NAME
protected class Property_NAMETerminalRuleCall_3_5_0 extends UnassignedTextToken {

	public Property_NAMETerminalRuleCall_3_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getNAMETerminalRuleCall_3_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_Group_3_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Property_Group_3_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_5_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_NAMETerminalRuleCall_3_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_5_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nameAttribute=ID
protected class Property_NameAttributeAssignment_3_5_3 extends AssignmentToken  {
	
	public Property_NameAttributeAssignment_3_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getNameAttributeAssignment_3_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nameAttribute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nameAttribute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getNameAttributeIDTerminalRuleCall_3_5_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getNameAttributeIDTerminalRuleCall_3_5_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_5_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_NameAttributeAssignment_3_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (TYPE EQUALS QUOTE type=ID QUOTE)?
protected class Property_Group_3_6 extends GroupToken {
	
	public Property_Group_3_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TYPE
protected class Property_TYPETerminalRuleCall_3_6_0 extends UnassignedTextToken {

	public Property_TYPETerminalRuleCall_3_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getTYPETerminalRuleCall_3_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_Group_3_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Property_Group_3_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Property_Group_3_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_6_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_TYPETerminalRuleCall_3_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_6_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=ID
protected class Property_TypeAssignment_3_6_3 extends AssignmentToken  {
	
	public Property_TypeAssignment_3_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getTypeAssignment_3_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getTypeIDTerminalRuleCall_3_6_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getTypeIDTerminalRuleCall_3_6_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_6_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_TypeAssignment_3_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class Property_Group_3_7 extends GroupToken {
	
	public Property_Group_3_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_7_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class Property_CONDITIONTerminalRuleCall_3_7_0 extends UnassignedTextToken {

	public Property_CONDITIONTerminalRuleCall_3_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getCONDITIONTerminalRuleCall_3_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_Group_3_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Property_Group_3_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Property_Group_3_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Property_Group_3_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_7_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_CONDITIONTerminalRuleCall_3_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_7_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class Property_ConditionAssignment_3_7_3 extends AssignmentToken  {
	
	public Property_ConditionAssignment_3_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getConditionAssignment_3_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPropertyAccess().getConditionTopLevelParserRuleCall_3_7_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_7_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_7_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_7_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_7_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_ConditionAssignment_3_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (VALUE EQUALS QUOTE rawValue=AnyUntilQuote QUOTE)?
protected class Property_Group_3_8 extends GroupToken {
	
	public Property_Group_3_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_3_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_8_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// VALUE
protected class Property_VALUETerminalRuleCall_3_8_0 extends UnassignedTextToken {

	public Property_VALUETerminalRuleCall_3_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getVALUETerminalRuleCall_3_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group_3_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_3_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Property_Group_3_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Property_Group_3_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Property_Group_3_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Property_Group_3_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Property_Group_3_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Property_Group_3_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Property_PropertyAction_2(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Property_EQUALSTerminalRuleCall_3_8_1 extends UnassignedTextToken {

	public Property_EQUALSTerminalRuleCall_3_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getEQUALSTerminalRuleCall_3_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_VALUETerminalRuleCall_3_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_8_2 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_EQUALSTerminalRuleCall_3_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// rawValue=AnyUntilQuote
protected class Property_RawValueAssignment_3_8_3 extends AssignmentToken  {
	
	public Property_RawValueAssignment_3_8_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getRawValueAssignment_3_8_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_QUOTETerminalRuleCall_3_8_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("rawValue",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("rawValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPropertyAccess().getRawValueAnyUntilQuoteParserRuleCall_3_8_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPropertyAccess().getRawValueAnyUntilQuoteParserRuleCall_3_8_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Property_QUOTETerminalRuleCall_3_8_4 extends UnassignedTextToken {

	public Property_QUOTETerminalRuleCall_3_8_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getQUOTETerminalRuleCall_3_8_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_RawValueAssignment_3_8_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=MapMethod)* LTS PROPERTYTAG GT
protected class Property_Alternatives_4 extends AlternativesToken {

	public Property_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPropertyAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_XML_TAG_SINGLEENDTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Property_XML_TAG_SINGLEENDTerminalRuleCall_4_0 extends UnassignedTextToken {

	public Property_XML_TAG_SINGLEENDTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT (children+=ExpressionOrOption | children+=MapMethod)* LTS PROPERTYTAG GT
protected class Property_Group_4_1 extends GroupToken {
	
	public Property_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_GTTerminalRuleCall_4_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Property_GTTerminalRuleCall_4_1_0 extends UnassignedTextToken {

	public Property_GTTerminalRuleCall_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGTTerminalRuleCall_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (children+=ExpressionOrOption | children+=MapMethod)*
protected class Property_Alternatives_4_1_1 extends AlternativesToken {

	public Property_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPropertyAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_ChildrenAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Property_ChildrenAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// children+=ExpressionOrOption
protected class Property_ChildrenAssignment_4_1_1_0 extends AssignmentToken  {
	
	public Property_ChildrenAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getChildrenAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExpressionOrOptionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPropertyAccess().getChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Property_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Property_GTTerminalRuleCall_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=MapMethod
protected class Property_ChildrenAssignment_4_1_1_1 extends AssignmentToken  {
	
	public Property_ChildrenAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPropertyAccess().getChildrenAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPropertyAccess().getChildrenMapMethodParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Property_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Property_GTTerminalRuleCall_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// LTS
protected class Property_LTSTerminalRuleCall_4_1_2 extends UnassignedTextToken {

	public Property_LTSTerminalRuleCall_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getLTSTerminalRuleCall_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Alternatives_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// PROPERTYTAG
protected class Property_PROPERTYTAGTerminalRuleCall_4_1_3 extends UnassignedTextToken {

	public Property_PROPERTYTAGTerminalRuleCall_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getPROPERTYTAGTerminalRuleCall_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_LTSTerminalRuleCall_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Property_GTTerminalRuleCall_4_1_4 extends UnassignedTextToken {

	public Property_GTTerminalRuleCall_4_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPropertyAccess().getGTTerminalRuleCall_4_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_PROPERTYTAGTerminalRuleCall_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule Property ****************/


/************ begin Rule Param ****************
 *
 * Param:
 * 	LT PARAMTAG {Param} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION
 * 	EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=MapMethod)*
 * 	LTS PARAMTAG GT);
 *
 **/

// LT PARAMTAG {Param} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION
// EQUALS QUOTE condition=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=MapMethod)*
// LTS PARAMTAG GT)
protected class Param_Group extends GroupToken {
	
	public Param_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParamAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getParamAccess().getParamAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Param_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Param_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// PARAMTAG
protected class Param_PARAMTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Param_PARAMTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getPARAMTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Param}
protected class Param_ParamAction_2 extends ActionToken  {

	public Param_ParamAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getParamAccess().getParamAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_PARAMTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE
// condition=TopLevel QUOTE)?
protected class Param_UnorderedGroup_3 extends UnorderedGroupToken {
	
	public Param_UnorderedGroup_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getParamAccess().getUnorderedGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Param_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Param_Group_3_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Param_ParamAction_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
protected class Param_Group_3_0 extends GroupToken {
	
	public Param_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParamAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_QUOTETerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NAME
protected class Param_NAMETerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Param_NAMETerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getNAMETerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_ParamAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Param_EQUALSTerminalRuleCall_3_0_1 extends UnassignedTextToken {

	public Param_EQUALSTerminalRuleCall_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getEQUALSTerminalRuleCall_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_NAMETerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Param_QUOTETerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Param_QUOTETerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getQUOTETerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_EQUALSTerminalRuleCall_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nameAttribute=ID
protected class Param_NameAttributeAssignment_3_0_3 extends AssignmentToken  {
	
	public Param_NameAttributeAssignment_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParamAccess().getNameAttributeAssignment_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_QUOTETerminalRuleCall_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nameAttribute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nameAttribute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParamAccess().getNameAttributeIDTerminalRuleCall_3_0_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getParamAccess().getNameAttributeIDTerminalRuleCall_3_0_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Param_QUOTETerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Param_QUOTETerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getQUOTETerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_NameAttributeAssignment_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (TYPE EQUALS QUOTE type=ID QUOTE)?
protected class Param_Group_3_1 extends GroupToken {
	
	public Param_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParamAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_QUOTETerminalRuleCall_3_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TYPE
protected class Param_TYPETerminalRuleCall_3_1_0 extends UnassignedTextToken {

	public Param_TYPETerminalRuleCall_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getTYPETerminalRuleCall_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Param_ParamAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Param_EQUALSTerminalRuleCall_3_1_1 extends UnassignedTextToken {

	public Param_EQUALSTerminalRuleCall_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getEQUALSTerminalRuleCall_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_TYPETerminalRuleCall_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Param_QUOTETerminalRuleCall_3_1_2 extends UnassignedTextToken {

	public Param_QUOTETerminalRuleCall_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getQUOTETerminalRuleCall_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_EQUALSTerminalRuleCall_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=ID
protected class Param_TypeAssignment_3_1_3 extends AssignmentToken  {
	
	public Param_TypeAssignment_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParamAccess().getTypeAssignment_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_QUOTETerminalRuleCall_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getParamAccess().getTypeIDTerminalRuleCall_3_1_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getParamAccess().getTypeIDTerminalRuleCall_3_1_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Param_QUOTETerminalRuleCall_3_1_4 extends UnassignedTextToken {

	public Param_QUOTETerminalRuleCall_3_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getQUOTETerminalRuleCall_3_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_TypeAssignment_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class Param_Group_3_2 extends GroupToken {
	
	public Param_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParamAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_QUOTETerminalRuleCall_3_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class Param_CONDITIONTerminalRuleCall_3_2_0 extends UnassignedTextToken {

	public Param_CONDITIONTerminalRuleCall_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getCONDITIONTerminalRuleCall_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Param_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Param_ParamAction_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Param_EQUALSTerminalRuleCall_3_2_1 extends UnassignedTextToken {

	public Param_EQUALSTerminalRuleCall_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getEQUALSTerminalRuleCall_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_CONDITIONTerminalRuleCall_3_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Param_QUOTETerminalRuleCall_3_2_2 extends UnassignedTextToken {

	public Param_QUOTETerminalRuleCall_3_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getQUOTETerminalRuleCall_3_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_EQUALSTerminalRuleCall_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class Param_ConditionAssignment_3_2_3 extends AssignmentToken  {
	
	public Param_ConditionAssignment_3_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParamAccess().getConditionAssignment_3_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParamAccess().getConditionTopLevelParserRuleCall_3_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Param_QUOTETerminalRuleCall_3_2_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Param_QUOTETerminalRuleCall_3_2_4 extends UnassignedTextToken {

	public Param_QUOTETerminalRuleCall_3_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getQUOTETerminalRuleCall_3_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_ConditionAssignment_3_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=MapMethod)* LTS PARAMTAG GT
protected class Param_Alternatives_4 extends AlternativesToken {

	public Param_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParamAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_XML_TAG_SINGLEENDTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Param_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Param_XML_TAG_SINGLEENDTerminalRuleCall_4_0 extends UnassignedTextToken {

	public Param_XML_TAG_SINGLEENDTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT (children+=ExpressionOrOption | children+=MapMethod)* LTS PARAMTAG GT
protected class Param_Group_4_1 extends GroupToken {
	
	public Param_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getParamAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_GTTerminalRuleCall_4_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Param_GTTerminalRuleCall_4_1_0 extends UnassignedTextToken {

	public Param_GTTerminalRuleCall_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getGTTerminalRuleCall_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (children+=ExpressionOrOption | children+=MapMethod)*
protected class Param_Alternatives_4_1_1 extends AlternativesToken {

	public Param_Alternatives_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getParamAccess().getAlternatives_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_ChildrenAssignment_4_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Param_ChildrenAssignment_4_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// children+=ExpressionOrOption
protected class Param_ChildrenAssignment_4_1_1_0 extends AssignmentToken  {
	
	public Param_ChildrenAssignment_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParamAccess().getChildrenAssignment_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExpressionOrOptionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParamAccess().getChildrenExpressionOrOptionParserRuleCall_4_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Param_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Param_GTTerminalRuleCall_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=MapMethod
protected class Param_ChildrenAssignment_4_1_1_1 extends AssignmentToken  {
	
	public Param_ChildrenAssignment_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getParamAccess().getChildrenAssignment_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getParamAccess().getChildrenMapMethodParserRuleCall_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Param_Alternatives_4_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Param_GTTerminalRuleCall_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// LTS
protected class Param_LTSTerminalRuleCall_4_1_2 extends UnassignedTextToken {

	public Param_LTSTerminalRuleCall_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getLTSTerminalRuleCall_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Alternatives_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// PARAMTAG
protected class Param_PARAMTAGTerminalRuleCall_4_1_3 extends UnassignedTextToken {

	public Param_PARAMTAGTerminalRuleCall_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getPARAMTAGTerminalRuleCall_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_LTSTerminalRuleCall_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Param_GTTerminalRuleCall_4_1_4 extends UnassignedTextToken {

	public Param_GTTerminalRuleCall_4_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getParamAccess().getGTTerminalRuleCall_4_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_PARAMTAGTerminalRuleCall_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule Param ****************/


/************ begin Rule MapMethod ****************
 *
 * MapMethod:
 * 	LT methodName=ID DOT ID ((ID EQUALS QUOTE expressions+=TopLevel QUOTE)* & (NAME EQUALS QUOTE expressions+=TopLevel
 * 	QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (VALUE
 * 	EQUALS QUOTE expressions+=TopLevel QUOTE)? & (MESSAGETAG EQUALS QUOTE expressions+=TopLevel QUOTE)? & (REPOSITORY
 * 	EQUALS QUOTE expressions+=TopLevel QUOTE)? & (SUBTYPES EQUALS QUOTE expressions+=TopLevel QUOTE)? & (AUTHOR EQUALS
 * 	QUOTE expressions+=TopLevel QUOTE)? & (DIRECTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CARDINALITY EQUALS
 * 	QUOTE expressions+=TopLevel QUOTE)? & (NOTES EQUALS QUOTE expressions+=TopLevel QUOTE)? & (SCRIPT EQUALS QUOTE
 * 	expressions+=TopLevel QUOTE)? & (DESCRIPTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CODE EQUALS QUOTE
 * 	expressions+=TopLevel QUOTE)? & (MODE EQUALS QUOTE expressions+=TopLevel QUOTE)? & (COMMENT EQUALS QUOTE
 * 	expressions+=TopLevel QUOTE)? & (COUNT EQUALS QUOTE expressions+=TopLevel QUOTE)? & (LENGTH EQUALS QUOTE
 * 	expressions+=TopLevel QUOTE)? & (XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | GT
 * 	(children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=MapMethod |
 * 	children+=DebugTag | children+=Field | children+=CommentClause | children+=Break | content+=AnyContent)*
 * 	closedTag?=LTS methodClosingName=ID DOT methodClosingMethod=ID GT);
 *
 **/

// LT methodName=ID DOT ID ((ID EQUALS QUOTE expressions+=TopLevel QUOTE)* & (NAME EQUALS QUOTE expressions+=TopLevel
// QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (VALUE
// EQUALS QUOTE expressions+=TopLevel QUOTE)? & (MESSAGETAG EQUALS QUOTE expressions+=TopLevel QUOTE)? & (REPOSITORY
// EQUALS QUOTE expressions+=TopLevel QUOTE)? & (SUBTYPES EQUALS QUOTE expressions+=TopLevel QUOTE)? & (AUTHOR EQUALS
// QUOTE expressions+=TopLevel QUOTE)? & (DIRECTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CARDINALITY EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (NOTES EQUALS QUOTE expressions+=TopLevel QUOTE)? & (SCRIPT EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (DESCRIPTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CODE EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (MODE EQUALS QUOTE expressions+=TopLevel QUOTE)? & (COMMENT EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (COUNT EQUALS QUOTE expressions+=TopLevel QUOTE)? & (LENGTH EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | GT
// (children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=MapMethod |
// children+=DebugTag | children+=Field | children+=CommentClause | children+=Break | content+=AnyContent)* closedTag?=LTS
// methodClosingName=ID DOT methodClosingMethod=ID GT)
protected class MapMethod_Group extends GroupToken {
	
	public MapMethod_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Alternatives_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMapMethodRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class MapMethod_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public MapMethod_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// methodName=ID
protected class MapMethod_MethodNameAssignment_1 extends AssignmentToken  {
	
	public MapMethod_MethodNameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getMethodNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapMethodAccess().getMethodNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapMethodAccess().getMethodNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// DOT
protected class MapMethod_DOTTerminalRuleCall_2 extends UnassignedTextToken {

	public MapMethod_DOTTerminalRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getDOTTerminalRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_MethodNameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ID
protected class MapMethod_IDTerminalRuleCall_3 extends UnassignedTextToken {

	public MapMethod_IDTerminalRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getIDTerminalRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_DOTTerminalRuleCall_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (ID EQUALS QUOTE expressions+=TopLevel QUOTE)* & (NAME EQUALS QUOTE expressions+=TopLevel QUOTE)? & (FILTER EQUALS QUOTE
// filter=TopLevel QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (VALUE EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (MESSAGETAG EQUALS QUOTE expressions+=TopLevel QUOTE)? & (REPOSITORY EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (SUBTYPES EQUALS QUOTE expressions+=TopLevel QUOTE)? & (AUTHOR EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (DIRECTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CARDINALITY EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (NOTES EQUALS QUOTE expressions+=TopLevel QUOTE)? & (SCRIPT EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (DESCRIPTION EQUALS QUOTE expressions+=TopLevel QUOTE)? & (CODE EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (MODE EQUALS QUOTE expressions+=TopLevel QUOTE)? & (COMMENT EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (COUNT EQUALS QUOTE expressions+=TopLevel QUOTE)? & (LENGTH EQUALS QUOTE
// expressions+=TopLevel QUOTE)? & (XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?
protected class MapMethod_UnorderedGroup_4 extends UnorderedGroupToken {
	
	public MapMethod_UnorderedGroup_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getUnorderedGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_18(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_17(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_16(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_15(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_14(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_13(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 13, inst);
			case 14: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 14, inst);
			case 15: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 15, inst);
			case 16: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 16, inst);
			case 17: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 17, inst);
			case 18: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 18, inst);
			case 19: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 19, inst);
			default: return null;
		}	
	}

}

// (ID EQUALS QUOTE expressions+=TopLevel QUOTE)*
protected class MapMethod_Group_4_0 extends GroupToken {
	
	public MapMethod_Group_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ID
protected class MapMethod_IDTerminalRuleCall_4_0_0 extends UnassignedTextToken {

	public MapMethod_IDTerminalRuleCall_4_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getIDTerminalRuleCall_4_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_0_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_IDTerminalRuleCall_4_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_0_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_0_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_0_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_0_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (NAME EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_1 extends GroupToken {
	
	public MapMethod_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NAME
protected class MapMethod_NAMETerminalRuleCall_4_1_0 extends UnassignedTextToken {

	public MapMethod_NAMETerminalRuleCall_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getNAMETerminalRuleCall_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_1_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_NAMETerminalRuleCall_4_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_1_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_1_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_1_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
protected class MapMethod_Group_4_2 extends GroupToken {
	
	public MapMethod_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// FILTER
protected class MapMethod_FILTERTerminalRuleCall_4_2_0 extends UnassignedTextToken {

	public MapMethod_FILTERTerminalRuleCall_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getFILTERTerminalRuleCall_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_2_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_FILTERTerminalRuleCall_4_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_2_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filter=TopLevel
protected class MapMethod_FilterAssignment_4_2_3 extends AssignmentToken  {
	
	public MapMethod_FilterAssignment_4_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getFilterAssignment_4_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filter",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filter");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getFilterTopLevelParserRuleCall_4_2_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_2_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_2_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_FilterAssignment_4_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class MapMethod_Group_4_3 extends GroupToken {
	
	public MapMethod_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class MapMethod_CONDITIONTerminalRuleCall_4_3_0 extends UnassignedTextToken {

	public MapMethod_CONDITIONTerminalRuleCall_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getCONDITIONTerminalRuleCall_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_3_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_CONDITIONTerminalRuleCall_4_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_3_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class MapMethod_ConditionAssignment_4_3_3 extends AssignmentToken  {
	
	public MapMethod_ConditionAssignment_4_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getConditionAssignment_4_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getConditionTopLevelParserRuleCall_4_3_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_3_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_3_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ConditionAssignment_4_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (VALUE EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_4 extends GroupToken {
	
	public MapMethod_Group_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// VALUE
protected class MapMethod_VALUETerminalRuleCall_4_4_0 extends UnassignedTextToken {

	public MapMethod_VALUETerminalRuleCall_4_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getVALUETerminalRuleCall_4_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_4_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_VALUETerminalRuleCall_4_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_4_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_4_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_4_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_4_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_4_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (MESSAGETAG EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_5 extends GroupToken {
	
	public MapMethod_Group_4_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_5_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MESSAGETAG
protected class MapMethod_MESSAGETAGTerminalRuleCall_4_5_0 extends UnassignedTextToken {

	public MapMethod_MESSAGETAGTerminalRuleCall_4_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getMESSAGETAGTerminalRuleCall_4_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_5_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_MESSAGETAGTerminalRuleCall_4_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_5_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_5_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_5_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_5_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_5_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_5_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (REPOSITORY EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_6 extends GroupToken {
	
	public MapMethod_Group_4_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_6_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// REPOSITORY
protected class MapMethod_REPOSITORYTerminalRuleCall_4_6_0 extends UnassignedTextToken {

	public MapMethod_REPOSITORYTerminalRuleCall_4_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getREPOSITORYTerminalRuleCall_4_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_6_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_REPOSITORYTerminalRuleCall_4_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_6_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_6_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_6_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_6_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_6_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_6_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_6_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (SUBTYPES EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_7 extends GroupToken {
	
	public MapMethod_Group_4_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_7_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// SUBTYPES
protected class MapMethod_SUBTYPESTerminalRuleCall_4_7_0 extends UnassignedTextToken {

	public MapMethod_SUBTYPESTerminalRuleCall_4_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getSUBTYPESTerminalRuleCall_4_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_7_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_SUBTYPESTerminalRuleCall_4_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_7_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_7_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_7_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_7_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_7_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_7_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_7_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (AUTHOR EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_8 extends GroupToken {
	
	public MapMethod_Group_4_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_8_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// AUTHOR
protected class MapMethod_AUTHORTerminalRuleCall_4_8_0 extends UnassignedTextToken {

	public MapMethod_AUTHORTerminalRuleCall_4_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getAUTHORTerminalRuleCall_4_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_8_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_AUTHORTerminalRuleCall_4_8_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_8_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_8_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_8_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_8_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_8_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_8_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_8_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_8_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_8_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_8_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_8_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_8_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (DIRECTION EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_9 extends GroupToken {
	
	public MapMethod_Group_4_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_9_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// DIRECTION
protected class MapMethod_DIRECTIONTerminalRuleCall_4_9_0 extends UnassignedTextToken {

	public MapMethod_DIRECTIONTerminalRuleCall_4_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getDIRECTIONTerminalRuleCall_4_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_9_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_DIRECTIONTerminalRuleCall_4_9_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_9_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_9_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_9_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_9_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_9_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_9_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_9_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_9_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_9_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_9_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_9_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_9_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CARDINALITY EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_10 extends GroupToken {
	
	public MapMethod_Group_4_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_10_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CARDINALITY
protected class MapMethod_CARDINALITYTerminalRuleCall_4_10_0 extends UnassignedTextToken {

	public MapMethod_CARDINALITYTerminalRuleCall_4_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getCARDINALITYTerminalRuleCall_4_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_10_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_CARDINALITYTerminalRuleCall_4_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_10_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_10_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_10_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_10_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_10_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_10_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_10_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_10_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_10_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_10_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_10_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_10_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (NOTES EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_11 extends GroupToken {
	
	public MapMethod_Group_4_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_11_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NOTES
protected class MapMethod_NOTESTerminalRuleCall_4_11_0 extends UnassignedTextToken {

	public MapMethod_NOTESTerminalRuleCall_4_11_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getNOTESTerminalRuleCall_4_11_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 11, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_11_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_11_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_11_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_NOTESTerminalRuleCall_4_11_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_11_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_11_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_11_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_11_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_11_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_11_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_11_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_11_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_11_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_11_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_11_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_11_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_11_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (SCRIPT EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_12 extends GroupToken {
	
	public MapMethod_Group_4_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_12_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// SCRIPT
protected class MapMethod_SCRIPTTerminalRuleCall_4_12_0 extends UnassignedTextToken {

	public MapMethod_SCRIPTTerminalRuleCall_4_12_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getSCRIPTTerminalRuleCall_4_12_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 12, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_12_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_12_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_12_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_SCRIPTTerminalRuleCall_4_12_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_12_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_12_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_12_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_12_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_12_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_12_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_12_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_12_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_12_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_12_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_12_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_12_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_12_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (DESCRIPTION EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_13 extends GroupToken {
	
	public MapMethod_Group_4_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_13_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// DESCRIPTION
protected class MapMethod_DESCRIPTIONTerminalRuleCall_4_13_0 extends UnassignedTextToken {

	public MapMethod_DESCRIPTIONTerminalRuleCall_4_13_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getDESCRIPTIONTerminalRuleCall_4_13_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 13, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_13_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_13_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_13_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_DESCRIPTIONTerminalRuleCall_4_13_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_13_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_13_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_13_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_13_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_13_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_13_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_13_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_13_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_13_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_13_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_13_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_13_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_13_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CODE EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_14 extends GroupToken {
	
	public MapMethod_Group_4_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_14_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CODE
protected class MapMethod_CODETerminalRuleCall_4_14_0 extends UnassignedTextToken {

	public MapMethod_CODETerminalRuleCall_4_14_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getCODETerminalRuleCall_4_14_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_13(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 13, inst);
			case 14: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 14, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_14_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_14_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_14_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_CODETerminalRuleCall_4_14_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_14_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_14_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_14_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_14_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_14_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_14_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_14_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_14_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_14_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_14_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_14_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_14_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_14_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (MODE EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_15 extends GroupToken {
	
	public MapMethod_Group_4_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_15_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MODE
protected class MapMethod_MODETerminalRuleCall_4_15_0 extends UnassignedTextToken {

	public MapMethod_MODETerminalRuleCall_4_15_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getMODETerminalRuleCall_4_15_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_14(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_13(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 13, inst);
			case 14: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 14, inst);
			case 15: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 15, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_15_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_15_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_15_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_MODETerminalRuleCall_4_15_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_15_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_15_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_15_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_15_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_15_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_15_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_15_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_15_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_15_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_15_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_15_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_15_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_15_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (COMMENT EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_16 extends GroupToken {
	
	public MapMethod_Group_4_16(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_16();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_16_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COMMENT
protected class MapMethod_COMMENTTerminalRuleCall_4_16_0 extends UnassignedTextToken {

	public MapMethod_COMMENTTerminalRuleCall_4_16_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getCOMMENTTerminalRuleCall_4_16_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_15(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_14(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_13(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 13, inst);
			case 14: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 14, inst);
			case 15: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 15, inst);
			case 16: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 16, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_16_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_16_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_16_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_COMMENTTerminalRuleCall_4_16_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_16_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_16_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_16_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_16_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_16_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_16_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_16_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_16_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_16_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_16_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_16_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_16_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_16_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (COUNT EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_17 extends GroupToken {
	
	public MapMethod_Group_4_17(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_17();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_17_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COUNT
protected class MapMethod_COUNTTerminalRuleCall_4_17_0 extends UnassignedTextToken {

	public MapMethod_COUNTTerminalRuleCall_4_17_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getCOUNTTerminalRuleCall_4_17_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_16(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_15(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_14(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_13(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 13, inst);
			case 14: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 14, inst);
			case 15: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 15, inst);
			case 16: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 16, inst);
			case 17: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 17, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_17_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_17_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_17_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_COUNTTerminalRuleCall_4_17_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_17_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_17_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_17_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_17_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_17_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_17_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_17_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_17_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_17_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_17_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_17_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_17_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_17_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (LENGTH EQUALS QUOTE expressions+=TopLevel QUOTE)?
protected class MapMethod_Group_4_18 extends GroupToken {
	
	public MapMethod_Group_4_18(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_4_18();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_18_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LENGTH
protected class MapMethod_LENGTHTerminalRuleCall_4_18_0 extends UnassignedTextToken {

	public MapMethod_LENGTHTerminalRuleCall_4_18_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getLENGTHTerminalRuleCall_4_18_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group_4_17(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_4_16(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_Group_4_15(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_Group_4_14(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_Group_4_13(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_Group_4_12(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_Group_4_11(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_Group_4_10(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_Group_4_9(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_Group_4_8(lastRuleCallOrigin, this, 9, inst);
			case 10: return new MapMethod_Group_4_7(lastRuleCallOrigin, this, 10, inst);
			case 11: return new MapMethod_Group_4_6(lastRuleCallOrigin, this, 11, inst);
			case 12: return new MapMethod_Group_4_5(lastRuleCallOrigin, this, 12, inst);
			case 13: return new MapMethod_Group_4_4(lastRuleCallOrigin, this, 13, inst);
			case 14: return new MapMethod_Group_4_3(lastRuleCallOrigin, this, 14, inst);
			case 15: return new MapMethod_Group_4_2(lastRuleCallOrigin, this, 15, inst);
			case 16: return new MapMethod_Group_4_1(lastRuleCallOrigin, this, 16, inst);
			case 17: return new MapMethod_Group_4_0(lastRuleCallOrigin, this, 17, inst);
			case 18: return new MapMethod_IDTerminalRuleCall_3(lastRuleCallOrigin, this, 18, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class MapMethod_EQUALSTerminalRuleCall_4_18_1 extends UnassignedTextToken {

	public MapMethod_EQUALSTerminalRuleCall_4_18_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getEQUALSTerminalRuleCall_4_18_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_LENGTHTerminalRuleCall_4_18_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_18_2 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_18_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_18_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_EQUALSTerminalRuleCall_4_18_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressions+=TopLevel
protected class MapMethod_ExpressionsAssignment_4_18_3 extends AssignmentToken  {
	
	public MapMethod_ExpressionsAssignment_4_18_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getExpressionsAssignment_4_18_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getExpressionsTopLevelParserRuleCall_4_18_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_QUOTETerminalRuleCall_4_18_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class MapMethod_QUOTETerminalRuleCall_4_18_4 extends UnassignedTextToken {

	public MapMethod_QUOTETerminalRuleCall_4_18_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getQUOTETerminalRuleCall_4_18_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ExpressionsAssignment_4_18_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// XML_TAG_SINGLEEND | GT (children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param |
// children+=MapMethod | children+=DebugTag | children+=Field | children+=CommentClause | children+=Break |
// content+=AnyContent)* closedTag?=LTS methodClosingName=ID DOT methodClosingMethod=ID GT
protected class MapMethod_Alternatives_5 extends AlternativesToken {

	public MapMethod_Alternatives_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getAlternatives_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_XML_TAG_SINGLEENDTerminalRuleCall_5_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_Group_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class MapMethod_XML_TAG_SINGLEENDTerminalRuleCall_5_0 extends UnassignedTextToken {

	public MapMethod_XML_TAG_SINGLEENDTerminalRuleCall_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getXML_TAG_SINGLEENDTerminalRuleCall_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_UnorderedGroup_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT (children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=MapMethod |
// children+=DebugTag | children+=Field | children+=CommentClause | children+=Break | content+=AnyContent)* closedTag?=LTS
// methodClosingName=ID DOT methodClosingMethod=ID GT
protected class MapMethod_Group_5_1 extends GroupToken {
	
	public MapMethod_Group_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGroup_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_GTTerminalRuleCall_5_1_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class MapMethod_GTTerminalRuleCall_5_1_0 extends UnassignedTextToken {

	public MapMethod_GTTerminalRuleCall_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGTTerminalRuleCall_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_UnorderedGroup_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (children+=ExpressionOrOption | children+=Message | children+=Property | children+=Param | children+=MapMethod |
// children+=DebugTag | children+=Field | children+=CommentClause | children+=Break | content+=AnyContent)*
protected class MapMethod_Alternatives_5_1_1 extends AlternativesToken {

	public MapMethod_Alternatives_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getAlternatives_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ChildrenAssignment_5_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_ChildrenAssignment_5_1_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MapMethod_ChildrenAssignment_5_1_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MapMethod_ChildrenAssignment_5_1_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MapMethod_ChildrenAssignment_5_1_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new MapMethod_ChildrenAssignment_5_1_1_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new MapMethod_ChildrenAssignment_5_1_1_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new MapMethod_ChildrenAssignment_5_1_1_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new MapMethod_ChildrenAssignment_5_1_1_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new MapMethod_ContentAssignment_5_1_1_9(lastRuleCallOrigin, this, 9, inst);
			default: return null;
		}	
	}

}

// children+=ExpressionOrOption
protected class MapMethod_ChildrenAssignment_5_1_1_0 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExpressionOrOptionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenExpressionOrOptionParserRuleCall_5_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Message
protected class MapMethod_ChildrenAssignment_5_1_1_1 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Message_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMessageRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenMessageParserRuleCall_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Property
protected class MapMethod_ChildrenAssignment_5_1_1_2 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Property_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPropertyRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenPropertyParserRuleCall_5_1_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Param
protected class MapMethod_ChildrenAssignment_5_1_1_3 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParamRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenParamParserRuleCall_5_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=MapMethod
protected class MapMethod_ChildrenAssignment_5_1_1_4 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenMapMethodParserRuleCall_5_1_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=DebugTag
protected class MapMethod_ChildrenAssignment_5_1_1_5 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDebugTagRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenDebugTagParserRuleCall_5_1_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Field
protected class MapMethod_ChildrenAssignment_5_1_1_6 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFieldRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenFieldParserRuleCall_5_1_1_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=CommentClause
protected class MapMethod_ChildrenAssignment_5_1_1_7 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCommentClauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenCommentClauseParserRuleCall_5_1_1_7_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Break
protected class MapMethod_ChildrenAssignment_5_1_1_8 extends AssignmentToken  {
	
	public MapMethod_ChildrenAssignment_5_1_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getChildrenAssignment_5_1_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBreakRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapMethodAccess().getChildrenBreakParserRuleCall_5_1_1_8_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// content+=AnyContent
protected class MapMethod_ContentAssignment_5_1_1_9 extends AssignmentToken  {
	
	public MapMethod_ContentAssignment_5_1_1_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getContentAssignment_5_1_1_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("content",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("content");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapMethodAccess().getContentAnyContentParserRuleCall_5_1_1_9_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMapMethodAccess().getContentAnyContentParserRuleCall_5_1_1_9_0();
			return obj;
		}
		return null;
	}

}


// closedTag?=LTS
protected class MapMethod_ClosedTagAssignment_5_1_2 extends AssignmentToken  {
	
	public MapMethod_ClosedTagAssignment_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getClosedTagAssignment_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Alternatives_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapMethod_GTTerminalRuleCall_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("closedTag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("closedTag");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapMethodAccess().getClosedTagLTSTerminalRuleCall_5_1_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapMethodAccess().getClosedTagLTSTerminalRuleCall_5_1_2_0();
			return obj;
		}
		return null;
	}

}

// methodClosingName=ID
protected class MapMethod_MethodClosingNameAssignment_5_1_3 extends AssignmentToken  {
	
	public MapMethod_MethodClosingNameAssignment_5_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getMethodClosingNameAssignment_5_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_ClosedTagAssignment_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodClosingName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodClosingName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapMethodAccess().getMethodClosingNameIDTerminalRuleCall_5_1_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapMethodAccess().getMethodClosingNameIDTerminalRuleCall_5_1_3_0();
			return obj;
		}
		return null;
	}

}

// DOT
protected class MapMethod_DOTTerminalRuleCall_5_1_4 extends UnassignedTextToken {

	public MapMethod_DOTTerminalRuleCall_5_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getDOTTerminalRuleCall_5_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_MethodClosingNameAssignment_5_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// methodClosingMethod=ID
protected class MapMethod_MethodClosingMethodAssignment_5_1_5 extends AssignmentToken  {
	
	public MapMethod_MethodClosingMethodAssignment_5_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getMethodClosingMethodAssignment_5_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_DOTTerminalRuleCall_5_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodClosingMethod",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodClosingMethod");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapMethodAccess().getMethodClosingMethodIDTerminalRuleCall_5_1_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapMethodAccess().getMethodClosingMethodIDTerminalRuleCall_5_1_5_0();
			return obj;
		}
		return null;
	}

}

// GT
protected class MapMethod_GTTerminalRuleCall_5_1_6 extends UnassignedTextToken {

	public MapMethod_GTTerminalRuleCall_5_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapMethodAccess().getGTTerminalRuleCall_5_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_MethodClosingMethodAssignment_5_1_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule MapMethod ****************/


/************ begin Rule Field ****************
 *
 * Field:
 * 	LT FIELDTAG {Field} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=AnyUntilQuote QUOTE)?
 * 	& (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE
 * 	filter=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | (GT (children+=ExpressionOrOption | children+=Param |
 * 	children+=MapMethod | children+=DebugTag | children+=CommentClause | children+=Break)*) LTS FIELDTAG GT);
 *
 **/

// LT FIELDTAG {Field} ((NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=AnyUntilQuote QUOTE)? &
// (TYPE EQUALS QUOTE type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE
// filter=TopLevel QUOTE)?) (XML_TAG_SINGLEEND | (GT (children+=ExpressionOrOption | children+=Param | children+=MapMethod
// | children+=DebugTag | children+=CommentClause | children+=Break)*) LTS FIELDTAG GT)
protected class Field_Group extends GroupToken {
	
	public Field_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFieldAccess().getFieldAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Field_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Field_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// FIELDTAG
protected class Field_FIELDTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Field_FIELDTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getFIELDTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Field}
protected class Field_FieldAction_2 extends ActionToken  {

	public Field_FieldAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFieldAccess().getFieldAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_FIELDTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)? & (COMMENT EQUALS QUOTE comment=AnyUntilQuote QUOTE)? & (TYPE EQUALS QUOTE
// type=ID QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)? & (FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
protected class Field_UnorderedGroup_3 extends UnorderedGroupToken {
	
	public Field_UnorderedGroup_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getFieldAccess().getUnorderedGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group_3_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_Group_3_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Field_Group_3_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Field_Group_3_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Field_Group_3_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Field_FieldAction_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// (NAME EQUALS QUOTE nameAttribute=ID QUOTE)?
protected class Field_Group_3_0 extends GroupToken {
	
	public Field_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NAME
protected class Field_NAMETerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public Field_NAMETerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getNAMETerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_FieldAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Field_EQUALSTerminalRuleCall_3_0_1 extends UnassignedTextToken {

	public Field_EQUALSTerminalRuleCall_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getEQUALSTerminalRuleCall_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_NAMETerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_0_2 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_EQUALSTerminalRuleCall_3_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// nameAttribute=ID
protected class Field_NameAttributeAssignment_3_0_3 extends AssignmentToken  {
	
	public Field_NameAttributeAssignment_3_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getNameAttributeAssignment_3_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("nameAttribute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("nameAttribute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFieldAccess().getNameAttributeIDTerminalRuleCall_3_0_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFieldAccess().getNameAttributeIDTerminalRuleCall_3_0_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_0_4 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_NameAttributeAssignment_3_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (COMMENT EQUALS QUOTE comment=AnyUntilQuote QUOTE)?
protected class Field_Group_3_1 extends GroupToken {
	
	public Field_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COMMENT
protected class Field_COMMENTTerminalRuleCall_3_1_0 extends UnassignedTextToken {

	public Field_COMMENTTerminalRuleCall_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getCOMMENTTerminalRuleCall_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_FieldAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Field_EQUALSTerminalRuleCall_3_1_1 extends UnassignedTextToken {

	public Field_EQUALSTerminalRuleCall_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getEQUALSTerminalRuleCall_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_COMMENTTerminalRuleCall_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_1_2 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_EQUALSTerminalRuleCall_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// comment=AnyUntilQuote
protected class Field_CommentAssignment_3_1_3 extends AssignmentToken  {
	
	public Field_CommentAssignment_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getCommentAssignment_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("comment",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("comment");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFieldAccess().getCommentAnyUntilQuoteParserRuleCall_3_1_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFieldAccess().getCommentAnyUntilQuoteParserRuleCall_3_1_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_1_4 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_CommentAssignment_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (TYPE EQUALS QUOTE type=ID QUOTE)?
protected class Field_Group_3_2 extends GroupToken {
	
	public Field_Group_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TYPE
protected class Field_TYPETerminalRuleCall_3_2_0 extends UnassignedTextToken {

	public Field_TYPETerminalRuleCall_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getTYPETerminalRuleCall_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Field_FieldAction_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Field_EQUALSTerminalRuleCall_3_2_1 extends UnassignedTextToken {

	public Field_EQUALSTerminalRuleCall_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getEQUALSTerminalRuleCall_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_TYPETerminalRuleCall_3_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_2_2 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_EQUALSTerminalRuleCall_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=ID
protected class Field_TypeAssignment_3_2_3 extends AssignmentToken  {
	
	public Field_TypeAssignment_3_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getTypeAssignment_3_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFieldAccess().getTypeIDTerminalRuleCall_3_2_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFieldAccess().getTypeIDTerminalRuleCall_3_2_3_0();
			return obj;
		}
		return null;
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_2_4 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_TypeAssignment_3_2_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class Field_Group_3_3 extends GroupToken {
	
	public Field_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class Field_CONDITIONTerminalRuleCall_3_3_0 extends UnassignedTextToken {

	public Field_CONDITIONTerminalRuleCall_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getCONDITIONTerminalRuleCall_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_Group_3_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Field_Group_3_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Field_FieldAction_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Field_EQUALSTerminalRuleCall_3_3_1 extends UnassignedTextToken {

	public Field_EQUALSTerminalRuleCall_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getEQUALSTerminalRuleCall_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_CONDITIONTerminalRuleCall_3_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_3_2 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_EQUALSTerminalRuleCall_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class Field_ConditionAssignment_3_3_3 extends AssignmentToken  {
	
	public Field_ConditionAssignment_3_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getConditionAssignment_3_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getConditionTopLevelParserRuleCall_3_3_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_3_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_3_4 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_ConditionAssignment_3_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (FILTER EQUALS QUOTE filter=TopLevel QUOTE)?
protected class Field_Group_3_4 extends GroupToken {
	
	public Field_Group_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// FILTER
protected class Field_FILTERTerminalRuleCall_3_4_0 extends UnassignedTextToken {

	public Field_FILTERTerminalRuleCall_3_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getFILTERTerminalRuleCall_3_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_Group_3_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Field_Group_3_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Field_Group_3_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Field_FieldAction_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class Field_EQUALSTerminalRuleCall_3_4_1 extends UnassignedTextToken {

	public Field_EQUALSTerminalRuleCall_3_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getEQUALSTerminalRuleCall_3_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_FILTERTerminalRuleCall_3_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_4_2 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_EQUALSTerminalRuleCall_3_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// filter=TopLevel
protected class Field_FilterAssignment_3_4_3 extends AssignmentToken  {
	
	public Field_FilterAssignment_3_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getFilterAssignment_3_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("filter",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("filter");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getFilterTopLevelParserRuleCall_3_4_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_QUOTETerminalRuleCall_3_4_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class Field_QUOTETerminalRuleCall_3_4_4 extends UnassignedTextToken {

	public Field_QUOTETerminalRuleCall_3_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getQUOTETerminalRuleCall_3_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_FilterAssignment_3_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// XML_TAG_SINGLEEND | (GT (children+=ExpressionOrOption | children+=Param | children+=MapMethod | children+=DebugTag |
// children+=CommentClause | children+=Break)*) LTS FIELDTAG GT
protected class Field_Alternatives_4 extends AlternativesToken {

	public Field_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFieldAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_XML_TAG_SINGLEENDTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Field_XML_TAG_SINGLEENDTerminalRuleCall_4_0 extends UnassignedTextToken {

	public Field_XML_TAG_SINGLEENDTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (GT (children+=ExpressionOrOption | children+=Param | children+=MapMethod | children+=DebugTag | children+=CommentClause
// | children+=Break)*) LTS FIELDTAG GT
protected class Field_Group_4_1 extends GroupToken {
	
	public Field_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_GTTerminalRuleCall_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT (children+=ExpressionOrOption | children+=Param | children+=MapMethod | children+=DebugTag | children+=CommentClause
// | children+=Break)*
protected class Field_Group_4_1_0 extends GroupToken {
	
	public Field_Group_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFieldAccess().getGroup_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Field_GTTerminalRuleCall_4_1_0_0 extends UnassignedTextToken {

	public Field_GTTerminalRuleCall_4_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getGTTerminalRuleCall_4_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_UnorderedGroup_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (children+=ExpressionOrOption | children+=Param | children+=MapMethod | children+=DebugTag | children+=CommentClause |
// children+=Break)*
protected class Field_Alternatives_4_1_0_1 extends AlternativesToken {

	public Field_Alternatives_4_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getFieldAccess().getAlternatives_4_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_ChildrenAssignment_4_1_0_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Field_ChildrenAssignment_4_1_0_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Field_ChildrenAssignment_4_1_0_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Field_ChildrenAssignment_4_1_0_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Field_ChildrenAssignment_4_1_0_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Field_ChildrenAssignment_4_1_0_1_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// children+=ExpressionOrOption
protected class Field_ChildrenAssignment_4_1_0_1_0 extends AssignmentToken  {
	
	public Field_ChildrenAssignment_4_1_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getChildrenAssignment_4_1_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExpressionOrOptionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getChildrenExpressionOrOptionParserRuleCall_4_1_0_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Field_GTTerminalRuleCall_4_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Param
protected class Field_ChildrenAssignment_4_1_0_1_1 extends AssignmentToken  {
	
	public Field_ChildrenAssignment_4_1_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getChildrenAssignment_4_1_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Param_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getParamRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getChildrenParamParserRuleCall_4_1_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Field_GTTerminalRuleCall_4_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=MapMethod
protected class Field_ChildrenAssignment_4_1_0_1_2 extends AssignmentToken  {
	
	public Field_ChildrenAssignment_4_1_0_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getChildrenAssignment_4_1_0_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getChildrenMapMethodParserRuleCall_4_1_0_1_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Field_GTTerminalRuleCall_4_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=DebugTag
protected class Field_ChildrenAssignment_4_1_0_1_3 extends AssignmentToken  {
	
	public Field_ChildrenAssignment_4_1_0_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getChildrenAssignment_4_1_0_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDebugTagRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getChildrenDebugTagParserRuleCall_4_1_0_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Field_GTTerminalRuleCall_4_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=CommentClause
protected class Field_ChildrenAssignment_4_1_0_1_4 extends AssignmentToken  {
	
	public Field_ChildrenAssignment_4_1_0_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getChildrenAssignment_4_1_0_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CommentClause_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCommentClauseRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getChildrenCommentClauseParserRuleCall_4_1_0_1_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Field_GTTerminalRuleCall_4_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// children+=Break
protected class Field_ChildrenAssignment_4_1_0_1_5 extends AssignmentToken  {
	
	public Field_ChildrenAssignment_4_1_0_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFieldAccess().getChildrenAssignment_4_1_0_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Break_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBreakRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFieldAccess().getChildrenBreakParserRuleCall_4_1_0_1_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Field_Alternatives_4_1_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Field_GTTerminalRuleCall_4_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// LTS
protected class Field_LTSTerminalRuleCall_4_1_1 extends UnassignedTextToken {

	public Field_LTSTerminalRuleCall_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getLTSTerminalRuleCall_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_Group_4_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// FIELDTAG
protected class Field_FIELDTAGTerminalRuleCall_4_1_2 extends UnassignedTextToken {

	public Field_FIELDTAGTerminalRuleCall_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getFIELDTAGTerminalRuleCall_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_LTSTerminalRuleCall_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class Field_GTTerminalRuleCall_4_1_3 extends UnassignedTextToken {

	public Field_GTTerminalRuleCall_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFieldAccess().getGTTerminalRuleCall_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Field_FIELDTAGTerminalRuleCall_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule Field ****************/


/************ begin Rule DebugTag ****************
 *
 * DebugTag:
 * 	LT DEBUG_TAG {DebugTag} ((VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?)
 * 	(XML_TAG_SINGLEEND | GT expression=TopLevel? LTS DEBUG_TAG GT);
 *
 **/

// LT DEBUG_TAG {DebugTag} ((VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?)
// (XML_TAG_SINGLEEND | GT expression=TopLevel? LTS DEBUG_TAG GT)
protected class DebugTag_Group extends GroupToken {
	
	public DebugTag_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDebugTagAccess().getDebugTagAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class DebugTag_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public DebugTag_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// DEBUG_TAG
protected class DebugTag_DEBUG_TAGTerminalRuleCall_1 extends UnassignedTextToken {

	public DebugTag_DEBUG_TAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getDEBUG_TAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {DebugTag}
protected class DebugTag_DebugTagAction_2 extends ActionToken  {

	public DebugTag_DebugTagAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getDebugTagAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_DEBUG_TAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (VALUE EQUALS value=TopLevel)? (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class DebugTag_Group_3 extends GroupToken {
	
	public DebugTag_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group_3_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DebugTag_Group_3_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DebugTag_DebugTagAction_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (VALUE EQUALS value=TopLevel)?
protected class DebugTag_Group_3_0 extends GroupToken {
	
	public DebugTag_Group_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGroup_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_ValueAssignment_3_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// VALUE
protected class DebugTag_VALUETerminalRuleCall_3_0_0 extends UnassignedTextToken {

	public DebugTag_VALUETerminalRuleCall_3_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getVALUETerminalRuleCall_3_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_DebugTagAction_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class DebugTag_EQUALSTerminalRuleCall_3_0_1 extends UnassignedTextToken {

	public DebugTag_EQUALSTerminalRuleCall_3_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getEQUALSTerminalRuleCall_3_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_VALUETerminalRuleCall_3_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=TopLevel
protected class DebugTag_ValueAssignment_3_0_2 extends AssignmentToken  {
	
	public DebugTag_ValueAssignment_3_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getValueAssignment_3_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDebugTagAccess().getValueTopLevelParserRuleCall_3_0_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DebugTag_EQUALSTerminalRuleCall_3_0_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (CONDITION EQUALS QUOTE condition=TopLevel QUOTE)?
protected class DebugTag_Group_3_1 extends GroupToken {
	
	public DebugTag_Group_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGroup_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_QUOTETerminalRuleCall_3_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class DebugTag_CONDITIONTerminalRuleCall_3_1_0 extends UnassignedTextToken {

	public DebugTag_CONDITIONTerminalRuleCall_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getCONDITIONTerminalRuleCall_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group_3_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DebugTag_DebugTagAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class DebugTag_EQUALSTerminalRuleCall_3_1_1 extends UnassignedTextToken {

	public DebugTag_EQUALSTerminalRuleCall_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getEQUALSTerminalRuleCall_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_CONDITIONTerminalRuleCall_3_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class DebugTag_QUOTETerminalRuleCall_3_1_2 extends UnassignedTextToken {

	public DebugTag_QUOTETerminalRuleCall_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getQUOTETerminalRuleCall_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_EQUALSTerminalRuleCall_3_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel
protected class DebugTag_ConditionAssignment_3_1_3 extends AssignmentToken  {
	
	public DebugTag_ConditionAssignment_3_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getConditionAssignment_3_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDebugTagAccess().getConditionTopLevelParserRuleCall_3_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DebugTag_QUOTETerminalRuleCall_3_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class DebugTag_QUOTETerminalRuleCall_3_1_4 extends UnassignedTextToken {

	public DebugTag_QUOTETerminalRuleCall_3_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getQUOTETerminalRuleCall_3_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_ConditionAssignment_3_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// XML_TAG_SINGLEEND | GT expression=TopLevel? LTS DEBUG_TAG GT
protected class DebugTag_Alternatives_4 extends AlternativesToken {

	public DebugTag_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_XML_TAG_SINGLEENDTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DebugTag_Group_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class DebugTag_XML_TAG_SINGLEENDTerminalRuleCall_4_0 extends UnassignedTextToken {

	public DebugTag_XML_TAG_SINGLEENDTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT expression=TopLevel? LTS DEBUG_TAG GT
protected class DebugTag_Group_4_1 extends GroupToken {
	
	public DebugTag_Group_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGroup_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_GTTerminalRuleCall_4_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class DebugTag_GTTerminalRuleCall_4_1_0 extends UnassignedTextToken {

	public DebugTag_GTTerminalRuleCall_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGTTerminalRuleCall_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_Group_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expression=TopLevel?
protected class DebugTag_ExpressionAssignment_4_1_1 extends AssignmentToken  {
	
	public DebugTag_ExpressionAssignment_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getExpressionAssignment_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expression",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expression");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDebugTagAccess().getExpressionTopLevelParserRuleCall_4_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DebugTag_GTTerminalRuleCall_4_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// LTS
protected class DebugTag_LTSTerminalRuleCall_4_1_2 extends UnassignedTextToken {

	public DebugTag_LTSTerminalRuleCall_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getLTSTerminalRuleCall_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_ExpressionAssignment_4_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// DEBUG_TAG
protected class DebugTag_DEBUG_TAGTerminalRuleCall_4_1_3 extends UnassignedTextToken {

	public DebugTag_DEBUG_TAGTerminalRuleCall_4_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getDEBUG_TAGTerminalRuleCall_4_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_LTSTerminalRuleCall_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class DebugTag_GTTerminalRuleCall_4_1_4 extends UnassignedTextToken {

	public DebugTag_GTTerminalRuleCall_4_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDebugTagAccess().getGTTerminalRuleCall_4_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DebugTag_DEBUG_TAGTerminalRuleCall_4_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule DebugTag ****************/


/************ begin Rule ExpressionOrOption ****************
 *
 * ExpressionOrOption returns Element:
 * 	LT EXPRESSION_TAG ExpressionTag | Option;
 *
 **/

// LT EXPRESSION_TAG ExpressionTag | Option
protected class ExpressionOrOption_Alternatives extends AlternativesToken {

	public ExpressionOrOption_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getExpressionOrOptionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExpressionOrOption_OptionParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExpressionTagAccess().getExpressionTagAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOptionAccess().getOptionAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT EXPRESSION_TAG ExpressionTag
protected class ExpressionOrOption_Group_0 extends GroupToken {
	
	public ExpressionOrOption_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExpressionOrOptionAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_ExpressionTagParserRuleCall_0_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExpressionTagAccess().getExpressionTagAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class ExpressionOrOption_LTTerminalRuleCall_0_0 extends UnassignedTextToken {

	public ExpressionOrOption_LTTerminalRuleCall_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionOrOptionAccess().getLTTerminalRuleCall_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// EXPRESSION_TAG
protected class ExpressionOrOption_EXPRESSION_TAGTerminalRuleCall_0_1 extends UnassignedTextToken {

	public ExpressionOrOption_EXPRESSION_TAGTerminalRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionOrOptionAccess().getEXPRESSION_TAGTerminalRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_LTTerminalRuleCall_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ExpressionTag
protected class ExpressionOrOption_ExpressionTagParserRuleCall_0_2 extends RuleCallToken {
	
	public ExpressionOrOption_ExpressionTagParserRuleCall_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionOrOptionAccess().getExpressionTagParserRuleCall_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(ExpressionTag_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionOrOption_EXPRESSION_TAGTerminalRuleCall_0_1(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}


// Option
protected class ExpressionOrOption_OptionParserRuleCall_1 extends RuleCallToken {
	
	public ExpressionOrOption_OptionParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionOrOptionAccess().getOptionParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Option_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOptionAccess().getOptionAction_2().getType().getClassifier())
			return null;
		if(checkForRecursion(Option_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ExpressionOrOption ****************/


/************ begin Rule ExpressionTag ****************
 *
 * ExpressionTag:
 * 	{ExpressionTag} ((VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? &
 * 	(XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | GT AnyContent* closedTag?=LTS EXPRESSION_TAG GT);
 *
 **/

// {ExpressionTag} ((VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? &
// (XMLSPACE EQUALS QUOTE PRESERVE QUOTE)?) (XML_TAG_SINGLEEND | GT AnyContent* closedTag?=LTS EXPRESSION_TAG GT)
protected class ExpressionTag_Group extends GroupToken {
	
	public ExpressionTag_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExpressionTagAccess().getExpressionTagAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {ExpressionTag}
protected class ExpressionTag_ExpressionTagAction_0 extends ActionToken  {

	public ExpressionTag_ExpressionTagAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getExpressionTagAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// (VALUE EQUALS QUOTE value=TopLevel? QUOTE)? & (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)? & (XMLSPACE EQUALS
// QUOTE PRESERVE QUOTE)?
protected class ExpressionTag_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public ExpressionTag_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExpressionTag_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ExpressionTag_ExpressionTagAction_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// (VALUE EQUALS QUOTE value=TopLevel? QUOTE)?
protected class ExpressionTag_Group_1_0 extends GroupToken {
	
	public ExpressionTag_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_QUOTETerminalRuleCall_1_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// VALUE
protected class ExpressionTag_VALUETerminalRuleCall_1_0_0 extends UnassignedTextToken {

	public ExpressionTag_VALUETerminalRuleCall_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getVALUETerminalRuleCall_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_ExpressionTagAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class ExpressionTag_EQUALSTerminalRuleCall_1_0_1 extends UnassignedTextToken {

	public ExpressionTag_EQUALSTerminalRuleCall_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getEQUALSTerminalRuleCall_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_VALUETerminalRuleCall_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class ExpressionTag_QUOTETerminalRuleCall_1_0_2 extends UnassignedTextToken {

	public ExpressionTag_QUOTETerminalRuleCall_1_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getQUOTETerminalRuleCall_1_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_EQUALSTerminalRuleCall_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=TopLevel?
protected class ExpressionTag_ValueAssignment_1_0_3 extends AssignmentToken  {
	
	public ExpressionTag_ValueAssignment_1_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getValueAssignment_1_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getExpressionTagAccess().getValueTopLevelParserRuleCall_1_0_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ExpressionTag_QUOTETerminalRuleCall_1_0_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class ExpressionTag_QUOTETerminalRuleCall_1_0_4 extends UnassignedTextToken {

	public ExpressionTag_QUOTETerminalRuleCall_1_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getQUOTETerminalRuleCall_1_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_ValueAssignment_1_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// (CONDITION EQUALS QUOTE condition=TopLevel? QUOTE)?
protected class ExpressionTag_Group_1_1 extends GroupToken {
	
	public ExpressionTag_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_QUOTETerminalRuleCall_1_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// CONDITION
protected class ExpressionTag_CONDITIONTerminalRuleCall_1_1_0 extends UnassignedTextToken {

	public ExpressionTag_CONDITIONTerminalRuleCall_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getCONDITIONTerminalRuleCall_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExpressionTag_ExpressionTagAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// EQUALS
protected class ExpressionTag_EQUALSTerminalRuleCall_1_1_1 extends UnassignedTextToken {

	public ExpressionTag_EQUALSTerminalRuleCall_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getEQUALSTerminalRuleCall_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_CONDITIONTerminalRuleCall_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// QUOTE
protected class ExpressionTag_QUOTETerminalRuleCall_1_1_2 extends UnassignedTextToken {

	public ExpressionTag_QUOTETerminalRuleCall_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getQUOTETerminalRuleCall_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_EQUALSTerminalRuleCall_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// condition=TopLevel?
protected class ExpressionTag_ConditionAssignment_1_1_3 extends AssignmentToken  {
	
	public ExpressionTag_ConditionAssignment_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getConditionAssignment_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TopLevel_ToplevelExpressionAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTopLevelRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getExpressionTagAccess().getConditionTopLevelParserRuleCall_1_1_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ExpressionTag_QUOTETerminalRuleCall_1_1_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// QUOTE
protected class ExpressionTag_QUOTETerminalRuleCall_1_1_4 extends UnassignedTextToken {

	public ExpressionTag_QUOTETerminalRuleCall_1_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getQUOTETerminalRuleCall_1_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_ConditionAssignment_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



// XML_TAG_SINGLEEND | GT AnyContent* closedTag?=LTS EXPRESSION_TAG GT
protected class ExpressionTag_Alternatives_2 extends AlternativesToken {

	public ExpressionTag_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_XML_TAG_SINGLEENDTerminalRuleCall_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExpressionTag_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class ExpressionTag_XML_TAG_SINGLEENDTerminalRuleCall_2_0 extends UnassignedTextToken {

	public ExpressionTag_XML_TAG_SINGLEENDTerminalRuleCall_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getXML_TAG_SINGLEENDTerminalRuleCall_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT AnyContent* closedTag?=LTS EXPRESSION_TAG GT
protected class ExpressionTag_Group_2_1 extends GroupToken {
	
	public ExpressionTag_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_GTTerminalRuleCall_2_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class ExpressionTag_GTTerminalRuleCall_2_1_0 extends UnassignedTextToken {

	public ExpressionTag_GTTerminalRuleCall_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getGTTerminalRuleCall_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// closedTag?=LTS
protected class ExpressionTag_ClosedTagAssignment_2_1_2 extends AssignmentToken  {
	
	public ExpressionTag_ClosedTagAssignment_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getClosedTagAssignment_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_GTTerminalRuleCall_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("closedTag",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("closedTag");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExpressionTagAccess().getClosedTagLTSTerminalRuleCall_2_1_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExpressionTagAccess().getClosedTagLTSTerminalRuleCall_2_1_2_0();
			return obj;
		}
		return null;
	}

}

// EXPRESSION_TAG
protected class ExpressionTag_EXPRESSION_TAGTerminalRuleCall_2_1_3 extends UnassignedTextToken {

	public ExpressionTag_EXPRESSION_TAGTerminalRuleCall_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getEXPRESSION_TAGTerminalRuleCall_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_ClosedTagAssignment_2_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// GT
protected class ExpressionTag_GTTerminalRuleCall_2_1_4 extends UnassignedTextToken {

	public ExpressionTag_GTTerminalRuleCall_2_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExpressionTagAccess().getGTTerminalRuleCall_2_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExpressionTag_EXPRESSION_TAGTerminalRuleCall_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}




/************ end Rule ExpressionTag ****************/


/************ begin Rule Option ****************
 *
 * Option:
 * 	LT OPTIONTAG {Option} attributes+=NonExpression* (XML_TAG_SINGLEEND | GT LTS OPTIONTAG GT);
 *
 **/

// LT OPTIONTAG {Option} attributes+=NonExpression* (XML_TAG_SINGLEEND | GT LTS OPTIONTAG GT)
protected class Option_Group extends GroupToken {
	
	public Option_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOptionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Option_Alternatives_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOptionAccess().getOptionAction_2().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LT
protected class Option_LTTerminalRuleCall_0 extends UnassignedTextToken {

	public Option_LTTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOptionAccess().getLTTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// OPTIONTAG
protected class Option_OPTIONTAGTerminalRuleCall_1 extends UnassignedTextToken {

	public Option_OPTIONTAGTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOptionAccess().getOPTIONTAGTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Option_LTTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Option}
protected class Option_OptionAction_2 extends ActionToken  {

	public Option_OptionAction_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getOptionAccess().getOptionAction_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Option_OPTIONTAGTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// attributes+=NonExpression*
protected class Option_AttributesAssignment_3 extends AssignmentToken  {
	
	public Option_AttributesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOptionAccess().getAttributesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getNonExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOptionAccess().getAttributesNonExpressionParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Option_AttributesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Option_OptionAction_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// XML_TAG_SINGLEEND | GT LTS OPTIONTAG GT
protected class Option_Alternatives_4 extends AlternativesToken {

	public Option_Alternatives_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getOptionAccess().getAlternatives_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Option_XML_TAG_SINGLEENDTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// XML_TAG_SINGLEEND
protected class Option_XML_TAG_SINGLEENDTerminalRuleCall_4_0 extends UnassignedTextToken {

	public Option_XML_TAG_SINGLEENDTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getOptionAccess().getXML_TAG_SINGLEENDTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Option_AttributesAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Option_OptionAction_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



/************ end Rule Option ****************/


/************ begin Rule TopLevel ****************
 *
 * TopLevel:
 * 	toplevelExpression=OrExpression;
 *
 **/

// toplevelExpression=OrExpression
protected class TopLevel_ToplevelExpressionAssignment extends AssignmentToken  {
	
	public TopLevel_ToplevelExpressionAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTopLevelAccess().getToplevelExpressionAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTopLevelRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("toplevelExpression",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("toplevelExpression");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTopLevelAccess().getToplevelExpressionOrExpressionParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

/************ end Rule TopLevel ****************/




/************ begin Rule TmlExpression ****************
 *
 * TmlExpression returns TmlReference:
 * 	SQBRACKET_OPEN absolute?=TML_SEPARATOR? param?=AT? elements+=PathElement (TML_SEPARATOR elements+=PathElement)*
 * 	SQBRACKET_CLOSE;
 *
 **/

// SQBRACKET_OPEN absolute?=TML_SEPARATOR? param?=AT? elements+=PathElement (TML_SEPARATOR elements+=PathElement)*
// SQBRACKET_CLOSE
protected class TmlExpression_Group extends GroupToken {
	
	public TmlExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_SQBRACKET_CLOSETerminalRuleCall_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTmlExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// SQBRACKET_OPEN
protected class TmlExpression_SQBRACKET_OPENTerminalRuleCall_0 extends UnassignedTextToken {

	public TmlExpression_SQBRACKET_OPENTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getSQBRACKET_OPENTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// absolute?=TML_SEPARATOR?
protected class TmlExpression_AbsoluteAssignment_1 extends AssignmentToken  {
	
	public TmlExpression_AbsoluteAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getAbsoluteAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_SQBRACKET_OPENTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("absolute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("absolute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTmlExpressionAccess().getAbsoluteTML_SEPARATORTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTmlExpressionAccess().getAbsoluteTML_SEPARATORTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// param?=AT?
protected class TmlExpression_ParamAssignment_2 extends AssignmentToken  {
	
	public TmlExpression_ParamAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getParamAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_AbsoluteAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TmlExpression_SQBRACKET_OPENTerminalRuleCall_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("param",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("param");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTmlExpressionAccess().getParamATTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTmlExpressionAccess().getParamATTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// elements+=PathElement
protected class TmlExpression_ElementsAssignment_3 extends AssignmentToken  {
	
	public TmlExpression_ElementsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getElementsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_ParamAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TmlExpression_AbsoluteAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new TmlExpression_SQBRACKET_OPENTerminalRuleCall_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// (TML_SEPARATOR elements+=PathElement)*
protected class TmlExpression_Group_4 extends GroupToken {
	
	public TmlExpression_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_ElementsAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TML_SEPARATOR
protected class TmlExpression_TML_SEPARATORTerminalRuleCall_4_0 extends UnassignedTextToken {

	public TmlExpression_TML_SEPARATORTerminalRuleCall_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getTML_SEPARATORTerminalRuleCall_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TmlExpression_ElementsAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// elements+=PathElement
protected class TmlExpression_ElementsAssignment_4_1 extends AssignmentToken  {
	
	public TmlExpression_ElementsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getElementsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_TML_SEPARATORTerminalRuleCall_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTmlExpressionAccess().getElementsPathElementParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// SQBRACKET_CLOSE
protected class TmlExpression_SQBRACKET_CLOSETerminalRuleCall_5 extends UnassignedTextToken {

	public TmlExpression_SQBRACKET_CLOSETerminalRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTmlExpressionAccess().getSQBRACKET_CLOSETerminalRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TmlExpression_ElementsAssignment_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule TmlExpression ****************/


/************ begin Rule ExistsTmlExpression ****************
 *
 * ExistsTmlExpression returns ExistsTmlReference:
 * 	TML_EXISTS SQBRACKET_OPEN absolute?=TML_SEPARATOR? param?=AT? elements+=PathElement (TML_SEPARATOR
 * 	elements+=PathElement)* SQBRACKET_CLOSE;
 *
 **/

// TML_EXISTS SQBRACKET_OPEN absolute?=TML_SEPARATOR? param?=AT? elements+=PathElement (TML_SEPARATOR
// elements+=PathElement)* SQBRACKET_CLOSE
protected class ExistsTmlExpression_Group extends GroupToken {
	
	public ExistsTmlExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_SQBRACKET_CLOSETerminalRuleCall_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExistsTmlExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// TML_EXISTS
protected class ExistsTmlExpression_TML_EXISTSTerminalRuleCall_0 extends UnassignedTextToken {

	public ExistsTmlExpression_TML_EXISTSTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getTML_EXISTSTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// SQBRACKET_OPEN
protected class ExistsTmlExpression_SQBRACKET_OPENTerminalRuleCall_1 extends UnassignedTextToken {

	public ExistsTmlExpression_SQBRACKET_OPENTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getSQBRACKET_OPENTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_TML_EXISTSTerminalRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// absolute?=TML_SEPARATOR?
protected class ExistsTmlExpression_AbsoluteAssignment_2 extends AssignmentToken  {
	
	public ExistsTmlExpression_AbsoluteAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getAbsoluteAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_SQBRACKET_OPENTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("absolute",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("absolute");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExistsTmlExpressionAccess().getAbsoluteTML_SEPARATORTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExistsTmlExpressionAccess().getAbsoluteTML_SEPARATORTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// param?=AT?
protected class ExistsTmlExpression_ParamAssignment_3 extends AssignmentToken  {
	
	public ExistsTmlExpression_ParamAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getParamAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_AbsoluteAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExistsTmlExpression_SQBRACKET_OPENTerminalRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("param",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("param");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExistsTmlExpressionAccess().getParamATTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExistsTmlExpressionAccess().getParamATTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}

// elements+=PathElement
protected class ExistsTmlExpression_ElementsAssignment_4 extends AssignmentToken  {
	
	public ExistsTmlExpression_ElementsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getElementsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_ParamAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExistsTmlExpression_AbsoluteAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ExistsTmlExpression_SQBRACKET_OPENTerminalRuleCall_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_4_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// (TML_SEPARATOR elements+=PathElement)*
protected class ExistsTmlExpression_Group_5 extends GroupToken {
	
	public ExistsTmlExpression_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_ElementsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// TML_SEPARATOR
protected class ExistsTmlExpression_TML_SEPARATORTerminalRuleCall_5_0 extends UnassignedTextToken {

	public ExistsTmlExpression_TML_SEPARATORTerminalRuleCall_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getTML_SEPARATORTerminalRuleCall_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExistsTmlExpression_ElementsAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// elements+=PathElement
protected class ExistsTmlExpression_ElementsAssignment_5_1 extends AssignmentToken  {
	
	public ExistsTmlExpression_ElementsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getElementsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_TML_SEPARATORTerminalRuleCall_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getExistsTmlExpressionAccess().getElementsPathElementParserRuleCall_5_1_0();
			return obj;
		}
		return null;
	}

}


// SQBRACKET_CLOSE
protected class ExistsTmlExpression_SQBRACKET_CLOSETerminalRuleCall_6 extends UnassignedTextToken {

	public ExistsTmlExpression_SQBRACKET_CLOSETerminalRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getExistsTmlExpressionAccess().getSQBRACKET_CLOSETerminalRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExistsTmlExpression_ElementsAssignment_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ExistsTmlExpression ****************/


/************ begin Rule MapReferenceParams ****************
 *
 * MapReferenceParams returns ReferenceParams:
 * 	BRACKET_OPEN getterParams+=Literal (COMMA getterParams+=Literal)* BRACKET_CLOSE;
 *
 **/

// BRACKET_OPEN getterParams+=Literal (COMMA getterParams+=Literal)* BRACKET_CLOSE
protected class MapReferenceParams_Group extends GroupToken {
	
	public MapReferenceParams_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapReferenceParams_BRACKET_CLOSETerminalRuleCall_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMapReferenceParamsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// BRACKET_OPEN
protected class MapReferenceParams_BRACKET_OPENTerminalRuleCall_0 extends UnassignedTextToken {

	public MapReferenceParams_BRACKET_OPENTerminalRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getBRACKET_OPENTerminalRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// getterParams+=Literal
protected class MapReferenceParams_GetterParamsAssignment_1 extends AssignmentToken  {
	
	public MapReferenceParams_GetterParamsAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getGetterParamsAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("getterParams",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("getterParams");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapReferenceParamsAccess().getGetterParamsLiteralParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapReferenceParams_BRACKET_OPENTerminalRuleCall_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (COMMA getterParams+=Literal)*
protected class MapReferenceParams_Group_2 extends GroupToken {
	
	public MapReferenceParams_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapReferenceParams_GetterParamsAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COMMA
protected class MapReferenceParams_COMMATerminalRuleCall_2_0 extends UnassignedTextToken {

	public MapReferenceParams_COMMATerminalRuleCall_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getCOMMATerminalRuleCall_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapReferenceParams_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapReferenceParams_GetterParamsAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// getterParams+=Literal
protected class MapReferenceParams_GetterParamsAssignment_2_1 extends AssignmentToken  {
	
	public MapReferenceParams_GetterParamsAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getGetterParamsAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("getterParams",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("getterParams");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapReferenceParamsAccess().getGetterParamsLiteralParserRuleCall_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapReferenceParams_COMMATerminalRuleCall_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// BRACKET_CLOSE
protected class MapReferenceParams_BRACKET_CLOSETerminalRuleCall_3 extends UnassignedTextToken {

	public MapReferenceParams_BRACKET_CLOSETerminalRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapReferenceParamsAccess().getBRACKET_CLOSETerminalRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapReferenceParams_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapReferenceParams_GetterParamsAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule MapReferenceParams ****************/


/************ begin Rule MapGetReference ****************
 *
 * MapGetReference:
 * 	operations+=DOLLAR (elements+=PARENT TML_SEPARATOR)* elements+=ID referenceParams=MapReferenceParams?;
 *
 **/

// operations+=DOLLAR (elements+=PARENT TML_SEPARATOR)* elements+=ID referenceParams=MapReferenceParams?
protected class MapGetReference_Group extends GroupToken {
	
	public MapGetReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapGetReference_ReferenceParamsAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapGetReference_ElementsAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMapGetReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// operations+=DOLLAR
protected class MapGetReference_OperationsAssignment_0 extends AssignmentToken  {
	
	public MapGetReference_OperationsAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getOperationsAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapGetReferenceAccess().getOperationsDOLLARTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapGetReferenceAccess().getOperationsDOLLARTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// (elements+=PARENT TML_SEPARATOR)*
protected class MapGetReference_Group_1 extends GroupToken {
	
	public MapGetReference_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapGetReference_TML_SEPARATORTerminalRuleCall_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// elements+=PARENT
protected class MapGetReference_ElementsAssignment_1_0 extends AssignmentToken  {
	
	public MapGetReference_ElementsAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getElementsAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapGetReference_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapGetReference_OperationsAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapGetReferenceAccess().getElementsPARENTTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapGetReferenceAccess().getElementsPARENTTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// TML_SEPARATOR
protected class MapGetReference_TML_SEPARATORTerminalRuleCall_1_1 extends UnassignedTextToken {

	public MapGetReference_TML_SEPARATORTerminalRuleCall_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getTML_SEPARATORTerminalRuleCall_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapGetReference_ElementsAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// elements+=ID
protected class MapGetReference_ElementsAssignment_2 extends AssignmentToken  {
	
	public MapGetReference_ElementsAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getElementsAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapGetReference_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MapGetReference_OperationsAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMapGetReferenceAccess().getElementsIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMapGetReferenceAccess().getElementsIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// referenceParams=MapReferenceParams?
protected class MapGetReference_ReferenceParamsAssignment_3 extends AssignmentToken  {
	
	public MapGetReference_ReferenceParamsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMapGetReferenceAccess().getReferenceParamsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapReferenceParams_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referenceParams",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referenceParams");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapReferenceParamsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMapGetReferenceAccess().getReferenceParamsMapReferenceParamsParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MapGetReference_ElementsAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule MapGetReference ****************/


/************ begin Rule OrExpression ****************
 *
 * OrExpression returns Expression:
 * 	parameters+=AndExpression (operations+=OR parameters+=AndExpression)*;
 *
 **/

// parameters+=AndExpression (operations+=OR parameters+=AndExpression)*
protected class OrExpression_Group extends GroupToken {
	
	public OrExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOrExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OrExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOrExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parameters+=AndExpression
protected class OrExpression_ParametersAssignment_0 extends AssignmentToken  {
	
	public OrExpression_ParametersAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOrExpressionAccess().getParametersAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AndExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAndExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// (operations+=OR parameters+=AndExpression)*
protected class OrExpression_Group_1 extends GroupToken {
	
	public OrExpression_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOrExpressionAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_ParametersAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=OR
protected class OrExpression_OperationsAssignment_1_0 extends AssignmentToken  {
	
	public OrExpression_OperationsAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOrExpressionAccess().getOperationsAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OrExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOrExpressionAccess().getOperationsORTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getOrExpressionAccess().getOperationsORTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=AndExpression
protected class OrExpression_ParametersAssignment_1_1 extends AssignmentToken  {
	
	public OrExpression_ParametersAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOrExpressionAccess().getParametersAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AndExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAndExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOrExpressionAccess().getParametersAndExpressionParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OrExpression_OperationsAssignment_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule OrExpression ****************/


/************ begin Rule AndExpression ****************
 *
 * AndExpression returns Expression:
 * 	parameters+=EqualityExpression (operations+=AND parameters+=EqualityExpression)*;
 *
 **/

// parameters+=EqualityExpression (operations+=AND parameters+=EqualityExpression)*
protected class AndExpression_Group extends GroupToken {
	
	public AndExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAndExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AndExpression_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AndExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAndExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parameters+=EqualityExpression
protected class AndExpression_ParametersAssignment_0 extends AssignmentToken  {
	
	public AndExpression_ParametersAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAndExpressionAccess().getParametersAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEqualityExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// (operations+=AND parameters+=EqualityExpression)*
protected class AndExpression_Group_1 extends GroupToken {
	
	public AndExpression_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAndExpressionAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AndExpression_ParametersAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=AND
protected class AndExpression_OperationsAssignment_1_0 extends AssignmentToken  {
	
	public AndExpression_OperationsAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAndExpressionAccess().getOperationsAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AndExpression_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AndExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAndExpressionAccess().getOperationsANDTerminalRuleCall_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAndExpressionAccess().getOperationsANDTerminalRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=EqualityExpression
protected class AndExpression_ParametersAssignment_1_1 extends AssignmentToken  {
	
	public AndExpression_ParametersAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAndExpressionAccess().getParametersAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEqualityExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAndExpressionAccess().getParametersEqualityExpressionParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AndExpression_OperationsAssignment_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



/************ end Rule AndExpression ****************/


/************ begin Rule EqualityExpression ****************
 *
 * EqualityExpression returns Expression:
 * 	parameters+=RelationalExpression (operations+=EQUALSEQUALS parameters+=RelationalExpression | operations+=NEQUALS
 * 	parameters+=RelationalExpression)?;
 *
 **/

// parameters+=RelationalExpression (operations+=EQUALSEQUALS parameters+=RelationalExpression | operations+=NEQUALS
// parameters+=RelationalExpression)?
protected class EqualityExpression_Group extends GroupToken {
	
	public EqualityExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EqualityExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEqualityExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parameters+=RelationalExpression
protected class EqualityExpression_ParametersAssignment_0 extends AssignmentToken  {
	
	public EqualityExpression_ParametersAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getParametersAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRelationalExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEqualityExpressionAccess().getParametersRelationalExpressionParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// (operations+=EQUALSEQUALS parameters+=RelationalExpression | operations+=NEQUALS parameters+=RelationalExpression)?
protected class EqualityExpression_Alternatives_1 extends AlternativesToken {

	public EqualityExpression_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new EqualityExpression_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// operations+=EQUALSEQUALS parameters+=RelationalExpression
protected class EqualityExpression_Group_1_0 extends GroupToken {
	
	public EqualityExpression_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_ParametersAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=EQUALSEQUALS
protected class EqualityExpression_OperationsAssignment_1_0_0 extends AssignmentToken  {
	
	public EqualityExpression_OperationsAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEqualityExpressionAccess().getOperationsEQUALSEQUALSTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEqualityExpressionAccess().getOperationsEQUALSEQUALSTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=RelationalExpression
protected class EqualityExpression_ParametersAssignment_1_0_1 extends AssignmentToken  {
	
	public EqualityExpression_ParametersAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRelationalExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEqualityExpressionAccess().getParametersRelationalExpressionParserRuleCall_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EqualityExpression_OperationsAssignment_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// operations+=NEQUALS parameters+=RelationalExpression
protected class EqualityExpression_Group_1_1 extends GroupToken {
	
	public EqualityExpression_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_ParametersAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=NEQUALS
protected class EqualityExpression_OperationsAssignment_1_1_0 extends AssignmentToken  {
	
	public EqualityExpression_OperationsAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getOperationsAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EqualityExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEqualityExpressionAccess().getOperationsNEQUALSTerminalRuleCall_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEqualityExpressionAccess().getOperationsNEQUALSTerminalRuleCall_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=RelationalExpression
protected class EqualityExpression_ParametersAssignment_1_1_1 extends AssignmentToken  {
	
	public EqualityExpression_ParametersAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEqualityExpressionAccess().getParametersAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRelationalExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getEqualityExpressionAccess().getParametersRelationalExpressionParserRuleCall_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new EqualityExpression_OperationsAssignment_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule EqualityExpression ****************/


/************ begin Rule RelationalExpression ****************
 *
 * // Skipped for now. Trouble with overloaded '<' stuff  
 * RelationalExpression returns Expression:
 * 	{Expression} parameters+=AdditiveExpression (operations+=XML_LT parameters+=AdditiveExpression | operations+=XML_GT
 * 	parameters+=AdditiveExpression | operations+=XML_LTEQ parameters+=AdditiveExpression | operations+=XML_GTEQ
 * 	parameters+=AdditiveExpression)?;
 *
 **/

// {Expression} parameters+=AdditiveExpression (operations+=XML_LT parameters+=AdditiveExpression | operations+=XML_GT
// parameters+=AdditiveExpression | operations+=XML_LTEQ parameters+=AdditiveExpression | operations+=XML_GTEQ
// parameters+=AdditiveExpression)?
protected class RelationalExpression_Group extends GroupToken {
	
	public RelationalExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RelationalExpression_ParametersAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRelationalExpressionAccess().getExpressionAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Expression}
protected class RelationalExpression_ExpressionAction_0 extends ActionToken  {

	public RelationalExpression_ExpressionAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getExpressionAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// parameters+=AdditiveExpression
protected class RelationalExpression_ParametersAssignment_1 extends AssignmentToken  {
	
	public RelationalExpression_ParametersAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getParametersAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAdditiveExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RelationalExpression_ExpressionAction_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (operations+=XML_LT parameters+=AdditiveExpression | operations+=XML_GT parameters+=AdditiveExpression |
// operations+=XML_LTEQ parameters+=AdditiveExpression | operations+=XML_GTEQ parameters+=AdditiveExpression)?
protected class RelationalExpression_Alternatives_2 extends AlternativesToken {

	public RelationalExpression_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RelationalExpression_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new RelationalExpression_Group_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new RelationalExpression_Group_2_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// operations+=XML_LT parameters+=AdditiveExpression
protected class RelationalExpression_Group_2_0 extends GroupToken {
	
	public RelationalExpression_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=XML_LT
protected class RelationalExpression_OperationsAssignment_2_0_0 extends AssignmentToken  {
	
	public RelationalExpression_OperationsAssignment_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getOperationsAssignment_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRelationalExpressionAccess().getOperationsXML_LTTerminalRuleCall_2_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRelationalExpressionAccess().getOperationsXML_LTTerminalRuleCall_2_0_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=AdditiveExpression
protected class RelationalExpression_ParametersAssignment_2_0_1 extends AssignmentToken  {
	
	public RelationalExpression_ParametersAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getParametersAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAdditiveExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RelationalExpression_OperationsAssignment_2_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// operations+=XML_GT parameters+=AdditiveExpression
protected class RelationalExpression_Group_2_1 extends GroupToken {
	
	public RelationalExpression_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=XML_GT
protected class RelationalExpression_OperationsAssignment_2_1_0 extends AssignmentToken  {
	
	public RelationalExpression_OperationsAssignment_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getOperationsAssignment_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRelationalExpressionAccess().getOperationsXML_GTTerminalRuleCall_2_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRelationalExpressionAccess().getOperationsXML_GTTerminalRuleCall_2_1_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=AdditiveExpression
protected class RelationalExpression_ParametersAssignment_2_1_1 extends AssignmentToken  {
	
	public RelationalExpression_ParametersAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getParametersAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAdditiveExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RelationalExpression_OperationsAssignment_2_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// operations+=XML_LTEQ parameters+=AdditiveExpression
protected class RelationalExpression_Group_2_2 extends GroupToken {
	
	public RelationalExpression_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getGroup_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=XML_LTEQ
protected class RelationalExpression_OperationsAssignment_2_2_0 extends AssignmentToken  {
	
	public RelationalExpression_OperationsAssignment_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getOperationsAssignment_2_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRelationalExpressionAccess().getOperationsXML_LTEQTerminalRuleCall_2_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRelationalExpressionAccess().getOperationsXML_LTEQTerminalRuleCall_2_2_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=AdditiveExpression
protected class RelationalExpression_ParametersAssignment_2_2_1 extends AssignmentToken  {
	
	public RelationalExpression_ParametersAssignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getParametersAssignment_2_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAdditiveExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RelationalExpression_OperationsAssignment_2_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// operations+=XML_GTEQ parameters+=AdditiveExpression
protected class RelationalExpression_Group_2_3 extends GroupToken {
	
	public RelationalExpression_Group_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getGroup_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_2_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=XML_GTEQ
protected class RelationalExpression_OperationsAssignment_2_3_0 extends AssignmentToken  {
	
	public RelationalExpression_OperationsAssignment_2_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getOperationsAssignment_2_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RelationalExpression_ParametersAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRelationalExpressionAccess().getOperationsXML_GTEQTerminalRuleCall_2_3_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRelationalExpressionAccess().getOperationsXML_GTEQTerminalRuleCall_2_3_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=AdditiveExpression
protected class RelationalExpression_ParametersAssignment_2_3_1 extends AssignmentToken  {
	
	public RelationalExpression_ParametersAssignment_2_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRelationalExpressionAccess().getParametersAssignment_2_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAdditiveExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRelationalExpressionAccess().getParametersAdditiveExpressionParserRuleCall_2_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RelationalExpression_OperationsAssignment_2_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule RelationalExpression ****************/


/************ begin Rule AdditiveExpression ****************
 *
 * AdditiveExpression returns Expression:
 * 	parameters+=MultiplicativeExpression (PLUS parameters+=MultiplicativeExpression | MINUS
 * 	parameters+=MultiplicativeExpression)*;
 *
 **/

// parameters+=MultiplicativeExpression (PLUS parameters+=MultiplicativeExpression | MINUS
// parameters+=MultiplicativeExpression)*
protected class AdditiveExpression_Group extends GroupToken {
	
	public AdditiveExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AdditiveExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAdditiveExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parameters+=MultiplicativeExpression
protected class AdditiveExpression_ParametersAssignment_0 extends AssignmentToken  {
	
	public AdditiveExpression_ParametersAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// (PLUS parameters+=MultiplicativeExpression | MINUS parameters+=MultiplicativeExpression)*
protected class AdditiveExpression_Alternatives_1 extends AlternativesToken {

	public AdditiveExpression_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AdditiveExpression_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// PLUS parameters+=MultiplicativeExpression
protected class AdditiveExpression_Group_1_0 extends GroupToken {
	
	public AdditiveExpression_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_ParametersAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// PLUS
protected class AdditiveExpression_PLUSTerminalRuleCall_1_0_0 extends UnassignedTextToken {

	public AdditiveExpression_PLUSTerminalRuleCall_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getPLUSTerminalRuleCall_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AdditiveExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// parameters+=MultiplicativeExpression
protected class AdditiveExpression_ParametersAssignment_1_0_1 extends AssignmentToken  {
	
	public AdditiveExpression_ParametersAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AdditiveExpression_PLUSTerminalRuleCall_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// MINUS parameters+=MultiplicativeExpression
protected class AdditiveExpression_Group_1_1 extends GroupToken {
	
	public AdditiveExpression_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_ParametersAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MINUS
protected class AdditiveExpression_MINUSTerminalRuleCall_1_1_0 extends UnassignedTextToken {

	public AdditiveExpression_MINUSTerminalRuleCall_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getMINUSTerminalRuleCall_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdditiveExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AdditiveExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// parameters+=MultiplicativeExpression
protected class AdditiveExpression_ParametersAssignment_1_1_1 extends AssignmentToken  {
	
	public AdditiveExpression_ParametersAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdditiveExpressionAccess().getParametersAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAdditiveExpressionAccess().getParametersMultiplicativeExpressionParserRuleCall_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AdditiveExpression_MINUSTerminalRuleCall_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule AdditiveExpression ****************/


/************ begin Rule MultiplicativeExpression ****************
 *
 * MultiplicativeExpression returns Expression:
 * 	parameters+=UnaryExpression (operations+=MULTIPLY parameters+=UnaryExpression | operations+=TML_SEPARATOR
 * 	parameters+=UnaryExpression)*;
 *
 **/

// parameters+=UnaryExpression (operations+=MULTIPLY parameters+=UnaryExpression | operations+=TML_SEPARATOR
// parameters+=UnaryExpression)*
protected class MultiplicativeExpression_Group extends GroupToken {
	
	public MultiplicativeExpression_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MultiplicativeExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMultiplicativeExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parameters+=UnaryExpression
protected class MultiplicativeExpression_ParametersAssignment_0 extends AssignmentToken  {
	
	public MultiplicativeExpression_ParametersAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnaryExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// (operations+=MULTIPLY parameters+=UnaryExpression | operations+=TML_SEPARATOR parameters+=UnaryExpression)*
protected class MultiplicativeExpression_Alternatives_1 extends AlternativesToken {

	public MultiplicativeExpression_Alternatives_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getAlternatives_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MultiplicativeExpression_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// operations+=MULTIPLY parameters+=UnaryExpression
protected class MultiplicativeExpression_Group_1_0 extends GroupToken {
	
	public MultiplicativeExpression_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_ParametersAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=MULTIPLY
protected class MultiplicativeExpression_OperationsAssignment_1_0_0 extends AssignmentToken  {
	
	public MultiplicativeExpression_OperationsAssignment_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MultiplicativeExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMultiplicativeExpressionAccess().getOperationsMULTIPLYTerminalRuleCall_1_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMultiplicativeExpressionAccess().getOperationsMULTIPLYTerminalRuleCall_1_0_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=UnaryExpression
protected class MultiplicativeExpression_ParametersAssignment_1_0_1 extends AssignmentToken  {
	
	public MultiplicativeExpression_ParametersAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnaryExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MultiplicativeExpression_OperationsAssignment_1_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// operations+=TML_SEPARATOR parameters+=UnaryExpression
protected class MultiplicativeExpression_Group_1_1 extends GroupToken {
	
	public MultiplicativeExpression_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_ParametersAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=TML_SEPARATOR
protected class MultiplicativeExpression_OperationsAssignment_1_1_0 extends AssignmentToken  {
	
	public MultiplicativeExpression_OperationsAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getOperationsAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MultiplicativeExpression_Alternatives_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MultiplicativeExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMultiplicativeExpressionAccess().getOperationsTML_SEPARATORTerminalRuleCall_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMultiplicativeExpressionAccess().getOperationsTML_SEPARATORTerminalRuleCall_1_1_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=UnaryExpression
protected class MultiplicativeExpression_ParametersAssignment_1_1_1 extends AssignmentToken  {
	
	public MultiplicativeExpression_ParametersAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMultiplicativeExpressionAccess().getParametersAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getUnaryExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMultiplicativeExpressionAccess().getParametersUnaryExpressionParserRuleCall_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MultiplicativeExpression_OperationsAssignment_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}




/************ end Rule MultiplicativeExpression ****************/


/************ begin Rule UnaryExpression ****************
 *
 * UnaryExpression returns Expression:
 * 	(NOT parameters+=PrimaryExpression | MINUS parameters+=PrimaryExpression) | PrimaryExpression;
 *
 **/

// (NOT parameters+=PrimaryExpression | MINUS parameters+=PrimaryExpression) | PrimaryExpression
protected class UnaryExpression_Alternatives extends AlternativesToken {

	public UnaryExpression_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnaryExpression_PrimaryExpressionParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrimaryExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// NOT parameters+=PrimaryExpression | MINUS parameters+=PrimaryExpression
protected class UnaryExpression_Alternatives_0 extends AlternativesToken {

	public UnaryExpression_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_Group_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnaryExpression_Group_0_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// NOT parameters+=PrimaryExpression
protected class UnaryExpression_Group_0_0 extends GroupToken {
	
	public UnaryExpression_Group_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getGroup_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_ParametersAssignment_0_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NOT
protected class UnaryExpression_NOTTerminalRuleCall_0_0_0 extends UnassignedTextToken {

	public UnaryExpression_NOTTerminalRuleCall_0_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getNOTTerminalRuleCall_0_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// parameters+=PrimaryExpression
protected class UnaryExpression_ParametersAssignment_0_0_1 extends AssignmentToken  {
	
	public UnaryExpression_ParametersAssignment_0_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getParametersAssignment_0_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimaryExpression_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrimaryExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_0_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new UnaryExpression_NOTTerminalRuleCall_0_0_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// MINUS parameters+=PrimaryExpression
protected class UnaryExpression_Group_0_1 extends GroupToken {
	
	public UnaryExpression_Group_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getGroup_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnaryExpression_ParametersAssignment_0_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// MINUS
protected class UnaryExpression_MINUSTerminalRuleCall_0_1_0 extends UnassignedTextToken {

	public UnaryExpression_MINUSTerminalRuleCall_0_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getMINUSTerminalRuleCall_0_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// parameters+=PrimaryExpression
protected class UnaryExpression_ParametersAssignment_0_1_1 extends AssignmentToken  {
	
	public UnaryExpression_ParametersAssignment_0_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getParametersAssignment_0_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimaryExpression_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPrimaryExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getUnaryExpressionAccess().getParametersPrimaryExpressionParserRuleCall_0_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new UnaryExpression_MINUSTerminalRuleCall_0_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}



// PrimaryExpression
protected class UnaryExpression_PrimaryExpressionParserRuleCall_1 extends RuleCallToken {
	
	public UnaryExpression_PrimaryExpressionParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimaryExpression_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(PrimaryExpression_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule UnaryExpression ****************/


/************ begin Rule PrimaryExpression ****************
 *
 * PrimaryExpression returns Expression:
 * 	parameters+=Literal | BRACKET_OPEN parameters+=OrExpression BRACKET_CLOSE;
 *
 **/

// parameters+=Literal | BRACKET_OPEN parameters+=OrExpression BRACKET_CLOSE
protected class PrimaryExpression_Alternatives extends AlternativesToken {

	public PrimaryExpression_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPrimaryExpressionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimaryExpression_ParametersAssignment_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PrimaryExpression_Group_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPrimaryExpressionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// parameters+=Literal
protected class PrimaryExpression_ParametersAssignment_0 extends AssignmentToken  {
	
	public PrimaryExpression_ParametersAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrimaryExpressionAccess().getParametersLiteralParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// BRACKET_OPEN parameters+=OrExpression BRACKET_CLOSE
protected class PrimaryExpression_Group_1 extends GroupToken {
	
	public PrimaryExpression_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPrimaryExpressionAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimaryExpression_BRACKET_CLOSETerminalRuleCall_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// BRACKET_OPEN
protected class PrimaryExpression_BRACKET_OPENTerminalRuleCall_1_0 extends UnassignedTextToken {

	public PrimaryExpression_BRACKET_OPENTerminalRuleCall_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrimaryExpressionAccess().getBRACKET_OPENTerminalRuleCall_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// parameters+=OrExpression
protected class PrimaryExpression_ParametersAssignment_1_1 extends AssignmentToken  {
	
	public PrimaryExpression_ParametersAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPrimaryExpressionAccess().getParametersAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getPrimaryExpressionAccess().getParametersOrExpressionParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new PrimaryExpression_BRACKET_OPENTerminalRuleCall_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// BRACKET_CLOSE
protected class PrimaryExpression_BRACKET_CLOSETerminalRuleCall_1_2 extends UnassignedTextToken {

	public PrimaryExpression_BRACKET_CLOSETerminalRuleCall_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPrimaryExpressionAccess().getBRACKET_CLOSETerminalRuleCall_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PrimaryExpression_ParametersAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule PrimaryExpression ****************/



/************ begin Rule FunctionCall ****************
 *
 * FunctionCall:
 * 	name=FunctionName BRACKET_OPEN parameters+=OrExpression? (COMMA parameters+=OrExpression)* BRACKET_CLOSE;
 *
 **/

// name=FunctionName BRACKET_OPEN parameters+=OrExpression? (COMMA parameters+=OrExpression)* BRACKET_CLOSE
protected class FunctionCall_Group extends GroupToken {
	
	public FunctionCall_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FunctionCall_BRACKET_CLOSETerminalRuleCall_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFunctionCallRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=FunctionName
protected class FunctionCall_NameAssignment_0 extends AssignmentToken  {
	
	public FunctionCall_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFunctionCallAccess().getNameFunctionNameParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFunctionCallAccess().getNameFunctionNameParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// BRACKET_OPEN
protected class FunctionCall_BRACKET_OPENTerminalRuleCall_1 extends UnassignedTextToken {

	public FunctionCall_BRACKET_OPENTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getBRACKET_OPENTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FunctionCall_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// parameters+=OrExpression?
protected class FunctionCall_ParametersAssignment_2 extends AssignmentToken  {
	
	public FunctionCall_ParametersAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getParametersAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FunctionCall_BRACKET_OPENTerminalRuleCall_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (COMMA parameters+=OrExpression)*
protected class FunctionCall_Group_3 extends GroupToken {
	
	public FunctionCall_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FunctionCall_ParametersAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COMMA
protected class FunctionCall_COMMATerminalRuleCall_3_0 extends UnassignedTextToken {

	public FunctionCall_COMMATerminalRuleCall_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getCOMMATerminalRuleCall_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FunctionCall_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FunctionCall_ParametersAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FunctionCall_BRACKET_OPENTerminalRuleCall_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// parameters+=OrExpression
protected class FunctionCall_ParametersAssignment_3_1 extends AssignmentToken  {
	
	public FunctionCall_ParametersAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getParametersAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFunctionCallAccess().getParametersOrExpressionParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new FunctionCall_COMMATerminalRuleCall_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// BRACKET_CLOSE
protected class FunctionCall_BRACKET_CLOSETerminalRuleCall_4 extends UnassignedTextToken {

	public FunctionCall_BRACKET_CLOSETerminalRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getFunctionCallAccess().getBRACKET_CLOSETerminalRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FunctionCall_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new FunctionCall_ParametersAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new FunctionCall_BRACKET_OPENTerminalRuleCall_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule FunctionCall ****************/


/************ begin Rule DateLiteral ****************
 *
 * DateLiteral returns Expression:
 * 	{Expression} NUMBER HASH NUMBER HASH NUMBER HASH NUMBER HASH NUMBER HASH NUMBER;
 *
 **/

// {Expression} NUMBER HASH NUMBER HASH NUMBER HASH NUMBER HASH NUMBER HASH NUMBER
protected class DateLiteral_Group extends GroupToken {
	
	public DateLiteral_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_NUMBERTerminalRuleCall_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDateLiteralAccess().getExpressionAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Expression}
protected class DateLiteral_ExpressionAction_0 extends ActionToken  {

	public DateLiteral_ExpressionAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getExpressionAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// NUMBER
protected class DateLiteral_NUMBERTerminalRuleCall_1 extends UnassignedTextToken {

	public DateLiteral_NUMBERTerminalRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_ExpressionAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// HASH
protected class DateLiteral_HASHTerminalRuleCall_2 extends UnassignedTextToken {

	public DateLiteral_HASHTerminalRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getHASHTerminalRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_NUMBERTerminalRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NUMBER
protected class DateLiteral_NUMBERTerminalRuleCall_3 extends UnassignedTextToken {

	public DateLiteral_NUMBERTerminalRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_HASHTerminalRuleCall_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// HASH
protected class DateLiteral_HASHTerminalRuleCall_4 extends UnassignedTextToken {

	public DateLiteral_HASHTerminalRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getHASHTerminalRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_NUMBERTerminalRuleCall_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NUMBER
protected class DateLiteral_NUMBERTerminalRuleCall_5 extends UnassignedTextToken {

	public DateLiteral_NUMBERTerminalRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_HASHTerminalRuleCall_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// HASH
protected class DateLiteral_HASHTerminalRuleCall_6 extends UnassignedTextToken {

	public DateLiteral_HASHTerminalRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getHASHTerminalRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_NUMBERTerminalRuleCall_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NUMBER
protected class DateLiteral_NUMBERTerminalRuleCall_7 extends UnassignedTextToken {

	public DateLiteral_NUMBERTerminalRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_HASHTerminalRuleCall_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// HASH
protected class DateLiteral_HASHTerminalRuleCall_8 extends UnassignedTextToken {

	public DateLiteral_HASHTerminalRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getHASHTerminalRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_NUMBERTerminalRuleCall_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NUMBER
protected class DateLiteral_NUMBERTerminalRuleCall_9 extends UnassignedTextToken {

	public DateLiteral_NUMBERTerminalRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_HASHTerminalRuleCall_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// HASH
protected class DateLiteral_HASHTerminalRuleCall_10 extends UnassignedTextToken {

	public DateLiteral_HASHTerminalRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getHASHTerminalRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_NUMBERTerminalRuleCall_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// NUMBER
protected class DateLiteral_NUMBERTerminalRuleCall_11 extends UnassignedTextToken {

	public DateLiteral_NUMBERTerminalRuleCall_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getDateLiteralAccess().getNUMBERTerminalRuleCall_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_HASHTerminalRuleCall_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule DateLiteral ****************/


/************ begin Rule Literal ****************
 *
 * Literal returns Expression:
 * 	{Expression} NUMBER | valueString=LITERALSTRING | operations+=FORALL BRACKET_OPEN valueString=LITERALSTRING COMMA
 * 	parameters+=OrExpression BRACKET_CLOSE | parameters+=FunctionCall | expressionType=CURLYOPEN parameters+=OrExpression?
 * 	(COMMA parameters+=OrExpression)* CURLYCLOSE | elements+=NULL | elements+=TODAY | elements+=TRUE | elements+=FALSE |
 * 	parameters+=TmlExpression | parameters+=ExistsTmlExpression | parameters+=MapGetReference | parameters+=DateLiteral;
 *
 **/

// {Expression} NUMBER | valueString=LITERALSTRING | operations+=FORALL BRACKET_OPEN valueString=LITERALSTRING COMMA
// parameters+=OrExpression BRACKET_CLOSE | parameters+=FunctionCall | expressionType=CURLYOPEN parameters+=OrExpression?
// (COMMA parameters+=OrExpression)* CURLYCLOSE | elements+=NULL | elements+=TODAY | elements+=TRUE | elements+=FALSE |
// parameters+=TmlExpression | parameters+=ExistsTmlExpression | parameters+=MapGetReference | parameters+=DateLiteral
protected class Literal_Alternatives extends AlternativesToken {

	public Literal_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLiteralAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_Group_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Literal_ValueStringAssignment_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Literal_Group_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Literal_ParametersAssignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Literal_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Literal_ElementsAssignment_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Literal_ElementsAssignment_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Literal_ElementsAssignment_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Literal_ElementsAssignment_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Literal_ParametersAssignment_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Literal_ParametersAssignment_10(lastRuleCallOrigin, this, 10, inst);
			case 11: return new Literal_ParametersAssignment_11(lastRuleCallOrigin, this, 11, inst);
			case 12: return new Literal_ParametersAssignment_12(lastRuleCallOrigin, this, 12, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLiteralRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Expression} NUMBER
protected class Literal_Group_0 extends GroupToken {
	
	public Literal_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLiteralAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_NUMBERTerminalRuleCall_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// {Expression}
protected class Literal_ExpressionAction_0_0 extends ActionToken  {

	public Literal_ExpressionAction_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getLiteralAccess().getExpressionAction_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// NUMBER
protected class Literal_NUMBERTerminalRuleCall_0_1 extends UnassignedTextToken {

	public Literal_NUMBERTerminalRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLiteralAccess().getNUMBERTerminalRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_ExpressionAction_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// valueString=LITERALSTRING
protected class Literal_ValueStringAssignment_1 extends AssignmentToken  {
	
	public Literal_ValueStringAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getValueStringAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueString",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueString");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// operations+=FORALL BRACKET_OPEN valueString=LITERALSTRING COMMA parameters+=OrExpression BRACKET_CLOSE
protected class Literal_Group_2 extends GroupToken {
	
	public Literal_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLiteralAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_BRACKET_CLOSETerminalRuleCall_2_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// operations+=FORALL
protected class Literal_OperationsAssignment_2_0 extends AssignmentToken  {
	
	public Literal_OperationsAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getOperationsAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("operations",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("operations");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getOperationsFORALLTerminalRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getOperationsFORALLTerminalRuleCall_2_0_0();
			return obj;
		}
		return null;
	}

}

// BRACKET_OPEN
protected class Literal_BRACKET_OPENTerminalRuleCall_2_1 extends UnassignedTextToken {

	public Literal_BRACKET_OPENTerminalRuleCall_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLiteralAccess().getBRACKET_OPENTerminalRuleCall_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_OperationsAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueString=LITERALSTRING
protected class Literal_ValueStringAssignment_2_2 extends AssignmentToken  {
	
	public Literal_ValueStringAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getValueStringAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_BRACKET_OPENTerminalRuleCall_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueString",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueString");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getValueStringLITERALSTRINGTerminalRuleCall_2_2_0();
			return obj;
		}
		return null;
	}

}

// COMMA
protected class Literal_COMMATerminalRuleCall_2_3 extends UnassignedTextToken {

	public Literal_COMMATerminalRuleCall_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLiteralAccess().getCOMMATerminalRuleCall_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_ValueStringAssignment_2_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// parameters+=OrExpression
protected class Literal_ParametersAssignment_2_4 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_2_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Literal_COMMATerminalRuleCall_2_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// BRACKET_CLOSE
protected class Literal_BRACKET_CLOSETerminalRuleCall_2_5 extends UnassignedTextToken {

	public Literal_BRACKET_CLOSETerminalRuleCall_2_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLiteralAccess().getBRACKET_CLOSETerminalRuleCall_2_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_ParametersAssignment_2_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// parameters+=FunctionCall
protected class Literal_ParametersAssignment_3 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new FunctionCall_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getFunctionCallRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersFunctionCallParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// expressionType=CURLYOPEN parameters+=OrExpression? (COMMA parameters+=OrExpression)* CURLYCLOSE
protected class Literal_Group_4 extends GroupToken {
	
	public Literal_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLiteralAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_CURLYCLOSETerminalRuleCall_4_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// expressionType=CURLYOPEN
protected class Literal_ExpressionTypeAssignment_4_0 extends AssignmentToken  {
	
	public Literal_ExpressionTypeAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getExpressionTypeAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("expressionType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("expressionType");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getExpressionTypeCURLYOPENTerminalRuleCall_4_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getExpressionTypeCURLYOPENTerminalRuleCall_4_0_0();
			return obj;
		}
		return null;
	}

}

// parameters+=OrExpression?
protected class Literal_ParametersAssignment_4_1 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Literal_ExpressionTypeAssignment_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// (COMMA parameters+=OrExpression)*
protected class Literal_Group_4_2 extends GroupToken {
	
	public Literal_Group_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLiteralAccess().getGroup_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_ParametersAssignment_4_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// COMMA
protected class Literal_COMMATerminalRuleCall_4_2_0 extends UnassignedTextToken {

	public Literal_COMMATerminalRuleCall_4_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLiteralAccess().getCOMMATerminalRuleCall_4_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Literal_ParametersAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Literal_ExpressionTypeAssignment_4_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// parameters+=OrExpression
protected class Literal_ParametersAssignment_4_2_1 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_4_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_4_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getOrExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersOrExpressionParserRuleCall_4_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Literal_COMMATerminalRuleCall_4_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// CURLYCLOSE
protected class Literal_CURLYCLOSETerminalRuleCall_4_3 extends UnassignedTextToken {

	public Literal_CURLYCLOSETerminalRuleCall_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLiteralAccess().getCURLYCLOSETerminalRuleCall_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Literal_Group_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Literal_ParametersAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Literal_ExpressionTypeAssignment_4_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


// elements+=NULL
protected class Literal_ElementsAssignment_5 extends AssignmentToken  {
	
	public Literal_ElementsAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getElementsAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getElementsNULLTerminalRuleCall_5_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getElementsNULLTerminalRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// elements+=TODAY
protected class Literal_ElementsAssignment_6 extends AssignmentToken  {
	
	public Literal_ElementsAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getElementsAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getElementsTODAYTerminalRuleCall_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getElementsTODAYTerminalRuleCall_6_0();
			return obj;
		}
		return null;
	}

}

// elements+=TRUE
protected class Literal_ElementsAssignment_7 extends AssignmentToken  {
	
	public Literal_ElementsAssignment_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getElementsAssignment_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getElementsTRUETerminalRuleCall_7_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getElementsTRUETerminalRuleCall_7_0();
			return obj;
		}
		return null;
	}

}

// elements+=FALSE
protected class Literal_ElementsAssignment_8 extends AssignmentToken  {
	
	public Literal_ElementsAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getElementsAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLiteralAccess().getElementsFALSETerminalRuleCall_8_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLiteralAccess().getElementsFALSETerminalRuleCall_8_0();
			return obj;
		}
		return null;
	}

}

// parameters+=TmlExpression
protected class Literal_ParametersAssignment_9 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TmlExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTmlExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersTmlExpressionParserRuleCall_9_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// parameters+=ExistsTmlExpression
protected class Literal_ParametersAssignment_10 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExistsTmlExpression_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExistsTmlExpressionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersExistsTmlExpressionParserRuleCall_10_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// parameters+=MapGetReference
protected class Literal_ParametersAssignment_11 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MapGetReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMapGetReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersMapGetReferenceParserRuleCall_11_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// parameters+=DateLiteral
protected class Literal_ParametersAssignment_12 extends AssignmentToken  {
	
	public Literal_ParametersAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLiteralAccess().getParametersAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DateLiteral_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getDateLiteralRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLiteralAccess().getParametersDateLiteralParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}


/************ end Rule Literal ****************/

}
